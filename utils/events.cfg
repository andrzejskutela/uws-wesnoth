#define QQUWS_PRELOAD
	[event]
		name=preload
		first_time_only=no
		
		{VARIABLE xp_mod_set no}
		[lua]
		    code = <<
			uws_translation_table = {}
			available_units = {}
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/champions.lua")
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/mask_file_manipulation.lua")
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/amla.lua")
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/helper.lua")
		    >>
		[/lua]

		[switch]
			variable=uws_game.mode

			[case]
				value=after_classic

				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/after_games.lua")
				    >>
				[/lua]

				[if]
					[variable]
						name=after_games.is_defined
						boolean_equals=yes
					[/variable]
					[then]
						[qquws_reload_progression_table]
						[/qquws_reload_progression_table]
					[/then]
				[/if]
			[/case]
			[case]
				value=after_race

				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/after_games.lua")
				    >>
				[/lua]

				[if]
					[variable]
						name=after_games.is_defined
						boolean_equals=yes
					[/variable]
					[then]
						[qquws_reload_progression_table]
						[/qquws_reload_progression_table]
					[/then]
				[/if]
			[/case]
			[case]
				value=arena

				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/arena.lua")
				    >>
				[/lua]
			[/case]
		[/switch]
	[/event]
#enddef

#define QQUWS_PRESTART BASIC_INCOME BASIC_VILLAGE_INCOME BASIC_VILLAGE_SUPPORT HUMAN_SIDES FILTER_WEST_HUMANS FILTER_EAST_HUMANS FILTER_HUMANS FILTER_APPLY_GLOBALS AI_FILTER HELPER_SIDE XP_MODIFIER
	[event]
		name=prestart
		
		[set_variables]
			name=uws_game
			mode=replace
			[value]
				xp_modifier={XP_MODIFIER}
				basic_income={BASIC_INCOME}
				basic_village_income={BASIC_VILLAGE_INCOME}
				basic_village_total={BASIC_VILLAGE_INCOME}
				basic_village_support={BASIC_VILLAGE_SUPPORT}
			[/value]
		[/set_variables]
		{VARIABLE_OP uws_game.basic_village_total add {BASIC_VILLAGE_SUPPORT}}
		{VARIABLE_OP uws_game.basic_income add 2}
		
		{VARIABLE uws_game.human_sides {HUMAN_SIDES}}
		{VARIABLE uws_game.filter_west_human_sides {FILTER_WEST_HUMANS}}
		{VARIABLE uws_game.filter_east_human_sides {FILTER_EAST_HUMANS}}
		{VARIABLE uws_game.filter_human_sides {FILTER_HUMANS}}
		{VARIABLE uws_game.ai_sides {AI_FILTER}}
		{VARIABLE uws_game.filter_apply_global_specials_sides {FILTER_APPLY_GLOBALS}}
		{VARIABLE uws_game.helper_units_side {HELPER_SIDE}}
		{VARIABLE uws_game.registered_uws_specials ""}
		{VARIABLE uws_game.shared_gold no}
		
		{VARIABLE race_spawn_look_ahead 12}
		{VARIABLE race_shared_view yes}
		{VARIABLE kval_base 0}
		{VARIABLE bonus_strength_kval 1}
		{VARIABLE spawn_west yes}
		{VARIABLE spawn_east yes}

		{INIT_GAME_SETTINGS}
		{INIT_SIDES_DATA}
		
		[set_variables]
			name=after_games
			mode=replace
		[/set_variables]
		[set_variables]
			name=scrollable_items
			mode=append
		[/set_variables]
		[set_variables]
			name=random_translation_table
		[/set_variables]
		[set_variables]
			name=spawn_queue
			mode=append
		[/set_variables]
		[set_variables]
			name=qquws_lasting_effect_information
			mode=replace
		[/set_variables]
		[set_variables]
			name=uws_spawn
			mode=replace
			[value]
				copy_fields="side,x,guard,moves,buff,second_buff,quiet_buff,item,second_item,gold,recruits,recruitment_gold,bulky,beefy,damaged,final_boss,event,second_random,name,second_name,disallow_slash_unguardian,calls_for_help,armored,recruit_armored,recruit_minion,title,title_lc,fast,agile,story_message,story_response,race_points_value,clear_boss_tile_overlay,count,delayed,ai_add_gold,aggressive"
			[/value]
		[/set_variables]
		[set_variables]
			name=uws_spawn_fields
			mode=replace
			[split]
				list=$uws_spawn.copy_fields
				key=name
				separator=","
			[/split]
		[/set_variables]
		
	    {VARIABLE used_items_list ""}
	[/event]
#enddef

#define QQUWS_START GAME_MODE
	[event]
		name=start
		
		{VARIABLE uws_game.mode {GAME_MODE}}
		{INIT_NEW_GAME}
		{GAME_CREATION_OPTIONS}

		[if]
			[variable]
				name=uws_game.mode
				equals=arena
			[/variable]
			[then]
				# all needed BEFORE POST_INIT_NEW_GAME
				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/arena.lua")
				    >>
				[/lua]
				
				[qquws_arena_prepare_data]
					turn=1
					is_random=$uws_game.random_enemies
					wave_mode=$uws_game.arena_mode
					ae_allowed=$random_pool.allow_ae
				[/qquws_arena_prepare_data]
			[/then]
		[/if]

		{POST_INIT_NEW_GAME}
		
		[switch]
			variable=uws_game.mode
			
			[case]
				value=scroll
				
				[fire_event]
					name=scroll_shroud_half_of_map_if_singleplayer
				[/fire_event]
			[/case]
			
			[case]
				value=race

				[fire_event]
					name=race_ensure_two_players
				[/fire_event]
				
				[fire_event]
					name=spawn_race_batch
				[/fire_event]
				
				[fire_event]
					name=print_race_stats
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
				{RACE_RESTRICT_AI_MOVEMENT}
			[/case]
			
			[case]
				value=slash
				
				[fire_event]
					name=spawn_slash_batch
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
				{HNS_GIFT_UNIT_MENU_ITEM}
			[/case]
			
			[case]
				value=after_classic
				
				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/after_games.lua")
				    >>
				[/lua]

				[qquws_generate_after_progression_table]
					style=$after_games.progression
					is_hidden=$after_games.is_info_hidden
				[/qquws_generate_after_progression_table]
				
				[label]
					x=$uws_game.middle
					y=$uws_game.starting_y
					text="<span color='#fafafa' size='large'>Turn 1 Wave 1 (32%)</span>"
				[/label]

				[set_variables]
					name=after_games_boost
					mode=replace
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
				[/set_variables]

				[set_variables]
					name=after_games_boosts_translations
					mode=replace

					[value]
						boost10="10%p stronger"
						boost15="15%p stronger"
						boost20="20%p stronger"
						leader30="30%p leader"
						bulky="Bulky"
						beefy="Beefy"
						armored="Armored"
						agile="Agile"
						fast="Fast"
						aggressive="Aggressive"
						champion="Champion"
						strong_leader="Strong leader"
						minions="Minions"
						slow="Slow"
						poison="Poison"
						lower_damage="Low damage"
						drunk_opponent="Alcohol fumes"
						damage_armor="Reduced armor"
						flat_defense="Flat defense"
						remove_specials="Forgetfulness"
						remove_zoc="Remove ZoC"
						freeze_leader="Freeze opponent"
						improved_damage="Damage boost"
						turtle_up="Turtle up"
						weaker15="15%p weaker"
						weak_minions="Weak minions"
						reheal_own="Reheal own"
						slow_wave="Slow wave"
						easy_targets="Easy targets"
						dragon_heart="Dragon Heart"
						insurance="Insurance"
						discouraged="Discourage"
					[/value]
				[/set_variables]

				[if]
					[variable]
						name=after_games.boosts_mode
						equals=select_mirrored
					[/variable]
					[then]
						[qquws_generate_random_boosts_table]
							var=after_games_boost[1]
							second_var=after_games_boost[3]
							mode=$uws_game.mode
						[/qquws_generate_random_boosts_table]
					[/then]
					[else]
						[qquws_generate_random_boosts_table]
							var=after_games_boost[1]
							mode=$uws_game.mode
						[/qquws_generate_random_boosts_table]

						[qquws_generate_random_boosts_table]
							var=after_games_boost[3]
							mode=$uws_game.mode
						[/qquws_generate_random_boosts_table]
					[/else]
				[/if]

				{VARIABLE after_games_1_boost_i 0}
				{VARIABLE after_games_3_boost_i 0}

				[set_variables]
					name=after_games_boost_info_1
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_boost_info_3
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_unit_translation_table_1
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_unit_translation_table_3
					mode=replace
				[/set_variables]
			[/case]

			[case]
				value=after_race

				{VARIABLE after_games.gates_open no}
				
				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/after_games.lua")
				    >>
				[/lua]

				[qquws_generate_after_progression_table]
					style=$after_games.progression
					is_hidden=$after_games.is_info_hidden
				[/qquws_generate_after_progression_table]

				[qquws_generate_after_race_spawn_table]
					count=$after_games.spawn_count
					race_start_y=$uws_game.race_start_y
					race_first_wave_y=$uws_game.starting_y
					race_finish_y=$uws_game.race_finish_y
					is_hidden=$after_games.is_info_hidden
				[/qquws_generate_after_race_spawn_table]

				[fire_event]
					name=after_race_reprint_labels
				[/fire_event]

				[set_variables]
					name=after_games_boost
					mode=replace
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
					[value]
						dummy=no
					[/value]
				[/set_variables]

				[set_variables]
					name=after_games_boosts_translations
					mode=replace

					[value]
						boost10="10%p stronger"
						boost15="15%p stronger"
						boost20="20%p stronger"
						leader30="30%p leader"
						bulky="Bulky"
						beefy="Beefy"
						armored="Armored"
						agile="Agile"
						fast="Fast"
						champion="Champion"
						strong_leader="Strong leader"
						minions="Minions"
						slow="Slow"
						poison="Poison"
						lower_damage="Low damage"
						drunk_opponent="Alcohol fumes"
						damage_armor="Reduced armor"
						flat_defense="Flat defense"
						remove_specials="Forgetfulness"
						remove_zoc="Remove ZoC"
						freeze_leader="Freeze opponent"
						improved_damage="Damage boost"
						turtle_up="Turtle up"
						weaker15="15%p weaker"
						weak_minions="Weak minions"
						reheal_own="Reheal own"
						slow_wave="Slow wave"
						easy_targets="Easy targets"
						dragon_heart="Dragon Heart"
						insurance="Insurance"
					[/value]
				[/set_variables]

				[qquws_generate_buff_lists]
				[/qquws_generate_buff_lists]

				[qquws_generate_random_boosts_table]
					var=after_games_boost[1]
					mode=$uws_game.mode
				[/qquws_generate_random_boosts_table]

				[qquws_generate_random_boosts_table]
					var=after_games_boost[3]
					mode=$uws_game.mode
				[/qquws_generate_random_boosts_table]

				{VARIABLE after_games_1_boost_i 0}
				{VARIABLE after_games_3_boost_i 0}

				[set_variables]
					name=after_games_boost_info_1
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_boost_info_3
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_unit_translation_table_1
					mode=replace
				[/set_variables]

				[set_variables]
					name=after_games_unit_translation_table_3
					mode=replace
				[/set_variables]

				[if]
					[variable]
						name=after_games.victory_condition
						equals=flag_capture
					[/variable]
					[then]
						[store_locations]
							y=1
							terrain="Ce"
							variable=flag_locations
							mode=always_clear
						[/store_locations]

						[for]
							array=flag_locations
							variable=i
							[do]
								[item]
									x=$flag_locations[$i].x
									y=$flag_locations[$i].y
									halo=flags/wood-elvish-flag-[1~4].png~SCALE(120,120):150
								[/item]
							[/do]
						[/for]
					[/then]
				[/if]
			[/case]

			[case]
				value=arena

				[fire_event]
					name=arena_print_labels
				[/fire_event]
			[/case]

			[case]
				value=pillagers
				
				{TELEPORT_LEADER 1 $uws_game.race_start_y $uws_game.race_finish_y}
				[capture_village]
					side=8
					fire_event=no
					y=1-$uws_game.middle
				[/capture_village]

				[capture_village]
					side=9
					fire_event=no
					y=$uws_game.middle-15
				[/capture_village]

				[store_locations]
					[filter_owner]
						side=8,9
					[/filter_owner]
					variable=all_villages
					mode=always_clear
				[/store_locations]

				[for]
					variable=i
					array=all_villages
					[do]
						[unit]
							type=Peasant
							x=$all_villages[$i].x
							y=$all_villages[$i].y
							side=$all_villages[$i].owner_side
							upkeep=loyal
						[/unit]
					[/do]
				[/for]
			[/case]
		[/switch]
		
		{PLACE_OBJECTS_ON_MAP}
		{UNSYNC_INFO_MENU_ITEM}
		
		[message]
			speaker=narrator
			caption="Coryphée of the Dark Hour"
			image=portraits/uws/chernava.png
		    	message="Welcome to the Ultimate Wesnoth Survival. Today $all_opponents_names decided to take the Wesnoth challenge and we hope to see some great fights on the way.

Good luck, have fun, and show us your wesnoth skills."
		[/message]
	[/event]
	
	[event]
		name=side 8 turn 3
		
		{TIP_OF_THE_DAY}
	[/event]
#enddef

#define QQUWS_NEW_TURN
	[event]
		name=new turn
		first_time_only=no

		[switch]
			variable=uws_game.scroll
			
			[case]
				value=normal
				
				[fire_event]
					name=qq_labels
				[/fire_event]
				
				# scroll forever
				[if]
					[variable]
						name=turn_number
						greater_than=1
					[/variable]
					[then]
						[fire_event]
							name=qq_scroll
						[/fire_event]
					[/then]
				[/if]
			[/case]
			[case]
				value=slow
				
				{VARIABLE check_turn_even $turn_number}
				{VARIABLE_OP check_turn_even modulo 2}
				
				[if]
					[variable]
						name=check_turn_even
						numerical_equals=0
					[/variable]
					[then]
						[fire_event]
							name=qq_push_lava
						[/fire_event]
					[/then]
				[/if]
			[/case]
			[case]
				value=turn_based
				
				[for]
					variable=j
					array=spawn_queue
					[do]
						[if]
							[variable]
								name=spawn_queue[$j].turn
								equals=$turn_number
							[/variable]
							[then]
								{VARIABLE uws_spawn.y $spawn_queue[$j].y}
								{SPAWN_SET_VARIABLES}

								[store_unit_type]
									type=$spawn_queue[$j].type
									variable=spawned_unit_type
									mode=always_clear
								[/store_unit_type]

								{VARIABLE spawning_unit_label $spawned_unit_type.name}

								[if]
									[variable]
										name=spawn_queue[$j].name
										not_equals=""
									[/variable]
									[then]
										{VARIABLE spawning_unit_label $spawn_queue[$j].name}
									[/then]
								[/if]

								[if]
									[variable]
										name=spawn_queue[$j].title
										not_equals=""
									[/variable]
									[then]
										{VARIABLE spawning_unit_label "$spawn_queue[$j].title $spawning_unit_label"}
									[/then]
								[/if]

								[for]
									variable=k
									start=1
									end=$spawn_queue[$j].count
									step=1
									[do]
										[fire_event]
											name=spawn
										[/fire_event]

										[store_unit]
											[filter]
												id=$new_unit_spawn_id
											[/filter]
											
											variable=newly_spawned_unit
											mode=always_clear
										[/store_unit]

										[if]
											[variable]
												name=newly_spawned_unit.side
												greater_than=1
											[/variable]
											[then]
												[modify_unit]
													[filter]
														id=$new_unit_spawn_id
													[/filter]

													[status]
														invulnerable=yes
														petrified=yes
													[/status]

													[object]
														silent=yes
														take_only_once=no
														id=qquws_invulnerable

														[effect]
															apply_to=image_mod
															add="~GS()"
														[/effect]
														[effect]
															apply_to=zoc
															value=no
														[/effect]
													[/object]
												[/modify_unit]

												[store_unit]
													[filter]
														id=$new_unit_spawn_id
													[/filter]
													
													variable=newly_spawned_unit
													mode=always_clear
												[/store_unit]

												[label]
													x=$newly_spawned_unit.x
													y=$newly_spawned_unit.y
													text="<span color='#e3b8b6' size='small'>$spawning_unit_label</span>"
												[/label]
											[/then]
										[/if]
									[/do]
								[/for]
								
								{CLEAR_VARIABLE spawn_queue[$j]}
								{VARIABLE_OP j sub 1}
							[/then]
						[/if]
					[/do]
				[/for]
			[/case]
		[/switch]
		
		[switch]
			variable=uws_game.mode

			[case]
				value=after_classic

				[qquws_calculate_after_games_spawn_variables]
					turn=$turn_number
				[/qquws_calculate_after_games_spawn_variables]
				
				[if]
					[variable]
						name=after_games_is_spawn_turn
						boolean_equals=yes
					[/variable]
					[then]
						[if]
							[variable]
								name=after_games_open_gates
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE middle_tile $uws_game.middle}
								{VARIABLE copy_from $middle_tile}
								{VARIABLE_OP copy_from sub 1}
								
								[store_locations]
									x=$middle_tile
									y="1-$uws_game.race_make_players_opponents_y"
									variable=wall_locations
									mode=always_clear
								[/store_locations]
								
								[foreach]
									array=wall_locations
									variable=wall_tile
									[do]
										[store_locations]
											x=$copy_from
											y=$wall_tile.y
											variable=tile_copy
											mode=always_clear
										[/store_locations]
										
										[terrain]
											x=$middle_tile
											y=$wall_tile.y
											terrain=$tile_copy.terrain
										[/terrain]
									[/do]
								[/foreach]
							[/then]
							[else]
								{VARIABLE bonus_strength_kval $after_games_wave_index}
								[qquws_create_after_copies]
									map_id=$uws_game.map_id
									west_buff=$after_games_3_wave_boost
									east_buff=$after_games_1_wave_boost
								[/qquws_create_after_copies]

								[if]
									[variable]
										name=after_games.boosts_mode
										not_equals=none
									[/variable]
									[then]
										{VARIABLE boost_type $after_games_1_wave_boost}
										{VARIABLE boost_for 4}
										{VARIABLE boost_against 3}
										{VARIABLE own_enemies 2}
										{VARIABLE gold_for 1}
										[fire_event]
											name=after_games_apply_boost
										[/fire_event]

										{VARIABLE boost_type $after_games_3_wave_boost}
										{VARIABLE boost_for 2}
										{VARIABLE boost_against 1}
										{VARIABLE own_enemies 4}
										{VARIABLE gold_for 3}
										[fire_event]
											name=after_games_apply_boost
										[/fire_event]
									[/then]
								[/if]
							[/else]
						[/if]

						[if]
							[variable]
								name=after_games.boosts_mode
								not_equals=none
							[/variable]
							[then]
								[for]
									variable=i
									array=after_games_boost_info_1
									[do]
										{VARIABLE label_y "$( $i + 1 )"}
										[label]
											x,y=1,$label_y
											text="<span color='#ffffff' size='small'>Wave $after_games_boost_info_1[$i].wave|: $after_games_boost_info_1[$i].buff $boost_extra_info_1</span>"
										[/label]
									[/do]
								[/for]

								{VARIABLE label_x "$( $uws_game.edge - 1 )"}
								[for]
									variable=i
									array=after_games_boost_info_3
									[do]
										{VARIABLE label_y "$( $i + 1 )"}

										[label]
											x,y=$label_x,$label_y
											text="<span color='#ffffff' size='small'>Wave $after_games_boost_info_3[$i].wave|: $after_games_boost_info_3[$i].buff $boost_extra_info_3</span>"
										[/label]
									[/do]
								[/for]
							[/then]
						[/if]
					[/then]
				[/if]
			[/case]

			[case]
				value=after_race

				[for]
					start="$( $after_race_spawn_table.length - 1 )"
					end=0
					step=-1
					variable=i
					[do]
						[if]
							[variable]
								name=after_race_spawn_table[$i].spawn_west
								boolean_equals=yes
							[/variable]
							[then]
								[qquws_handle_after_race_spawn]
									spawn_west=yes
									spawn_east=no
									index=$after_race_spawn_table[$i].index
								[/qquws_handle_after_race_spawn]

								{VARIABLE after_race_spawn_table[$i].spawn_west no}
								{VARIABLE after_race_spawn_table[$i].spawned_west yes}
								{VARIABLE after_race_spawn_table[$i].label_west ""}
							[/then]
						[/if]

						[if]
							[variable]
								name=after_race_spawn_table[$i].spawn_east
								boolean_equals=yes
							[/variable]
							[then]
								[qquws_handle_after_race_spawn]
									spawn_west=no
									spawn_east=yes
									index=$after_race_spawn_table[$i].index
								[/qquws_handle_after_race_spawn]

								{VARIABLE after_race_spawn_table[$i].spawn_east no}
								{VARIABLE after_race_spawn_table[$i].spawned_east yes}
								{VARIABLE after_race_spawn_table[$i].label_east ""}
							[/then]
						[/if]
					[/do]
				[/for]

				[fire_event]
					name=after_race_reprint_labels
				[/fire_event]
			[/case]

			[case]
				value=arena

				[qquws_arena_prepare_data]
					turn=$turn_number
					is_random=$uws_game.random_enemies
					wave_mode=$uws_game.arena_mode
					ae_allowed=$random_pool.allow_ae
				[/qquws_arena_prepare_data]

				[if]
					[variable]
						name=arena_is_spawn_turn
						boolean_equals=yes
					[/variable]
					[then]
						[fire_event]
							name=arena_prepare_surprises
						[/fire_event]

						[if]
							[variable]
								name=turn_number
								greater_than=1
							[/variable]
							[then]
								# spawn for turn 1 is handled in start event POST_INIT_NEW_GAME
								# it's a mess, I know...
								[fire_event]
									name=spawn
								[/fire_event]
							[/then]
						[/if]
					[/then]
				[/if]
			[/case]
		[/switch]
		
		[if]
			[have_unit]
				race=AE_arc_thrall_khthon
				
				[not]
					status=qquws_sanitized_thrall
				[/not]
			[/have_unit]
			[then]
				[if]
					[variable]
						name=uws_game.loyal_units
						boolean_equals=yes
					[/variable]
					[then]
						[store_unit]
							[filter]
								race=AE_arc_thrall_khthon
				
								[not]
									status=qquws_sanitized_thrall
								[/not]
							[/filter]
							
							variable=unsanitized_thralls
							mode=always_clear
						[/store_unit]
						
						[foreach]
							array=unsanitized_thralls
							variable=upkeep_thrall
							
							[do]
								[switch]
									variable=upkeep_thrall.level
									
									[case]
										value=0
										{VARIABLE set_thrall_upkeep 0}
									[/case]
									
									[case]
										value=1
										{VARIABLE set_thrall_upkeep 0}
									[/case]
									
									[else]
										{VARIABLE set_thrall_upkeep $upkeep_thrall.level}
										{VARIABLE_OP set_thrall_upkeep sub 1}
									[/else]
								[/switch]
								
								# modify_unit resets on lvlup and unit rebuild but I don't think it matters on thralls
								[modify_unit]
									[filter]
										id=$upkeep_thrall.id
									[/filter]
									
									upkeep=$set_thrall_upkeep
								[/modify_unit]
							[/do]
						[/foreach]
						
						{CLEAR_VARIABLE unsanitized_thralls,set_thrall_upkeep,upkeep_thrall}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						race=AE_arc_thrall_khthon

						[not]
							status=qquws_sanitized_thrall
						[/not]
					[/filter]
					
					[status]
						qquws_sanitized_thrall=yes
					[/status]
					
					[variables]
						items_picked_up=""
						has_item=no
						item_id=""
						has_gold=no
						gold_amount=0
						final_boss=no
						is_lava_safe=no
						placement_y=4
						is_stoic=no
						calls_for_help=no
						recruit_armored=0
						recruit_minion=""
						race_points_value=0
					[/variables]
				[/modify_unit]
			[/then]
		[/if]

		[if]
			[variable]
				name=How_Much_We_Do_Funny_Bonuses
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						[filter_wml]
							[variables]
								updated_loyal=yes
							[/variables]
						[/filter_wml]
					[/filter]

					[variables]
						items_picked_up=""
					[/variables]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=side turn
		first_time_only=no
		
		[switch]
			variable=uws_game.mode

			[case]
				value=pillagers
				
				[if]
					[variable]
						name=side_number
						equals=6
					[/variable]
					[then]
						[modify_unit]
							[filter]
								side=2,3,4
								status=invulnerable
							[/filter]

							[status]
								petrified=no
							[/status]
						[/modify_unit]
					[/then]
				[/if]
			[/case]

			[case]
				value=arena

				[if]
					[variable]
						name=side_number
						greater_than=4
					[/variable]
					[then]
						[store_unit]
							variable=freshly_spawned_units
							kill=no
							[filter]
								side=$side_number
								type=QQUWS_surprise
							[/filter]
						[/store_unit]

						[for]
							array=freshly_spawned_units
							variable=i
							[do]
								{VARIABLE surprise_get_index "$( $side_number - 4 )"}
								{VARIABLE surprise_x $freshly_spawned_units[$i].x}
								{VARIABLE surprise_y $freshly_spawned_units[$i].y}

								[kill]
									id=$freshly_spawned_units[$i].id
									fire_event=no
									animate=no
								[/kill]

								[label]
									x=$surprise_x
									y=$surprise_y
									text=""
								[/label]

								[unit]
									type=$surprises_list[$surprise_get_index].type
									side=$freshly_spawned_units[$i].side
									to_variable=spawning_surprise
									random_traits=no
									random_gender=yes
									upkeep=loyal
									[variables]
										has_gold=yes
										gold_amount=$surprises_list[$surprise_get_index].value
									[/variables]
								[/unit]

								[unstore_unit]
									variable=spawning_surprise
									find_vacant=yes
									x=$surprise_x
									y=$surprise_y
									fire_event=yes
								[/unstore_unit]

								{VARIABLE calculate_handicap_for $surprise_get_index}
								[fire_event]
									name=calculate_handicap
								[/fire_event]

								{VARIABLE new_unit_spawn_id $spawning_surprise.id}
								{VARIABLE new_unit_spawn_quiet_bonus_id ""}
								{VARIABLE new_unit_spawn_minion ""}
								{VARIABLE new_unit_bulky_value 0}
								{VARIABLE new_unit_beefy_value 0}
								{VARIABLE new_unit_armored_value 0}
								{VARIABLE new_unit_fast_value 0}
								{VARIABLE new_unit_agile_value 0}
								{VARIABLE new_unit_aggressive_value 0}
								{VARIABLE new_unit_has_item no}
								{VARIABLE current_random_item_id ""}
								{VARIABLE unit_has_gold yes}
								{VARIABLE new_unit_gold $surprises_list[$surprise_get_index].value}

								[fire_event]
									name=apply_new_unit_bonus
								[/fire_event]
							[/do]
						[/for]
					[/then]
					[else]
						[if]
							[variable]
								name=arena_is_spawn_turn
								boolean_equals=yes
							[/variable]
							[then]
								[if]
									[variable]
										name=sides[$side_number].is_alive
										boolean_equals=yes
									[/variable]
									[then]
										[fire_event]
											name=arena_generate_side_surprises
										[/fire_event]
									[/then]
								[/if]
							[/then]
						[/if]
					[/else]
				[/if]
			[/case]

			[case]
				value=after_race

				[if]
					[variable]
						name=uws_game.ai_sides
						contains=$side_number
					[/variable]
					[then]
						[remove_object]
							side=$side_number
							status=invulnerable
							object_id=qquws_after_games_invulnerable
						[/remove_object]
						
						[modify_unit]
							[filter]
								side=$side_number
								status=invulnerable
							[/filter]
							
							[status]
								invulnerable=no
							[/status]
						[/modify_unit]
					[/then]
				[/if]
			[/case]

			[case]
				value=after_classic
				
				[if]
					[variable]
						name=uws_game.ai_sides
						contains=$side_number
					[/variable]
					[then]
						[remove_object]
							side=$side_number
							status=invulnerable
							object_id=qquws_after_games_invulnerable
						[/remove_object]
						
						[modify_unit]
							[filter]
								side=$side_number
								status=invulnerable
							[/filter]
							
							[status]
								invulnerable=no
							[/status]
						[/modify_unit]
					[/then]
				[/if]

				[if]
					[variable]
						name=uws_game.human_sides
						contains=$side_number
					[/variable]
					[then]
						[if]
							[variable]
								name=after_games_is_preparation_turn
								boolean_equals=yes
							[/variable]
							[then]
								[scroll_to]
									x=$uws_game.middle
									y=$uws_game.starting_y
								[/scroll_to]

								[fire_event]
									name=after_games_wave_preparation
								[/fire_event]
							[/then]
						[/if]
					[/then]
				[/if]
			[/case]
		[/switch]
	[/event]

	[event]
		name=side turn end
		first_time_only=no

		[switch]
			variable=uws_game.mode

			[case]
				value=arena

				[if]
					[variable]
						name=side_number
						less_than=5
					[/variable]
					[then]
						[if]
							[variable]
								name=arena_is_spawn_turn
								boolean_equals=yes
							[/variable]
							[then]
								[kill]
									side=9
									fire_event=no
								[/kill]

								[for]
									variable=i
									start=1
									end=5
									step=1
									[do]
										[label]
											x=$sides[$side_number].arena_recruitment_x
											y="$( $sides[$side_number].arena_recruitment_y + $i )"
											text=""
										[/label]
									[/do]
								[/for]
							[/then]
						[/if]
						
						[store_unit]
							variable=freshly_spawned_units
							kill=no
							[filter]
								side="$( $side_number + 4)"
								status=petrified
								[not]
									type=QQUWS_surprise
								[/not]
							[/filter]
						[/store_unit]

						[for]
							array=freshly_spawned_units
							variable=i
							[do]
								[if]
									[variable]
										name=freshly_spawned_units[$i].variables.unpetrify_turn
										equals=$turn_number
									[/variable]
									[then]
										[label]
											x=$freshly_spawned_units[$i].x
											y=$freshly_spawned_units[$i].y
											text=""
										[/label]

										{VARIABLE freshly_spawned_units[$i].status.petrified no}
										[unstore_unit]
											variable=freshly_spawned_units[$i]
										[/unstore_unit]
									[/then]
									[else]
										[label]
											x=$freshly_spawned_units[$i].x
											y=$freshly_spawned_units[$i].y
											text="<span color='#f0644d'>[Turn $freshly_spawned_units[$i].variables.unpetrify_turn|]</span>"
										[/label]
									[/else]
								[/if]
							[/do]
						[/for]
					[/then]
				[/if]
			[/case]
		[/switch]
	[/event]
	
	[event]
		name=side turn
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
		[/filter_side]
		
		[for]
			variable=item_list_key
			array=scrollable_items
			[do]
				[if]
					[have_unit]
						x=$scrollable_items[$item_list_key].x
						y=$scrollable_items[$item_list_key].y
						side=$side_number
						count=1
					[/have_unit]
					[then]
						[switch]
							variable=scrollable_items[$item_list_key].cat
							[case]
								value="heal"
								
								{VARIABLE uws_heal_amount 8}
								[if]
									[variable]
										name=scrollable_items[$item_list_key].amount
										greater_than=0
									[/variable]
									[then]
										{VARIABLE uws_heal_amount $scrollable_items[$item_list_key].amount}
									[/then]
								[/if]
								
								[modify_unit]
									[filter]
										x=$scrollable_items[$item_list_key].x
										y=$scrollable_items[$item_list_key].y
									[/filter]
										
									[object]
										silent=yes
										id=healing_modification
										take_only_once=no
										
										[effect]
										    apply_to=new_ability
										    [abilities]
											[regenerate]
												value=$uws_heal_amount
												id=uws_object_regenerates
												name="regenerates"
												description= _ "The unit will heal itself $uws_heal_amount HP per turn. If it is poisoned, it will remove the poison instead of healing."
												affect_self=yes
												poison=cured
											[/regenerate]
										    [/abilities]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
						[/switch]
					[/then]
				[/if]
			[/do]
		[/for]
	[/event]
#enddef

#define QQUWS_TURN_END
	[event]
		name=turn end
		first_time_only=no
		
		[switch]
			variable=uws_game.mode
			
			[case]
				value=after_classic
				
				[label]
					x=$uws_game.middle
					y=$uws_game.starting_y
					text="<span color='#fafafa' size='large'>$after_games_info_text</span>"
				[/label]
			[/case]

			[case]
				value=arena

				{VARIABLE arena_wave_info $arena_nextwave_info}
			[/case]

			[case]
				value=pillagers

				[store_unit]
					[filter]
						side=2,3,4
						status=invulnerable
					[/filter]
					
					variable=newly_spawned_units
					mode=always_clear
				[/store_unit]

				[for]
					variable=i
					array=newly_spawned_units
					[do]
						[label]
							x=$newly_spawned_units[$i].x
							y=$newly_spawned_units[$i].y
							text=""
						[/label]
					[/do]
				[/for]

				[remove_object]
					side=2,3,4
					status=invulnerable
					object_id=qquws_invulnerable
				[/remove_object]

				[modify_unit]
					[filter]
						side=2,3,4
						status=invulnerable
					[/filter]

					[status]
						invulnerable=no
					[/status]
				[/modify_unit]
			[/case]
		[/switch]
		
		[if]
			[variable]
				name=xp_mod_set
				boolean_equals=no
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_xp_mod
				[/fire_event]
			[/then]
		[/if]

		[if]
			[variable]
				name=uws_game.mode
				equals=after_classic
			[/variable]
			[then]
				[if]
					[variable]
						name=after_games_clear_bonuses_turn
						boolean_equals=yes
					[/variable]
					[then]
						[remove_object]
							side=1,3
							object_id=qquws_after_boost
						[/remove_object]

						[remove_trait]
							side=1,3
							trait_id=qquws_after_boost_trait
						[/remove_trait]	
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_DIE
	[event]
		name=last breath
		first_time_only=no

		# @TODO this whole unit_revives_from_awoken_ability section can be completely removed and priority on die event below
		# 		set back to -5 once the underlying wesnoth issue is fixed https://github.com/wesnoth/wesnoth/issues/9225

		# keep this separately in last breath event because awake_candidates variable gets cleared
		# and do for loop instead of [if][have_unit] because [have_unit] matches only units with hp > 0
		{VARIABLE unit_revives_from_awoken_ability no}
		[for]
            array=awake_candidates
            variable=i

            [do]
                 [if]
                    [variable]
                        name=awake_candidates[$i].id
                        equals=$unit.id
                    [/variable]
                    [then]
                        {VARIABLE unit_revives_from_awoken_ability yes}
                        [break][/break]
                    [/then]
                [/if]
            [/do]
        [/for]
	[/event]

	[event]
		name=die
		first_time_only=no
#		priority=-5
		
		[if]
			# bypass all thrall bugs by ignoring the second die event
			[variable]
				name=thrall_to_be.id
				equals=""
			[/variable]
			[and]
				[variable]
					name=unit.hitpoints
					less_than=1
				[/variable]
			[/and]
			[then]
				[if]
					[variable]
						name=uws_game.human_sides
						contains=$unit.side
					[/variable]
					[then]
						{VARIABLE_OP sides[$unit.side|].lost_all add 1}

						[if]
							[variable]
								name=unit.variables.is_recruited_unit
								boolean_equals=yes
							[/variable]
							[or]
								[variable]
									name=unit.canrecruit
									boolean_equals=yes
								[/variable]
							[/or]
							[then]
								{VARIABLE_OP sides[$unit.side|].lost_recruited add 1}
							[/then]
						[/if]
					[/then]
				[/if]

				[if]
					[variable]
						name=uws_game.human_sides
						contains=$second_unit.side
					[/variable]
					[then]
						{VARIABLE_OP sides[$second_unit.side|].kills add 1}
						
						[if]
							[variable]
								name=uws_game.mode
								equals=race
							[/variable]
							[and]
								[variable]
									name=unit.variables.race_points_value
									greater_than=0
								[/variable]
							[/and]
							[then]
								[if]
									[variable]
										name=unit.side
										less_than=5
									[/variable]
									[then]
										[if]
											[variable]
												name=second_unit.side
												numerical_equals=8
											[/variable]
											[then]
												{VARIABLE_OP sides[8].kills_race_value add $unit.variables.race_points_value}
											[/then]
											[else]
												{VARIABLE_OP sides[9].kills_race_opposite add $unit.variables.race_points_value}
											[/else]
										[/if]
									[/then]
									[else]
										[if]
											[variable]
												name=second_unit.side
												numerical_equals=8
											[/variable]
											[then]
												{VARIABLE_OP sides[8].kills_race_opposite add $unit.variables.race_points_value}
											[/then]
											[else]
												{VARIABLE_OP sides[9].kills_race_value add $unit.variables.race_points_value}
											[/else]
										[/if]
									[/else]
								[/if]
								
								[fire_event]
									name=print_race_stats
								[/fire_event]
							[/then]
						[/if]

						[if]
							[variable]
								name=uws_game.mode
								equals=slash
							[/variable]
							[then]
								[fire_event]
									name=print_slash_stats
								[/fire_event]
							[/then]
						[/if]

						[if]
							[variable]
								name=uws_game.mode
								equals=pillagers
							[/variable]
							[and]
								[variable]
									name=unit.variables.race_points_value
									greater_than=0
								[/variable]
							[/and]
							[then]
								{VARIABLE_OP sides[8].kills_race_value add $unit.variables.race_points_value}
								
								[fire_event]
									name=print_pillagers_stats
								[/fire_event]
							[/then]
						[/if]
						
						[if]
							[variable]
								name=unit.variables.is_zero_xp_unit
								boolean_not_equals=yes
							[/variable]
							[then]
								[if]
									[variable]
										name=second_unit.variables.kills
										less_than=1
									[/variable]
									[then]
										[modify_unit]
											[filter]
												id=$second_unit.id
											[/filter]
											
											[variables]
												kills=1
												kills_value=$unit.cost
												promotion_level=0
											[/variables]
										[/modify_unit]
									[/then]
									[else]
										{VARIABLE current_kills $second_unit.variables.kills}
										{VARIABLE_OP current_kills add 1}
										{VARIABLE current_value $second_unit.variables.kills_value}
										{VARIABLE_OP current_value add $unit.cost}
										[modify_unit]
											[filter]
												id=$second_unit.id
											[/filter]
											
											[variables]
												kills=$current_kills
												kills_value=$current_value
											[/variables]
										[/modify_unit]
										
										[if]
											[variable]
												name=current_kills
												greater_than=64
											[/variable]
											[then]
												{VARIABLE expanded_xpmod_rules_for_side $second_unit.side}
												[if]
													[variable]
														name=uws_game.mode
														equals=slash
													[/variable]
													[then]
														{VARIABLE expanded_xpmod_rules_for_side 8}
													[/then]
												[/if]
												
												[if]
													[variable]
														name=sides[$expanded_xpmod_rules_for_side|].enable_expanded_xpmod_rules
														boolean_equals=no
													[/variable]
													[then]
														{VARIABLE sides[$expanded_xpmod_rules_for_side|].enable_expanded_xpmod_rules yes}
													[/then]
												[/if]
												
												{CLEAR_VARIABLE expanded_xpmod_rules_for_side}
											[/then]
										[/if]
									[/else]
								[/if]
								
								[fire_event]
									name=promote_unit
									[primary_unit]
									    id=$second_unit.id
									[/primary_unit]
								[/fire_event]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.has_gold
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE extra_gold $unit.variables.gold_amount}
					
						[if]
							[variable]
								name=uws_game.shared_gold
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE_OP extra_gold divide 2}
								{VARIABLE_OP extra_gold round floor}
								
								[gold]
									side=8
									amount=$extra_gold
								[/gold]
								
								[gold]
									side=9
									amount=$extra_gold
								[/gold]
							[/then]
							[else]
								[gold]
									side=$second_unit.side
									amount=$extra_gold
								[/gold]
							[/else]
						[/if]
						
						[floating_text]
							x,y=$x1,$y1
							text="<span color='#ebae2a' size='large'>+$extra_gold gold!</span>"
						[/floating_text]
					[/then]
				[/if]

				[if]
					[variable]
						name=unit.variables.gives_gold_to_ai
						boolean_equals=yes
					[/variable]
					[and]
						[not]
							[variable]
								name=uws_game.human_sides
								contains=$unit.side
							[/variable]
						[/not]
					[/and]
					[then]
						[gold]
							side=$unit.side
							amount=$unit.variables.ai_gold_amount
						[/gold]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.has_item
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE render_new_item yes}
						{VARIABLE item_x $x1}
						{VARIABLE item_y $y1}
						{VARIABLE item_type_id $unit.variables.item_id}
						{VARIABLE drop_object_id "item_$unit.id"}
					
						[fire_event]
							name=drop_new_item
						[/fire_event]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.items_picked_up
						not_equals=""
					[/variable]
					[then]
						{VARIABLE drop_unit_items yes}

						[if]
							[have_unit]
								ability=qquws_treats_wounded
								[filter_adjacent]
									is_enemy=no
									id=$unit.id
								[/filter_adjacent]
							[/have_unit]
							[then]
								{VARIABLE drop_unit_items no}
							[/then]
						[/if]

						[if]
							[variable]
								name=unit_revives_from_awoken_ability
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE drop_unit_items no}
							[/then]
						[/if]

						[if]
							[variable]
								name=unit.variables.updated_loyal
								boolean_equals=yes
							[/variable]
							[and]
								[variable]
									name=How_Much_We_Do_Funny_Bonuses
									greater_than=0
								[/variable]
							[/and]
							[then]
								{VARIABLE drop_unit_items no}
							[/then]
						[/if]


						[if]
							[variable]
								name=drop_unit_items
								boolean_equals=yes
							[/variable]
							[then]
								[set_variables]
									name=unit_items_ids
									mode=replace
									[split]
										list=$unit.variables.items_picked_up
										key=item
										separator=","
									[/split]
								[/set_variables]
								
								{VARIABLE render_new_item yes}
								{VARIABLE item_x $x1}
								{VARIABLE item_y $y1}
								
								[for]
									variable=i
									array=unit_items_ids
									[do]
										{VARIABLE item_type_id $unit_items_ids[$i].item}
										{VARIABLE drop_object_id "item_$i|_$unit.id"}
										
										[fire_event]
											name=drop_new_item
										[/fire_event]
									[/do]
								[/for]
							[/then]
						[/if]

						{CLEAR_VARIABLE drop_unit_items}
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.canrecruit
						boolean_equals=yes
					[/variable]
					[and]
						[variable]
							name=uws_game.human_sides
							contains=$unit.side
						[/variable]
					[/and]
					[then]
						{VARIABLE side_is_dead no}
						
						[if]
							[variable]
								name=uws_game.leader_can_die
								boolean_equals=yes
							[/variable]
							[then]
								[if]
									[have_unit]
										side=$unit.side
										[not]
											id=$unit.id
										[/not]
										[not]
											ability=qquws_requires_escorting
										[/not]
										count=0
									[/have_unit]
									[then]
										{VARIABLE side_is_dead yes}
									[/then]
									[else]
										[store_unit]
											[filter]
												side=$unit.side
												[not]
													id=$unit.id
												[/not]
												[not]
													ability=qquws_requires_escorting
												[/not]
											[/filter]
											
											variable=available_units
											mode=always_clear
										[/store_unit]
										
										[fire_event]
											name=select_new_side_leader

											[primary_unit]
												id=$available_units[0].id
											[/primary_unit]

											[secondary_unit]
												id=$unit.id
											[/secondary_unit]
										[/fire_event]
										{CLEAR_VARIABLE available_units}

										[if]
											[have_unit]
												ability=qquws_treats_wounded
												[filter_adjacent]
													is_enemy=no
													id=$unit.id
												[/filter_adjacent]
											[/have_unit]
											[then]
												[fire_event]
													name=handle_unit_sent_to_hospital

													[primary_unit]
														id=$unit.id
													[/primary_unit]
												[/fire_event]
											[/then]
										[/if]
									[/else]
								[/if]
							[/then]
							[else]
								[if]
									[have_unit]
										side=$unit.side
										trait=qquws_distinguished
										[not]
											id=$unit.id
										[/not]
									[/have_unit]
									[then]
										[store_unit]
											[filter]
												side=$unit.side
												trait=qquws_distinguished
												[not]
													id=$unit.id
												[/not]
											[/filter]
											
											variable=available_units
											mode=always_clear
										[/store_unit]

										[fire_event]
											name=select_new_side_leader

											[primary_unit]
												id=$available_units[0].id
											[/primary_unit]

											[secondary_unit]
												id=$unit.id
											[/secondary_unit]
										[/fire_event]

										[floating_text]
											x,y=$available_units[0].x,$available_units[0].y
											text="<span color='#00ff00' size='medium'>Distinguished!</span>"
										[/floating_text]

										{CLEAR_VARIABLE available_units}

										[if]
											[have_unit]
												ability=qquws_treats_wounded
												[filter_adjacent]
													is_enemy=no
													id=$unit.id
												[/filter_adjacent]
											[/have_unit]
											[then]
												[fire_event]
													name=handle_unit_sent_to_hospital

													[primary_unit]
														id=$unit.id
													[/primary_unit]
												[/fire_event]
											[/then]
										[/if]
									[/then]
									[else]
										{VARIABLE side_is_dead yes}
									[/else]
								[/if]
							[/else]
						[/if]
						
						[if]
							[variable]
								name=side_is_dead
								boolean_equals=yes
							[/variable]
							[then]
								{FLASH_WHITE ()}
								{VARIABLE dead_unit_side $unit.side}
								{VARIABLE leader_name $sides[$dead_unit_side|].leader_name}
								
								[modify_unit]
									[filter]
										id=$second_unit.id
									[/filter]
									
									[object]
										silent=yes
										duration=turn
										
										[effect]
										    apply_to=image_mod
										    add="~R(255)"
										[/effect]
									[/object]
								[/modify_unit]
								
								[scroll_to]
									x=$x2
									y=$y2
								[/scroll_to]
								
								[message]
									speaker=narrator
									caption="Emissary of Death"
									image=portraits/trolls/troll-hero.png
									message="$leader_name challenged the Wesnoth Survival and failed. The vultures will make your bones shine in the sun."
								[/message]
								
								[kill]
									side=$dead_unit_side
								[/kill]
								
								{VARIABLE sides[$dead_unit_side|].is_alive no}

								{VARIABLE is_true_pvp no}
								[switch]
									variable=uws_game.mode

									[case]
										value=arena

										{VARIABLE_OP no_of_players_present sub 1}
									[/case]

									[case]
										value=slash

										{VARIABLE uws_game.single_player_game yes}
									[/case]

									[case]
										value=after_classic

										{VARIABLE is_true_pvp yes}
									[/case]

									[case]
										value=race

										{VARIABLE is_true_pvp yes}
									[/case]
								[/switch]
								
								[if]
									[variable]
										name=is_true_pvp
										boolean_equals=yes
									[/variable]
									[then]
										{VARIABLE winning_side $uws_game.filter_west_human_sides}
										[if]
											[variable]
												name=dead_unit_side
												numerical_equals=$uws_game.filter_west_human_sides
											[/variable]
											[then]
												{VARIABLE winning_side $uws_game.filter_east_human_sides}
											[/then]
										[/if]
										
										[fire_event]
											name=trigger_race_victory
										[/fire_event]
									[/then]
									[else]
										[store_gold]
											side=$unit.side
											variable=players_gold
										[/store_gold]

										[if]
											[variable]
												name=players_gold
												greater_than=0
											[/variable]
											[then]
												[item]
													x=$unit.x
													y=$unit.y
													image="items/gold-coins-small.png"
												[/item]
												
												[set_variables]
													name=scrollable_items
													mode=append
													[value]
														cat=gold_chest
														x=$unit.x
														y=$unit.y
														image="items/gold-coins-small.png"
														amount=$players_gold
														render=yes
													[/value]
												[/set_variables]
											[/then]
										[/if]

										{VARIABLE uws_game.shared_gold no}
									[/else]
								[/if]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.final_boss
						boolean_equals=yes
					[/variable]
					[then]
						{FLASH_WHITE ()}
						
						[message]
						    speaker=narrator
						    caption="Grand Marshal of Wesnoth, Commander of Legions"
						    image="portraits/humans/marshal.png"
						    message="Congratulations! You have managed to defeat the $uws_game.final_boss_name in a clean battle. May peace and prosperity come back to these lands!"
						[/message]

						[if]
							[variable]
								name=uws_game.mode
								equals=slash
							[/variable]
							[and]
								[variable]
									name=uws_game.difficulty_readable
									equals=Hardcore
								[/variable]
							[/and]
							[and]
								[variable]
									name=uws_game.suid
									not_equals=""
								[/variable]
							[/and]
							[then]
								[qquws_decode_secret]
									message=$uws_game.suid
									key=qq4bwf
									var_name=qquws_secret
								[/qquws_decode_secret]

								[message]
								    speaker=narrator
								    caption="Grand Marshal of Wesnoth, Commander of Legions"
								    image="portraits/humans/marshal.png"
								    side_for=$second_unit.side
								    message="As important a victory as this is, there is still one more menace to defeat. Remember the secret word <span color='#c94d9f'>$qquws_secret</span> and when you are ready, you can challenge the final enemy!"
								[/message]
							[/then]
						[/if]
						
						[kill]
							[not]
								side=$uws_game.filter_human_sides
							[/not]
						[/kill]
					[/then]
				[/if]

				[if]
					[variable]
						name=uws_game.mode
						equals=after_race
					[/variable]
					[and]
						[variable]
							name=after_games.victory_condition
							equals=pvp
						[/variable]
					[/and]
					[and]
						[variable]
							name=after_games.gates_open
							boolean_equals=no
						[/variable]
					[/and]
					[then]
						[fire_event]
							name=after_race_check_waves_defeated

							[primary_unit]
								id=$second_unit.id
							[/primary_unit]
						[/fire_event]

						[if]
							[variable]
								name=all_waves_defeated
								boolean_equals=yes
							[/variable]
							[then]
								[message]
									speaker=narrator
									caption="Orcish Frontliner"
									image="portraits/orcs/warrior.webp"
									message="As $winning_leader has cleared his last enemy, all remaining waves spawn immediately and the gates between the players open!."
								[/message]

								[for]
									start=0
									end="$( $after_race_spawn_table.length - 1 )"
									step=1
									variable=i
									[do]
										[if]
											[variable]
												name=after_race_spawn_table[$i].$losing_player_done_key
												boolean_equals=no
											[/variable]
											[and]
												[variable]
													name=after_race_spawn_table[$i].$losing_player_spawn_key
													boolean_equals=no
												[/variable]
											[/and]
											[then]
												{VARIABLE after_race_index $i}

												[if]
													[variable]
														name=winning_side
														equals=1
													[/variable]
													[then]
														[qquws_handle_after_race_spawn]
															spawn_west=no
															spawn_east=yes
															index=$after_race_spawn_table[$i].index
														[/qquws_handle_after_race_spawn]

														{VARIABLE after_race_spawn_table[$i].spawn_east no}
														{VARIABLE after_race_spawn_table[$i].spawned_east yes}
														{VARIABLE after_race_spawn_table[$i].label_east ""}
													[/then]
													[else]
														[qquws_handle_after_race_spawn]
															spawn_west=yes
															spawn_east=no
															index=$after_race_spawn_table[$i].index
														[/qquws_handle_after_race_spawn]

														{VARIABLE after_race_spawn_table[$i].spawn_west no}
														{VARIABLE after_race_spawn_table[$i].spawned_west yes}
														{VARIABLE after_race_spawn_table[$i].label_west ""}
													[/else]
												[/if]
											[/then]
										[/if]
									[/do]
								[/for]

								[fire_event]
									name=after_race_reprint_labels
								[/fire_event]

								{VARIABLE sides[$losing_player_side|].race_high_point 1}

								{VARIABLE middle_tile $uws_game.middle}
								{VARIABLE copy_from $middle_tile}
								{VARIABLE_OP copy_from sub 1}
								{VARIABLE open_from "$( $uws_game.starting_y - 4 )"}
								
								[store_locations]
									x=$middle_tile
									y="$open_from|-99"
									variable=wall_locations
									mode=always_clear
								[/store_locations]
								
								[foreach]
									array=wall_locations
									variable=wall_tile
									[do]
										[store_locations]
											x=$copy_from
											y=$wall_tile.y
											variable=tile_copy
											mode=always_clear
										[/store_locations]
										
										[terrain]
											x=$middle_tile
											y=$wall_tile.y
											terrain=$tile_copy.terrain
										[/terrain]
									[/do]
								[/foreach]

								{VARIABLE after_games.gates_open yes}
							[/then]
						[/if]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_MOVETO
	[event]
		name=moveto
		first_time_only=no
		
		[filter]
			side=$uws_game.filter_human_sides
		[/filter]
		
		[switch]
			variable=uws_game.mode
			
			[case]
				value=race
				
				[if]
					[variable]
						name=y1
						less_than=$sides[$side_number|].race_high_point
					[/variable]
					[then]
						{VARIABLE open_world_spawn_reiteration_needed no}

						[if]
							[variable]
								name=is_single_high_point_cutoff
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE sides[8].race_high_point $y1}
								{VARIABLE sides[9].race_high_point $y1}
							[/then]
							[else]
								{VARIABLE sides[$side_number|].race_high_point $y1}
							[/else]
						[/if]
						
						[if]
							[variable]
								name=y1
								less_than=$uws_game.race_make_players_opponents_y
							[/variable]
							[and]
								[variable]
									name=race_shared_view
									boolean_equals=yes
								[/variable]
							[/and]
							[then]
								{VARIABLE race_shared_view no}
								
								[modify_side]
									side=8
									team_name=West
								[/modify_side]
								[modify_side]
									side=9
									team_name=East
								[/modify_side]
								
								[message]
									speaker=narrator
									caption="Guardian of Bog"
									image="portraits/uws/striker.png"
									message="As the players are approaching the end of the race, we will make their moves hidden to each other!"
								[/message]
								
								{VARIABLE is_single_high_point_cutoff yes}
								{VARIABLE sides[8].race_high_point $uws_game.race_finish_y}
								{VARIABLE sides[9].race_high_point $uws_game.race_finish_y}
							[/then]
						[/if]
						
						[fire_event]
							name=spawn_race_batch
						[/fire_event]

						[if]
							[variable]
								name=open_world_spawn_reiteration_needed
								boolean_equals=yes
							[/variable]
							[then]
								# as extremely ugly as it is it helps with edge cases related to calls_for_help and boss spawns and moving the race_high_point inside spawn event
								[fire_event]
									name=spawn_race_batch
								[/fire_event]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=y1
						equals=$uws_game.race_finish_y
					[/variable]
					[and]
						[variable]
							name=x1
							equals=$uws_game.middle
						[/variable]
					[/and]
					[and]
						[variable]
							name=unit.canrecruit
							boolean_equals=yes
						[/variable]
					[/and]
					[then]
						{VARIABLE winning_side $side_number}
						[fire_event]
							name=trigger_race_victory
						[/fire_event]
					[/then]
				[/if]
			[/case]
			
			[case]
				value=slash
				
				[if]
					[variable]
						name=y1
						less_than=$sides[8].race_high_point
					[/variable]
					[then]
						{VARIABLE open_world_spawn_reiteration_needed no}
						{VARIABLE sides[8].race_high_point $y1}
						
						[fire_event]
							name=spawn_slash_batch
						[/fire_event]

						[if]
							[variable]
								name=open_world_spawn_reiteration_needed
								boolean_equals=yes
							[/variable]
							[then]
								# as extremely ugly as it is it helps with edge cases related to calls_for_help and boss spawns and moving the race_high_point inside spawn event
								[fire_event]
									name=spawn_slash_batch
								[/fire_event]
							[/then]
						[/if]
					[/then]
				[/if]
			[/case]

			[case]
				value=after_race

				[if]
					[variable]
						name=y1
						less_than=$sides[$side_number|].race_high_point
					[/variable]
					[then]
						{VARIABLE side_key spawn_east}
						{VARIABLE side_done_key spawned_east}
						[if]
							[variable]
								name=side_number
								equals=1
							[/variable]
							[then]
								{VARIABLE side_key spawn_west}
								{VARIABLE side_done_key spawned_west}
							[/then]
						[/if]

						[for]
							start=0
							end="$( $after_race_spawn_table.length - 1 )"
							step=1
							variable=i
							[do]
								[if]
									[variable]
										name=after_race_spawn_table[$i].$side_done_key
										boolean_equals=no
									[/variable]
									[and]
										[variable]
											name=y1
											less_than_equal_to=$after_race_spawn_table[$i].y
										[/variable]
									[/and]
									[and]
										[variable]
											name=after_race_spawn_table[$i].$side_key
											boolean_equals=no
										[/variable]
									[/and]
									[then]
										{VARIABLE after_race_spawn_table[$i].$side_key yes}
										{VARIABLE after_race_index $i}
										[fire_event]
											name=after_race_spawn_threshold_crossed
										[/fire_event]
									[/then]
								[/if]
							[/do]
						[/for]

						{VARIABLE sides[$side_number|].race_high_point $y1}
					[/then]
				[/if]

				[if]
					[variable]
						name=y1
						equals=1
					[/variable]
					[and]
						[variable]
							name=after_games.victory_condition
							equals=flag_capture
						[/variable]
					[/and]
					[then]
						[fire_event]
							name=after_race_check_waves_defeated

							[primary_unit]
								x,y=$x1,$y1
							[/primary_unit]
						[/fire_event]

						[fire_event]
							name=after_race_check_win

							[primary_unit]
								x,y=$x1,$y1
							[/primary_unit]
						[/fire_event]
					[/then]
				[/if]
			[/case]
		[/switch]
		
		{VARIABLE allow_undo yes}
		
		[for]
			variable=item_list_key
			array=scrollable_items
			[do]
				[if]
					[variable]
						name=scrollable_items[$item_list_key].x
						equals=$x1
					[/variable]
					[and]
						[variable]
							name=scrollable_items[$item_list_key].y
							equals=$y1
						[/variable]
					[/and]
					[then]
						[switch]
							variable=scrollable_items[$item_list_key].cat
							[case]
								value="item"

								{VARIABLE allow_item_pickup yes}
								[if]
									[variable]
										name=unit.type
										contains="AE_arc_phantom_Vapor_"
									[/variable]
									[or]
										[variable]
											name=unit.race
											equals="AE_arc_thrall_khthon"
										[/variable]
									[/or]
									[or]
										[variable]
											name=unit.variables.updated_loyal
											boolean_equals=yes
										[/variable]
									[/or]
									[then]
										{VARIABLE allow_item_pickup no}
									[/then]
								[/if]
								
								[if]
									[variable]
										name=allow_item_pickup
										boolean_equals=yes
									[/variable]
									[then]
										[fire_event]
											name=recalculate_items_count_for_unit
											[primary_unit]
												x,y=$x1,$y1
											[/primary_unit]
										[/fire_event]
										
										[if]
									    		[variable]
									    			name=items_count
									    			less_than=$uws_game.max_items_per_unit
									    		[/variable]
									    		[then]
									    			{VARIABLE item_type_tmp $scrollable_items[$item_list_key].type}
									    			
									    			[if]
									    				[variable]
									    					name=unit_item_list
									    					contains=$item_type_tmp
									    				[/variable]
									    				[then]
									    					[message]
														    speaker=narrator
														    side_for=$side_number
														    message="This unit cannot pick this item up. You already carry $items_steps[1].$item_type_tmp|."
														    image=$scrollable_items[$item_list_key].image
														[/message]
									    				[/then]
									    				[else]
														{SHOW_ITEM_PICKUP_MESSAGE $item_type_tmp $scrollable_items[$item_list_key].image "<span color='#db301d' size='large'>$items_steps[1].$item_type_tmp</span>
$items_steps[4].$item_type_tmp

$items_steps[6].$item_type_tmp

Do you want to pick it up?"}
									    				[/else]
									    			[/if]
											[/then]
											[else]
												[message]
												    speaker=narrator
												    side_for=$side_number
												    message="This unit cannot pick this item up, it already carries enough."
												    image=$scrollable_items[$item_list_key].image
												[/message]
											[/else]
										[/if]
									[/then]
									[else]
										[message]
										    speaker=narrator
										    side_for=$side_number
										    message="Enthralled units, vapours, and bonus spam copies cannot pick any items due to their unique nature."
										    image=$scrollable_items[$item_list_key].image
										[/message]
									[/else]
								[/if]
							[/case]
							
							[case]
								value="hidden_unit"
								
								{VARIABLE hidden_unit_id "hidden_unit_$turn_number|_$side_number|_$x1"}
								[unit]
									side=$side_number
									type=$scrollable_items[$item_list_key].type
									id=$hidden_unit_id
									x=$x1
									y=$y1
									passable=yes
									random_traits=no
									[modifications]
										{TRAIT_INTELLIGENT}
										{TRAIT_QUICK}
									[/modifications]
								[/unit]
								
								[message]
									id=$hidden_unit_id
									message=$scrollable_items[$item_list_key].message
								[/message]
								
								[modify_unit]
									[filter]
										id=$hidden_unit_id
									[/filter]
									
									[object]
										silent=yes
										
										[effect]
											apply_to=loyal
										[/effect]
									[/object]
								[/modify_unit]
								
								[if]
									[variable]
										name=scrollable_items[$item_list_key].new_unit_special_id
										not_equals=""
									[/variable]
									[then]
										[modify_unit]
											[filter]
												id=$hidden_unit_id
											[/filter]
											
											[variables]
												special_id=$scrollable_items[$item_list_key].new_unit_special_id
											[/variables]
										[/modify_unit]
										
										{VARIABLE quiet_bonus_key $scrollable_items[$item_list_key].new_unit_special_id}
										{VARIABLE quiet_bonus_unit_id $hidden_unit_id}
										[fire_event]
											name=apply_quiet_bonus
										[/fire_event]
									[/then]
								[/if]
								
								[if]
									[variable]
										name=scrollable_items[$item_list_key].image
										not_equals=""
									[/variable]
									[then]
										[remove_item]
											x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
											image=$scrollable_items[$item_list_key].image
										[/remove_item]
									[/then]
								[/if]
								
								{CLEAR_VARIABLE scrollable_items[$item_list_key]}
								{VARIABLE_OP item_list_key sub 1}
								{VARIABLE allow_undo no}
							[/case]
							
							[case]
								value="gold_chest"
								
								{VARIABLE extra_gold $scrollable_items[$item_list_key].amount}
								
								[remove_item]
									x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
									image=$scrollable_items[$item_list_key].image
								[/remove_item]
								
								[if]
									[variable]
										name=uws_game.shared_gold
										boolean_equals=yes
									[/variable]
									[then]
										{VARIABLE_OP extra_gold divide 1.85}
										{VARIABLE_OP extra_gold round floor}
										
										{RESET_GOLD_FOR_SIDE_IF_NEGATIVE 8}
										[gold]
											side=8
											amount=$extra_gold
										[/gold]
										
										{RESET_GOLD_FOR_SIDE_IF_NEGATIVE 9}
										[gold]
											side=9
											amount=$extra_gold
										[/gold]
									[/then]
									[else]
										{RESET_GOLD_FOR_SIDE_IF_NEGATIVE $side_number}
										[gold]
											side=$side_number
											amount=$extra_gold
										[/gold]
									[/else]
								[/if]
								
								[floating_text]
									x,y=$x1,$y1
									text="<span color='#ebae2a' size='large'>+$extra_gold gold!</span>"
								[/floating_text]
								
								{CLEAR_VARIABLE scrollable_items[$item_list_key]}
								{VARIABLE_OP item_list_key sub 1}
								{VARIABLE allow_undo no}
							[/case]
							
							[case]
								value="event"
								
								{VARIABLE uws_event_consumed no}
								{VARIABLE uws_event_id $scrollable_items[$item_list_key].event}
								
								[if]
									[variable]
										name=x1
										less_than_equal_to=$uws_game.middle
									[/variable]
									[then]
										{VARIABLE uws_event_id "$uws_event_id|_left"}
									[/then]
									[else]
										{VARIABLE uws_event_id "$uws_event_id|_right"}
									[/else]
								[/if]
								
								[fire_event]
									id=$uws_event_id
									[primary_unit]
										x,y=$x1,$y1
									[/primary_unit]
								[/fire_event]
								
								[if]
									[variable]
										name=uws_event_consumed
										boolean_equals=yes
									[/variable]
									[then]
										[remove_item]
											x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
											image=$scrollable_items[$item_list_key].image
										[/remove_item]
										
										{CLEAR_VARIABLE scrollable_items[$item_list_key]}
										{VARIABLE_OP item_list_key sub 1}
									[/then]
								[/if]
								
								{VARIABLE allow_undo no}
							[/case]
						[/switch]
					[/then]
				[/if]
			[/do]
		[/for]
		
		[if]
			[variable]
				name=allow_undo
				boolean_equals=yes
			[/variable]
			[then]
				[allow_undo]
				[/allow_undo]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=moveto
		first_time_only=no
        
		[filter]
			side=$uws_game.filter_human_sides
			[filter_adjacent]
				side=$uws_game.helper_units_side
			[/filter_adjacent]
		[/filter]
		
		[store_unit]
			[filter]
				side=$uws_game.helper_units_side
				[filter_adjacent]
				    x,y=$x1,$y1
				[/filter_adjacent]
			[/filter]
			mode=always_clear
			variable=joining_unit
		[/store_unit]
		
		[message]
			id=$joining_unit.id
			message="Aaaawwww... What happened? Who are you? For how long have I been turned into a stone? Do you know the way out of this place?"
		[/message]
		
		{VARIABLE joining_unit.status.petrified no}
		{VARIABLE joining_unit.side $unit.side}
		
		[kill]
			id=$joining_unit.id
		[/kill]
		
		[unstore_unit]
			variable=joining_unit
		[/unstore_unit]
		
		[modify_unit]
			[filter]
				id=$joining_unit.id
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
					apply_to=loyal
				[/effect]
			[/object]
		[/modify_unit]
    [/event]
#enddef

#define QQUWS_TURN_REFRESH
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
		[/filter_side]
		
		[for]
			variable=item_list_key
			array=scrollable_items
			[do]
				[if]
					[have_unit]
						x=$scrollable_items[$item_list_key].x
						y=$scrollable_items[$item_list_key].y
						side=$side_number
						count=1
					[/have_unit]
					[then]
						[switch]
							variable=scrollable_items[$item_list_key].cat
							[case]
								value="rune"
								
								[set_variable]
									name=rune_apply_key
									rand=$scrollable_items[$item_list_key].set
								[/set_variable]
								
								[fire_event]
									name=apply_rune_bonus
									[primary_unit]
										x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
									[/primary_unit]
								[/fire_event]
								
								{VARIABLE_OP scrollable_items[$item_list_key].amount sub 1}
								
								[if]
							    		[variable]
							    			name=scrollable_items[$item_list_key].amount
							    			less_than=1
							    		[/variable]
							    		[then]
										[remove_item]
											x=$scrollable_items[$item_list_key].x
											y=$scrollable_items[$item_list_key].y
										[/remove_item]
										
										[event]
											name=turn end
											first_time_only=yes
											delayed_variable_substitution=no
											
											[label]
												x=$scrollable_items[$item_list_key].x
												y=$scrollable_items[$item_list_key].y
												text=""
											[/label]
										[/event]
										
										{CLEAR_VARIABLE scrollable_items[$item_list_key]}
										{VARIABLE_OP item_list_key sub 1}
									[/then]
								[/if]
							[/case]
							
							[case]
								value="heal"
								
								[remove_object]
									x=$scrollable_items[$item_list_key].x
									y=$scrollable_items[$item_list_key].y
									object_id=healing_modification
								[/remove_object]
							[/case]
						[/switch]
					[/then]
				[/if]
			[/do]
		[/for]
	[/event]
#enddef

#define QQUWS_PRERECRUIT
	[event]
		name=unit placed
		first_time_only=no
		
		[if]
			[variable]
				name=uws_game.human_sides
				contains=$unit.side
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.loyal_units
						boolean_equals=yes
					[/variable]
					[then]
						[object]
							silent=yes
							
							[filter]
								x,y=$x1,$y1
							[/filter]
							[effect]
								apply_to=loyal
							[/effect]
						[/object]
					[/then]
				[/if]
			[/then]
			[else]
				[object]
					silent=yes
					
					[filter]
						x,y=$x1,$y1
					[/filter]
					[effect]
						apply_to=loyal
					[/effect]
				[/object]
			[/else]
		[/if]
		
		[if]
			[variable]
				name=unit.type
				contains="QQ_"
			[/variable]
			[then]
				[fire_event]
					name=register_specials_for_new_uws_unit
				[/fire_event]
			[/then]
		[/if]

		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]

			[variables]
				recruited_on_turn=$turn_number
			[/variables]
		[/modify_unit]
	[/event]
	
	[event]
		name=prerecruit
		first_time_only=no

		[if]
			[variable]
				name=uws_game.ai_sides
				contains=$unit.side
			[/variable]
			[then]
				{VARIABLE new_unit_y $y1}
				
				[if]
					[variable]
						name=x1
						less_than_equal_to=$uws_game.middle
					[/variable]
					[then]
						{VARIABLE calculate_handicap_for 8}
						
						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/then]
					[else]
						{VARIABLE calculate_handicap_for 9}
						
						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/else]
				[/if]
				
				{VARIABLE new_unit_spawn_id $unit.id}
				{VARIABLE new_unit_bulky_value 0}
				{VARIABLE new_unit_beefy_value 0}
				{VARIABLE new_unit_fast_value 0}
				{VARIABLE new_unit_agile_value 0}
				{VARIABLE new_unit_aggressive_value 0}
				{VARIABLE new_unit_armored_value $second_unit.variables.recruit_armored}
				{VARIABLE new_unit_spawn_minion $second_unit.variables.recruit_minion}
				{VARIABLE new_unit_spawn_champion ""}
				{VARIABLE new_unit_spawn_quiet_bonus_id ""}
				{VARIABLE new_unit_has_item no}
				{VARIABLE unit_has_gold no}
				{VARIABLE new_unit_gold 0}
				{VARIABLE unit_gives_gold_to_ai no}
				{VARIABLE ai_gold_amount 0}
				
				[fire_event]
					name=apply_new_unit_bonus
				[/fire_event]
			[/then]
		[/if]

		[if]
			[variable]
				name=uws_game.human_sides
				contains=$unit.side
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[variables]
						is_recruited_unit=yes
					[/variables]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_ATTACK
	[event]
		name=attack
		first_time_only=no
		
		[filter]
			[filter_wml]
				[variables]
					calls_for_help=yes
				[/variables]
			[/filter_wml]
		[/filter]
		
		[fire_event]
			name=call_to_attack
			
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=die
		first_time_only=no
		
		[filter]
			[filter_wml]
				[variables]
					calls_for_help=yes
				[/variables]
			[/filter_wml]
		[/filter]
		
		[fire_event]
			name=call_to_attack
			
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=call_to_attack
		first_time_only=no
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#fc2b2b' size='medium'>Attack!!!</span>"
		[/floating_text]
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[variables]
				calls_for_help=no
			[/variables]
		[/modify_unit]
		
		{VARIABLE from_y $unit.variables.placement_y}
		{VARIABLE to_y $unit.variables.placement_y}
		{VARIABLE_OP from_y add 1}
		{VARIABLE_OP to_y add 50}
		
		[modify_unit]
			[filter]
				y=$from_y|-$to_y
				side=$unit.side
				status=guardian
			[/filter]
			
			[status]
				guardian=no
			[/status]
		[/modify_unit]
		
		{VARIABLE call_to_fight_turn $turn_number}
		{VARIABLE_OP to_y sub 25}
		
		[for]
			variable=i
			start=0
			end=3
			step=1
			[do]
				{VARIABLE_OP call_to_fight_turn add 1}
				
				{VARIABLE_OP from_y sub 2}
				{VARIABLE_OP to_y sub 5}
				
				[event]
					name="turn $call_to_fight_turn"
					first_time_only=yes
					delayed_variable_substitution=no
					
					[modify_unit]
						[filter]
							y=$from_y|-$to_y
							side=$unit.side
							status=guardian
						[/filter]
						
						[status]
							guardian=no
						[/status]
					[/modify_unit]
				[/event]
			[/do]
		[/for]
	[/event]
#enddef

