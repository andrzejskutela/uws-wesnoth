#define QQUWS_PRELOAD
	[event]
		name=preload
		first_time_only=no
		
		{VARIABLE xp_mod_set no}
		[lua]
		    code = <<
			awss_translation_table = {}
			available_units = {}
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/champions.lua")
			wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/mask_file_manipulation.lua")
		    >>
		[/lua]
	[/event]
#enddef

#define QQUWS_PRESTART
	[event]
		name=prestart
		{VARIABLE human_sides "89"}
		{VARIABLE race_spawn_look_ahead 12}
		{VARIABLE race_shared_view yes}
		{VARIABLE penalty_wave_index 1}
		{VARIABLE spawn_west yes}
		{VARIABLE spawn_east yes}

		{INIT_GAME_SETTINGS}
		{INIT_SIDES_DATA}
		
		[set_variables]
			name=scrollable_items
			mode=append
		[/set_variables]
		[set_variables]
			name=random_translation_table
		[/set_variables]
		[set_variables]
			name=spawn_queue
			mode=append
		[/set_variables]
		[set_variables]
			name=qquws_lasting_effect_information
			mode=replace
		[/set_variables]
		
		{VARIABLE allow_eoma_units no}
	    	{VARIABLE allow_wotg_units no}
	    	{VARIABLE allow_rol_units no}
	    	{VARIABLE allow_eoma_units no}
	    	{VARIABLE used_items_list ""}
	[/event]
#enddef

#define QQUWS_PRESTART_CAMPAIGN_SCENARIO
	[event]
		name=prestart
		{VARIABLE spawn_west yes}
		{VARIABLE spawn_east yes}

		{INIT_GAME_SETTINGS}
		
		[set_variables]
			name=scrollable_items
			mode=replace
		[/set_variables]
		[set_variables]
			name=random_translation_table
			mode=replace
		[/set_variables]
		[set_variables]
			name=spawn_queue
			mode=replace
		[/set_variables]
		[set_variables]
			name=qquws_lasting_effect_information
			mode=replace
		[/set_variables]
	[/event]
#enddef

#define QQUWS_START GAME_MODE
	[event]
		name=start
		
		{VARIABLE game_mode {GAME_MODE}}
		{VARIABLE uws_is_campaign no}
		{INIT_NEW_GAME}
		{GAME_CREATION_OPTIONS}
		{POST_INIT_NEW_GAME}
		
		[switch]
			variable=game_mode
			
			[case]
				value=race
				
				[fire_event]
					name=spawn_race_batch
				[/fire_event]
				
				[fire_event]
					name=print_race_stats
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
				{RACE_RESTRICT_AI_MOVEMENT}
			[/case]
			
			[case]
				value=slash
				
				[fire_event]
					name=spawn_slash_batch
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
			[/case]
			
			[case]
				value=after_classic
				
				[lua]
				    code = <<
					wesnoth.dofile("~add-ons/QQ_Ultimate_Wesnoth_Survival/lua/after_games.lua")
				    >>
				[/lua]
			[/case]
		[/switch]
		
		{PLACE_OBJECTS_ON_MAP}
		{UNSYNC_INFO_MENU_ITEM}
		
		[message]
			speaker=narrator
			caption="Coryphée of the Dark Hour"
			image=portraits/uws/chernava.png
		    	message="Welcome to the Ultimate Wesnoth Survival. Today $all_opponents_names decided to take the Wesnoth challenge and we hope to see some great fights on the way.

Good luck, have fun, and show us your wesnoth skills."
		[/message]
	[/event]
	
	[event]
		name=side 8 turn 3
		
		{TIP_OF_THE_DAY}
	[/event]
#enddef

#define QQUWS_START_CAMPAIGN_INIT GAME_MODE
	[event]
		name=start
		
		{VARIABLE game_mode {GAME_MODE}}
		
		#ifdef UWS_D_EASY
			{VARIABLE difficulty_readable Easy}
		#endif
		
		#ifdef UWS_D_NORMAL
			{VARIABLE difficulty_readable Normal}
		#endif
		
		#ifdef UWS_D_HARD
			{VARIABLE difficulty_readable Hard}
		#endif
		
		#ifdef UWS_D_HARDCORE
			{VARIABLE difficulty_readable Hardcore}
		#endif
		
		{VARIABLE uws_is_campaign yes}
		{INIT_NEW_GAME}
		{CAMPAIGN_CREATION_OPTIONS}
		{POST_INIT_NEW_GAME}
		
		[switch]
			variable=game_mode
			
			[case]
				value=slash
				
				[fire_event]
					name=spawn_slash_batch
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
			[/case]
		[/switch]
		
		{PLACE_OBJECTS_ON_MAP}
		{UNSYNC_INFO_MENU_ITEM}
		
		[message]
			speaker=narrator
			caption="Coryphée of the Dark Hour"
			image=portraits/uws/chernava.png
		    	message="Welcome to the Ultimate Wesnoth Survival Campaign. Today $all_opponents_names decided to take the Wesnoth challenge and we hope to see some great fights on the way.

Good luck, have fun, and show us your wesnoth skills."
		[/message]
	[/event]
	
	[event]
		name=side 8 turn 3
		
		{TIP_OF_THE_DAY}
	[/event]
#enddef

#define QQUWS_START_CAMPAIGN_CONSEQUENT
	[event]
		name=start
		
		{VARIABLE uws_is_campaign yes}
		{INIT_CAMPAIGN_SCENARIO}
		{CAMPAIGN_SCENARIO_PREPARE}
		{POST_INIT_NEW_GAME}
		
		[switch]
			variable=game_mode
			
			[case]
				value=slash
				
				[fire_event]
					name=spawn_slash_batch
				[/fire_event]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				{VARIABLE race_lava_border $map_size.height}
			[/case]
		[/switch]
		
		{PLACE_OBJECTS_ON_MAP}
		{UNSYNC_INFO_MENU_ITEM}
	[/event]
#enddef

#define QQUWS_NEW_TURN
	[event]
		name=new turn
		first_time_only=no
		
		[switch]
			variable=scroll_type
			
			[case]
				value=normal
				
				[fire_event]
					name=qq_labels
				[/fire_event]
				
				# scroll forever
				[if]
					[variable]
						name=turn_number
						greater_than=1
					[/variable]
					[then]
						[fire_event]
							name=qq_scroll
						[/fire_event]
					[/then]
				[/if]
			[/case]
			[case]
				value=slow
				
				{VARIABLE check_turn_even $turn_number}
				{VARIABLE_OP check_turn_even modulo 2}
				
				[if]
					[variable]
						name=check_turn_even
						numerical_equals=0
					[/variable]
					[then]
						[fire_event]
							name=qq_push_lava
						[/fire_event]
					[/then]
				[/if]
			[/case]
		[/switch]
		
		[if]
			[variable]
				name=game_mode
				equals=after_classic
			[/variable]
			[then]
				[qquws_calculate_after_games_spawn_variables]
					turn=$turn_number
				[/qquws_calculate_after_games_spawn_variables]
				
				[if]
					[variable]
						name=after_games_is_spawn_turn
						boolean_equals=yes
					[/variable]
					[then]
						[qquws_create_after_copies]
							map_id=$awss_map_id
						[/qquws_create_after_copies]
					[/then]
					[else]
						[if]
							[variable]
								name=after_games_is_prepare_turn
								boolean_equals=yes
							[/variable]
							[then]
								[qquws_prepare_new_after_spawn]
									map_id=$awss_map_id
								[/qquws_prepare_new_after_spawn]
								
								{VARIABLE penalty_wave_index $after_games_wave_index}
								
								{VARIABLE spawn_turn_number $turn_number}
								{VARIABLE_OP spawn_turn_number add 1}
								
								[store_unit]
									[filter]
										type=QQUWS_surprise
									[/filter]
									
									variable=new_spawn_locations
									mode=always_clear
								[/store_unit]
								
								[foreach]
									array=new_spawn_locations
									variable=location
									readonly=yes
									[do]
										[label]
											x=$location.x
											y=$location.y
											text="<span color='#e3e0d1'>Turn $spawn_turn_number</span>"
											visible_in_fog=no
										[/label]
									[/do]
								[/foreach]
								
								{CLEAR_VARIABLE new_spawn_locations,location,spawn_turn_number}
							[/then]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
		
		[if]
			[have_unit]
				race=AE_arc_thrall_khthon
			[/have_unit]
			[then]
				[modify_unit]
					[filter]
						race=AE_arc_thrall_khthon
					[/filter]
					
					[variables]
						items_picked_up=""
						has_item=no
						item_id=""
						has_gold=no
						gold_amount=0
						final_boss=no
						is_lava_safe=no
						placement_y=4
						is_stoic=no
						calls_for_help=no
						recruit_armored=0
						recruit_minion=""
						is_immune_to_specials=no
						race_points_value=0
					[/variables]
				[/modify_unit]
				
				[if]
					[variable]
						name=make_everything_loyal
						boolean_equals=yes
					[/variable]
					[then]
						[modify_unit]
							[filter]
								race=AE_arc_thrall_khthon
							[/filter]
							
							[object]
								silent=yes
								
								[effect]
									apply_to=loyal
								[/effect]
							[/object]
						[/modify_unit]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=side turn
		first_time_only=no
		
		[filter_side]
			side=1,2,3,4,5,6,7
		[/filter_side]
		
		[if]
			[variable]
				name=maintain_hidden_leaders
				boolean_equals=yes
			[/variable]
			[then]
				[fire_event]
					name=maintain_hidden_leaders
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=side turn
		first_time_only=no
		
		[filter_side]
			side=8,9
		[/filter_side]
		
		{FOREACH scrollable_items item_list_key}
			[if]
				[have_unit]
					x=$scrollable_items[$item_list_key].x
					y=$scrollable_items[$item_list_key].y
					side=$side_number
					count=1
				[/have_unit]
				[then]
					[switch]
						variable=scrollable_items[$item_list_key].cat
						[case]
							value="heal"
							
							{VARIABLE uws_heal_amount 8}
							[if]
								[variable]
									name=scrollable_items[$item_list_key].amount
									greater_than=0
								[/variable]
								[then]
									{VARIABLE uws_heal_amount $scrollable_items[$item_list_key].amount}
								[/then]
							[/if]
							
							[modify_unit]
								[filter]
									x=$scrollable_items[$item_list_key].x
									y=$scrollable_items[$item_list_key].y
								[/filter]
									
								[object]
									silent=yes
									id=healing_modification
									take_only_once=no
									
									[effect]
									    apply_to=new_ability
									    [abilities]
										[regenerate]
											value=$uws_heal_amount
											id=uws_object_regenerates
											name="regenerates"
											description= _ "The unit will heal itself $uws_heal_amount HP per turn. If it is poisoned, it will remove the poison instead of healing."
											affect_self=yes
											poison=cured
										[/regenerate]
									    [/abilities]
									[/effect]
								[/object]
							[/modify_unit]
						[/case]
					[/switch]
				[/then]
			[/if]
		{NEXT item_list_key}
	[/event]
#enddef

#define QQUWS_TURN_END
	[event]
		name=turn end
		first_time_only=no
		
		[switch]
			variable=game_mode
			
			[case]
				value=race
				
				[fire_event]
					name=spawn_race_batch
				[/fire_event]
			[/case]
			[case]
				value=slash
				
				[fire_event]
					name=spawn_slash_batch
				[/fire_event]
			[/case]
		[/switch]
		
		[if]
			[variable]
				name=xp_mod_set
				boolean_equals=no
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_xp_mod
				[/fire_event]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_DIE
	[event]
		name=die
		first_time_only=no
		
		[if]
			# bypass all thrall bugs by ignoring the second die event
			[variable]
				name=thrall_to_be.id
				equals=""
			[/variable]
			[then]
				[if]
					[variable]
						name=human_sides
						contains=$second_unit.side
					[/variable]
					[then]
						{VARIABLE_OP sides[$second_unit.side|].kills add 1}
						
						[if]
							[variable]
								name=game_mode
								equals=race
							[/variable]
							[then]
								{VARIABLE race_points_add $unit.variables.race_points_value}
								
								[if]
									[variable]
										name=race_points_add
										greater_than=0
									[/variable]
									[then]
										{VARIABLE_OP sides[$second_unit.side|].kills_race_value add $race_points_add}
										[fire_event]
											name=print_race_stats
										[/fire_event]
									[/then]
								[/if]
								
								{CLEAR_VARIABLE race_points_add}
							[/then]
						[/if]
						
						[if]
							[variable]
								name=second_unit.variables.kills
								less_than=1
							[/variable]
							[then]
								[modify_unit]
									[filter]
										id=$second_unit.id
									[/filter]
									
									[variables]
										kills=1
										kills_value=$unit.cost
										promotion_level=0
									[/variables]
								[/modify_unit]
							[/then]
							[else]
								{VARIABLE current_kills $second_unit.variables.kills}
								{VARIABLE_OP current_kills add 1}
								{VARIABLE current_value $second_unit.variables.kills_value}
								{VARIABLE_OP current_value add $unit.cost}
								[modify_unit]
									[filter]
										id=$second_unit.id
									[/filter]
									
									[variables]
										kills=$current_kills
										kills_value=$current_value
									[/variables]
								[/modify_unit]
								
								[if]
									[variable]
										name=current_kills
										greater_than=64
									[/variable]
									[and]
										[variable]
											name=sides[$second_unit.side|].enable_expanded_xpmod_rules
											boolean_equals=no
										[/variable]
									[/and]
									[then]
										{VARIABLE sides[$second_unit.side|].enable_expanded_xpmod_rules yes}
									[/then]
								[/if]
							[/else]
						[/if]
						
						[fire_event]
							name=promote_unit
							[primary_unit]
							    id=$second_unit.id
							[/primary_unit]
						[/fire_event]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.has_gold
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE extra_gold $unit.variables.gold_amount}
					
						[if]
							[variable]
								name=game_mode
								equals=slash
							[/variable]
							[and]
								[variable]
									name=is_single_player_game
									boolean_equals=no
								[/variable]
							[/and]
							[then]
								{VARIABLE_OP extra_gold divide 1.65}
								{VARIABLE_OP extra_gold round floor}
								
								[gold]
									side=8
									amount=$extra_gold
								[/gold]
								
								[gold]
									side=9
									amount=$extra_gold
								[/gold]
							[/then]
							[else]
								[gold]
									side=$second_unit.side
									amount=$extra_gold
								[/gold]
							[/else]
						[/if]
						
						
						[floating_text]
							x,y=$x1,$y1
							text="<span color='#ebae2a' size='large'>+$extra_gold gold!</span>"
						[/floating_text]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.has_item
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE render_new_item yes}
						{VARIABLE item_x $x1}
						{VARIABLE item_y $y1}
						{VARIABLE item_type_id $unit.variables.item_id}
					
						[fire_event]
							name=drop_new_item
						[/fire_event]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.items_picked_up
						not_equals=""
					[/variable]
					[then]
						[set_variables]
							name=unit_items_ids
							mode=replace
							[split]
								list=$unit.variables.items_picked_up
								key=item
								separator=","
							[/split]
						[/set_variables]
						
						{VARIABLE render_new_item yes}
						{VARIABLE item_x $x1}
						{VARIABLE item_y $y1}
						
						[for]
							variable=i
							array=unit_items_ids
							[do]
								{VARIABLE item_type_id $unit_items_ids[$i].item}
								
								[fire_event]
									name=drop_new_item
								[/fire_event]
							[/do]
						[/for]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.canrecruit
						boolean_equals=yes
					[/variable]
					[and]
						[variable]
							name=human_sides
							contains=$unit.side
						[/variable]
					[/and]
					[then]
						{VARIABLE side_is_dead no}
						
						[if]
							[variable]
								name=leader_is_killable
								boolean_equals=yes
							[/variable]
							[then]
								[if]
									[have_unit]
										side=$unit.side
										[not]
											id=$unit.id
										[/not]
										count=0
									[/have_unit]
									[then]
										{VARIABLE side_is_dead yes}
									[/then]
									[else]
										[store_unit]
											[filter]
												side=$unit.side
												[not]
													id=$unit.id
												[/not]
											[/filter]
											
											variable=available_units
											mode=always_clear
										[/store_unit]
										
										{VARIABLE available_units[0].canrecruit yes}
										{VARIABLE available_units[0].recruits $unit.recruits}
										
										[unstore_unit]
											variable=available_units[0]
										[/unstore_unit]
										{CLEAR_VARIABLE available_units}
									[/else]
								[/if]
							[/then]
							[else]
								{VARIABLE side_is_dead yes}
							[/else]
						[/if]
						
						[if]
							[variable]
								name=side_is_dead
								boolean_equals=yes
							[/variable]
							[then]
								{FLASH_WHITE ()}
								{VARIABLE dead_unit_side $unit.side}
								{VARIABLE leader_name $sides[$dead_unit_side|].leader_name}
								
								[message]
									speaker=narrator
									caption="Emissary of Death"
									image=portraits/trolls/troll-hero.png
									message="$leader_name challenged the Wesnoth Survival and failed. The vultures will make your bones shine in the sun."
								[/message]
								
								[kill]
									side=$dead_unit_side
								[/kill]
								
								{VARIABLE sides[$dead_unit_side|].campaign_result defeat}
								{VARIABLE sides[$dead_unit_side|].is_alive no}
								
								[if]
									[variable]
										name=is_pvp_game
										boolean_equals=yes
									[/variable]
									[then]
										{VARIABLE winning_side 8}
										[if]
											[variable]
												name=dead_unit_side
												numerical_equals=8
											[/variable]
											[then]
												{VARIABLE winning_side 9}
											[/then]
										[/if]
										
										[fire_event]
											name=trigger_race_victory
										[/fire_event]
									[/then]
									[else]
										[item]
											x=$unit.x
											y=$unit.y
											image="items/gold-coins-small.png"
										[/item]
										
										[store_gold]
											side=$unit.side
											variable=players_gold
										[/store_gold]
										
										[set_variables]
											name=scrollable_items
											mode=append
											[value]
												cat=gold_chest
												x=$unit.x
												y=$unit.y
												image="items/gold-coins-small.png"
												amount=$players_gold
												render=yes
											[/value]
										[/set_variables]
									[/else]
								[/if]
								
								[if]
									[variable]
										name=game_mode
										equals=slash
									[/variable]
									[then]
										{VARIABLE is_single_player_game yes}
									[/then]
								[/if]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=unit.variables.final_boss
						boolean_equals=yes
					[/variable]
					[then]
						{FLASH_WHITE ()}
						
						[if]
							[variable]
								name=uws_is_campaign
								boolean_equals=yes
							[/variable]
							[then]
								{STORE_SIDE_RECRUITS 8 sides[8].recruits}
								{STORE_SIDE_RECRUITS 9 sides[9].recruits}
								{VARIABLE next_scenario $game_settings[$awss_map_id].next_scenario_id}
								{VARIABLE awss_map_id $game_settings[$awss_map_id].next_scenario_uws_id}
								
								[endlevel]
									bonus=no
									carryover_report=yes
									save=yes
									replay_save=yes
									linger_mode=yes
									reveal_map=yes
									next_scenario=$next_scenario
									carryover_percentage=80
									
									[result]
										side=8
										result=$sides[8].campaign_result
									[/result]
									[result]
										side=9
										result=$sides[9].campaign_result
									[/result]
								[/endlevel]
							[/then]
							[else]
								[message]
								    speaker=narrator
								    caption="Grand Marshal of Wesnoth, Commander of Legions"
								    image="portraits/humans/marshal.png"
								    message="Congratulations! You have managed to defeat the $game_settings[$awss_map_id].final_boss_name in a clean battle. May peace and prosperity come back to these lands."
								[/message]
								
								[kill]
									[not]
										side=8,9
									[/not]
								[/kill]
							[/else]
						[/if]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_MOVETO
	[event]
		name=moveto
		first_time_only=no
		
		[filter]
			side=8,9
		[/filter]
		
		[switch]
			variable=game_mode
			
			[case]
				value=race
				
				[if]
					[variable]
						name=y1
						less_than=$sides[$side_number|].race_high_point
					[/variable]
					[then]
						[if]
							[variable]
								name=is_single_high_point_cutoff
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE sides[8].race_high_point $y1}
								{VARIABLE sides[9].race_high_point $y1}
								
								[sync_variable]
									name=sides[8].race_high_point,sides[9].race_high_point
								[/sync_variable]
							[/then]
							[else]
								{VARIABLE sides[$side_number|].race_high_point $y1}
								
								[sync_variable]
									name=sides[8].race_high_point
								[/sync_variable]
							[/else]
						[/if]
						
						[if]
							[variable]
								name=y1
								less_than=$game_settings[$awss_map_id].race_make_players_opponents_y
							[/variable]
							[and]
								[variable]
									name=race_shared_view
									boolean_equals=yes
								[/variable]
							[/and]
							[then]
								{VARIABLE race_shared_view no}
								
								[modify_side]
									side=8
									team_name=West
								[/modify_side]
								[modify_side]
									side=9
									team_name=East
								[/modify_side]
								
								[message]
									speaker=narrator
									caption="Guardian of Bog"
									image="portraits/uws/striker.png"
									message="As the players are approaching the end of the race, we will make their moves hidden to themselves!"
								[/message]
								
								{VARIABLE is_single_high_point_cutoff yes}
								{VARIABLE sides[8].race_high_point $y1}
								{VARIABLE sides[9].race_high_point $y1}
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=y1
						equals=$game_settings[$awss_map_id].race_finish_y
					[/variable]
					[and]
						[variable]
							name=x1
							equals=$game_settings[$awss_map_id].middle
						[/variable]
					[/and]
					[and]
						[variable]
							name=unit.canrecruit
							boolean_equals=yes
						[/variable]
					[/and]
					[then]
						{VARIABLE winning_side $side_number}
						[fire_event]
							name=trigger_race_victory
						[/fire_event]
					[/then]
				[/if]
			[/case]
			
			[case]
				value=slash
				
				[if]
					[variable]
						name=y1
						less_than=$sides[8].race_high_point
					[/variable]
					[then]
						{VARIABLE sides[8].race_high_point $y1}
						
						[sync_variable]
							name=sides[8].race_high_point
						[/sync_variable]
					[/then]
				[/if]
			[/case]
		[/switch]
		
		{VARIABLE allow_undo yes}
		
		{FOREACH scrollable_items item_list_key}
			[if]
				[variable]
					name=scrollable_items[$item_list_key].x
					equals=$x1
				[/variable]
				[and]
					[variable]
						name=scrollable_items[$item_list_key].y
						equals=$y1
					[/variable]
				[/and]
				[then]
					[switch]
						variable=scrollable_items[$item_list_key].cat
						[case]
							value="item"
							
							[fire_event]
								name=recalculate_items_count_for_unit
								[primary_unit]
									x,y=$x1,$y1
								[/primary_unit]
							[/fire_event]
							
							[if]
						    		[variable]
						    			name=items_count
						    			less_than=$game_settings[$awss_map_id].max_items_per_unit
						    		[/variable]
						    		[then]
						    			{VARIABLE item_type_tmp $scrollable_items[$item_list_key].type}
						    			
						    			[if]
						    				[variable]
						    					name=unit_item_list
						    					contains=$item_type_tmp
						    				[/variable]
						    				[then]
						    					[message]
											    speaker=narrator
											    side_for=$side_number
											    message="This unit cannot pick this item up. You already carry $items_steps[2].$item_type_tmp|."
											    image=$scrollable_items[$item_list_key].image
											[/message]
						    				[/then]
						    				[else]
											{SHOW_ITEM_PICKUP_MESSAGE $item_type_tmp $scrollable_items[$item_list_key].image "<span color='#db301d' size='large'>$items_steps[2].$item_type_tmp</span>
$items_steps[7].$item_type_tmp

$items_steps[9].$item_type_tmp

Do you want to pick it up?"}
						    				[/else]
						    			[/if]
								[/then]
								[else]
									[message]
									    speaker=narrator
									    side_for=$side_number
									    message="This unit cannot pick this item up, it already carries enough."
									    image=$scrollable_items[$item_list_key].image
									[/message]
								[/else]
							[/if]
						[/case]
						
						[case]
							value="hidden_unit"
							
							{VARIABLE hidden_unit_id "hidden_unit_$turn_number|_$side_number"}
							[unit]
								side=$side_number
								type=$scrollable_items[$item_list_key].type
								id=$hidden_unit_id
								x=$x1
								y=$y1
								passable=yes
							[/unit]
							
							[message]
								id=$hidden_unit_id
								message=$scrollable_items[$item_list_key].message
							[/message]
							
							[modify_unit]
								[filter]
									id=$hidden_unit_id
								[/filter]
								
								[object]
									silent=yes
									
									[effect]
										apply_to=loyal
									[/effect]
								[/object]
							[/modify_unit]
							
							[if]
								[variable]
									name=scrollable_items[$item_list_key].new_unit_special_id
									not_equals=""
								[/variable]
								[then]
									[modify_unit]
										[filter]
											id=$hidden_unit_id
										[/filter]
										
										[variables]
											special_id=$scrollable_items[$item_list_key].new_unit_special_id
										[/variables]
									[/modify_unit]
									
									{VARIABLE quiet_bonus_key $scrollable_items[$item_list_key].new_unit_special_id}
									{VARIABLE quiet_bonus_unit_id $hidden_unit_id}
									[fire_event]
										name=apply_quiet_bonus
									[/fire_event]
								[/then]
							[/if]
							
							[if]
								[variable]
									name=scrollable_items[$item_list_key].image
									not_equals=""
								[/variable]
								[then]
									[remove_item]
										x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
										image=$scrollable_items[$item_list_key].image
									[/remove_item]
								[/then]
							[/if]
							
							{CLEAR_VARIABLE scrollable_items[$item_list_key]}
							{VARIABLE_OP item_list_key sub 1}
							{VARIABLE allow_undo no}
						[/case]
						
						[case]
							value="gold_chest"
							
							{VARIABLE extra_gold $scrollable_items[$item_list_key].amount}
							
							[remove_item]
								x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
								image=$scrollable_items[$item_list_key].image
							[/remove_item]
							
							[if]
								[variable]
									name=game_mode
									equals=slash
								[/variable]
								[and]
									[variable]
										name=is_single_player_game
										boolean_equals=no
									[/variable]
								[/and]
								[then]
									{VARIABLE_OP extra_gold divide 1.65}
									{VARIABLE_OP extra_gold round floor}
									
									[gold]
										side=8
										amount=$extra_gold
									[/gold]
									
									[gold]
										side=9
										amount=$extra_gold
									[/gold]
								[/then]
								[else]
									[gold]
										side=$side_number
										amount=$extra_gold
									[/gold]
								[/else]
							[/if]
							
							
							[floating_text]
								x,y=$x1,$y1
								text="<span color='#ebae2a' size='large'>+$extra_gold gold!</span>"
							[/floating_text]
							
							{CLEAR_VARIABLE scrollable_items[$item_list_key]}
							{VARIABLE_OP item_list_key sub 1}
							{VARIABLE allow_undo no}
						[/case]
						
						[case]
							value="event"
							
							{VARIABLE uws_event_consumed no}
							{VARIABLE uws_event_id $scrollable_items[$item_list_key].event}
							
							[if]
								[variable]
									name=x1
									less_than_equal_to=$game_settings[$awss_map_id].middle
								[/variable]
								[then]
									{VARIABLE uws_event_id "$uws_event_id|_left"}
								[/then]
								[else]
									{VARIABLE uws_event_id "$uws_event_id|_right"}
								[/else]
							[/if]
							
							[fire_event]
								id=$uws_event_id
								[primary_unit]
									x,y=$x1,$y1
								[/primary_unit]
							[/fire_event]
							
							[if]
								[variable]
									name=uws_event_consumed
									boolean_equals=yes
								[/variable]
								[then]
									[remove_item]
										x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
										image=$scrollable_items[$item_list_key].image
									[/remove_item]
									
									{CLEAR_VARIABLE scrollable_items[$item_list_key]}
									{VARIABLE_OP item_list_key sub 1}
								[/then]
							[/if]
							
							{VARIABLE allow_undo no}
						[/case]
					[/switch]
				[/then]
			[/if]
		{NEXT item_list_key}
		
		[if]
			[variable]
				name=allow_undo
				boolean_equals=yes
			[/variable]
			[then]
				[allow_undo]
				[/allow_undo]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=moveto
		first_time_only=no
        
		[filter]
			side=8,9
			[filter_adjacent]
				side=1
			[/filter_adjacent]
		[/filter]
		
		[store_unit]
			[filter]
				side=1
				[filter_adjacent]
				    x,y=$x1,$y1
				[/filter_adjacent]
			[/filter]
			mode=always_clear
			variable=joining_unit
		[/store_unit]
		
		[message]
			id=$joining_unit.id
			message="Aaaawwww... What happened? Who are you? For how long have I been turned into a stone? Do you know the way out of this place?"
		[/message]
		
		{VARIABLE joining_unit.status.petrified no}
		{VARIABLE joining_unit.side $unit.side}
		
		[kill]
			id=$joining_unit.id
		[/kill]
		
		[unstore_unit]
			variable=joining_unit
		[/unstore_unit]
		
		[modify_unit]
			[filter]
				id=$joining_unit.id
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
					apply_to=loyal
				[/effect]
			[/object]
		[/modify_unit]
        [/event]
#enddef

#define QQUWS_TURN_REFRESH
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			side=8,9
		[/filter_side]
		
		{FOREACH scrollable_items item_list_key}
			[if]
				[have_unit]
					x=$scrollable_items[$item_list_key].x
					y=$scrollable_items[$item_list_key].y
					side=$side_number
					count=1
				[/have_unit]
				[then]
					[switch]
						variable=scrollable_items[$item_list_key].cat
						[case]
							value="rune"
							
							[set_variable]
								name=rune_apply_key
								rand=$scrollable_items[$item_list_key].set
							[/set_variable]
							
							[fire_event]
								name=apply_rune_bonus
								[primary_unit]
									x,y=$scrollable_items[$item_list_key].x,$scrollable_items[$item_list_key].y
								[/primary_unit]
							[/fire_event]
							
							{VARIABLE_OP scrollable_items[$item_list_key].amount sub 1}
							
							[if]
						    		[variable]
						    			name=scrollable_items[$item_list_key].amount
						    			less_than=1
						    		[/variable]
						    		[then]
									[remove_item]
										x=$scrollable_items[$item_list_key].x
										y=$scrollable_items[$item_list_key].y
									[/remove_item]
									
									[event]
										name=turn end
										first_time_only=yes
										delayed_variable_substitution=no
										
										[label]
											x=$scrollable_items[$item_list_key].x
											y=$scrollable_items[$item_list_key].y
											text=""
										[/label]
									[/event]
									
									{CLEAR_VARIABLE scrollable_items[$item_list_key]}
									{VARIABLE_OP item_list_key sub 1}
								[/then]
							[/if]
						[/case]
						
						[case]
							value="heal"
							
							[remove_object]
								x=$scrollable_items[$item_list_key].x
								y=$scrollable_items[$item_list_key].y
								object_id=healing_modification
							[/remove_object]
						[/case]
					[/switch]
				[/then]
			[/if]
		{NEXT item_list_key}
	[/event]
#enddef

#define QQUWS_PRERECRUIT
	[event]
		name=unit placed
		first_time_only=no
		
		[if]
			[variable]
				name=make_everything_loyal
				boolean_equals=yes
			[/variable]
			[then]
				[object]
					silent=yes
					
					[filter]
						x,y=$x1,$y1
					[/filter]
					[effect]
						apply_to=loyal
					[/effect]
				[/object]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=prerecruit
		first_time_only=no

		{VARIABLE enemy_sides "1234567"}
		[if]
			[variable]
				name=enemy_sides
				contains=$unit.side
			[/variable]
			[then]
				{VARIABLE new_unit_y $y1}
				
				[if]
					[variable]
						name=x1
						less_than_equal_to=$game_settings[$awss_map_id].middle
					[/variable]
					[then]
						{VARIABLE calculate_handicap_for 8}
						
						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/then]
					[else]
						{VARIABLE calculate_handicap_for 9}
						
						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/else]
				[/if]
				
				{VARIABLE new_unit_spawn_id $unit.id}
				{VARIABLE new_unit_bulky_value 0}
				{VARIABLE new_unit_beefy_value 0}
				{VARIABLE new_unit_fast_value 0}
				{VARIABLE new_unit_agile_value 0}
				{VARIABLE new_unit_armored_value $second_unit.variables.recruit_armored}
				{VARIABLE new_unit_spawn_minion $second_unit.variables.recruit_minion}
				{VARIABLE new_unit_spawn_champion ""}
				{VARIABLE new_unit_spawn_quiet_bonus_id ""}
				{VARIABLE new_unit_has_item no}
				{VARIABLE unit_has_gold no}
				{VARIABLE new_unit_gold 0}
				
				[fire_event]
					name=apply_new_unit_bonus
				[/fire_event]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_ATTACK
	[event]
		name=attack
		first_time_only=no
		
		[filter]
			side=2,3,4,5,6,7
			
			[filter_wml]
				[variables]
					calls_for_help=yes
				[/variables]
			[/filter_wml]
		[/filter]
		
		[fire_event]
			name=call_to_attack
			
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=die
		first_time_only=no
		
		[filter]
			side=2,3,4,5,6,7
			
			[filter_wml]
				[variables]
					calls_for_help=yes
				[/variables]
			[/filter_wml]
		[/filter]
		
		[fire_event]
			name=call_to_attack
			
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=call_to_attack
		first_time_only=no
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#fc2b2b' size='medium'>Attack!!!</span>"
		[/floating_text]
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[variables]
				calls_for_help=no
			[/variables]
		[/modify_unit]
		
		{VARIABLE from_y $unit.variables.placement_y}
		{VARIABLE to_y $unit.variables.placement_y}
		{VARIABLE_OP from_y add 1}
		{VARIABLE_OP to_y add 50}
		
		[modify_unit]
			[filter]
				y=$from_y|-$to_y
				side=$unit.side
				status=guardian
			[/filter]
			
			[status]
				guardian=no
			[/status]
		[/modify_unit]
		
		{VARIABLE call_to_fight_turn $turn_number}
		{VARIABLE_OP to_y sub 25}
		
		[for]
			variable=i
			start=0
			end=3
			step=1
			[do]
				{VARIABLE_OP call_to_fight_turn add 1}
				
				{VARIABLE_OP from_y sub 2}
				{VARIABLE_OP to_y sub 5}
				
				[event]
					name="turn $call_to_fight_turn"
					first_time_only=yes
					delayed_variable_substitution=no
					
					[modify_unit]
						[filter]
							y=$from_y|-$to_y
							side=$unit.side
							status=guardian
						[/filter]
						
						[status]
							guardian=no
						[/status]
					[/modify_unit]
				[/event]
			[/do]
		[/for]
	[/event]
#enddef

