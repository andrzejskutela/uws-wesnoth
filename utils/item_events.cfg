#define QQUWS_ITEM_EVENTS
	{END_OF_EFFECT_EVENT}
	
	{REGISTER_MAGICAL_FEEDING}
	{REGISTER_POSSESSED_BY_BLOOD}
	{REGISTER_FREEZING_GEM}
	{REGISTER_ARMOR_DESTRUCTION}
	{REGISTER_DOUBLE_ATTACK}
	{REGISTER_HIT_AND_RUN}
	{REGISTER_HEALS_ALL}
	{REGISTER_RATS}
	{REGISTER_ICEWIND_AURA}
	{REGISTER_REFLECTS_DAMAGE}
	{REGISTER_SUMMONS}
	{REGISTER_MAGIC_NEGATION}
	{REGISTER_ARMOR_SCIENCE}
	{REGISTER_INFINITY_LOCK}
	{REGISTER_IMPALE}
	{REGISTER_BATTLE_TRANCE}
	{REGISTER_MIND_TRICKS}
	{REGISTER_REVERSED_POLARITY}
	{REGISTER_ARCANE_TRICKSTERY}
	{REGISTER_STUN}
	{REGISTER_CRUSHING_BLOW}
	{REGISTER_BURNING_PASSION}
	{REGISTER_BURNING_POSSESSION}
	{REGISTER_FINAL_SHOWDOWN}
	{REGISTER_AURA_OF_DEATH}
	{REGISTER_INFERNAL_POSSESSION}
	{REGISTER_ENEMY_OVERWHELM}
	{REGISTER_KAMIKAZE}
	{REGISTER_ASTRAL_IMPRISONMENT}
	{REGISTER_DRAGONS_PROTECTION}
	{REGISTER_SICKNESS}
	{REGISTER_REQUIRES_ESCORTING}
	{REGISTER_INTERRUPTS}
	{REGISTER_MEDUSA_SPIRIT}
	{REGISTER_CARNAGE}
	{REGISTER_MIND_RAID}
	{REGISTER_EXPLODES}
	{REGISTER_CONCENTRATION}
	{REGISTER_BATTLE_FURY}
	{REGISTER_CHRONOSPHERE}
	{REGISTER_ANTI_STATUS_AURAS}
	{REGISTER_NECROMANCERS_BANE}
	{REGISTER_PREEMPTIVE_STRIKE}
	{REGISTER_BATTLE_FERVOR}
	{REGISTER_ENEMY_CONTROL}
#enddef

#define END_OF_EFFECT_EVENT
	[event]
		name=side turn
		first_time_only=no

		[for]
			variable=i
			array=qquws_lasting_effect_information
			[do]
				{VARIABLE effect_is_consumed no}
				[if]
					[variable]
						name=qquws_lasting_effect_information[$i].end_of_effect_turn
						numerical_equals=$turn_number
					[/variable]
					[and]
						[variable]
							name=qquws_lasting_effect_information[$i].side
							numerical_equals=$side_number
						[/variable]
					[/and]
					[then]
						[switch]
							variable=qquws_lasting_effect_information[$i].effect_type
							
							[case]
								value=petrification
								
								[modify_unit]
									[filter]
										id=$qquws_lasting_effect_information[$i].id
									[/filter]
									
									[status]
										slowed=yes
										petrified=no
										unhealable=no
									[/status]
								[/modify_unit]
								
								{CLEAR_VARIABLE qquws_lasting_effect_information[$i]}
								{VARIABLE_OP i sub 1}
								{VARIABLE effect_is_consumed yes}
							[/case]
							
							[case]
								value=sickness
								
								[if]
									[have_unit]
										id=$qquws_lasting_effect_information[$i].id
										count=1
									[/have_unit]
									[then]
										[modify_unit]
											[filter]
												id=$qquws_lasting_effect_information[$i].id
											[/filter]
											
											[status]
												unhealable=no
												poisoned=no
												slowed=no
											[/status]
										[/modify_unit]
										
										[remove_object]
											id=$qquws_lasting_effect_information[$i].id
											object_id=uws_sickness_bitten_object
										[/remove_object]
										
										[store_unit]
											[filter]
												id=$qquws_lasting_effect_information[$i].id
											[/filter]
											
											variable=sick_unit
											mode=always_clear
										[/store_unit]
										
										[floating_text]
											x,y=$sick_unit.x,$sick_unit.y
											text="<span color='#00ff00' size='large'>Healthy again!</span>"
										[/floating_text]
									[/then]
								[/if]
								
								{CLEAR_VARIABLE qquws_lasting_effect_information[$i]}
								{VARIABLE_OP i sub 1}
								{VARIABLE effect_is_consumed yes}
							[/case]
							
							[case]
								value=reset_status_auras
								
								[if]
									[variable]
										name=uws_game.is_pvp
										boolean_equals=yes
									[/variable]
									[then]
										[modify_unit]
											[filter]
												side=$qquws_lasting_effect_information[$i].side
												trait=qquws_unpoisonable_aura_buff
											[/filter]
											
											[status]
												unpoisonable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											side=$qquws_lasting_effect_information[$i].side
											trait=qquws_unpoisonable_aura_buff
											trait_id=qquws_unpoisonable_aura_buff
										[/remove_trait]
										
										[modify_unit]
											[filter]
												side=$qquws_lasting_effect_information[$i].side
												trait=qquws_undrainable_aura_buff
											[/filter]
											
											[status]
												undrainable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											side=$qquws_lasting_effect_information[$i].side
											trait=qquws_undrainable_aura_buff
											trait_id=qquws_undrainable_aura_buff
										[/remove_trait]
										
										[modify_unit]
											[filter]
												side=$qquws_lasting_effect_information[$i].side
												trait=qquws_unslowable_aura_buff
											[/filter]
											
											[status]
												unslowable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											side=$qquws_lasting_effect_information[$i].side
											trait=qquws_unslowable_aura_buff
											trait_id=qquws_unslowable_aura_buff
										[/remove_trait]
									[/then]
									[else]
										[modify_unit]
											[filter]
												[filter_side]
													[allied_with]
														side=$qquws_lasting_effect_information[$i].side
													[/allied_with]
												[/filter_side]
												
												trait=qquws_unpoisonable_aura_buff
											[/filter]
											
											[status]
												unpoisonable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											[filter_side]
												[allied_with]
													side=$qquws_lasting_effect_information[$i].side
												[/allied_with]
											[/filter_side]
											
											trait=qquws_unpoisonable_aura_buff
											trait_id=qquws_unpoisonable_aura_buff
										[/remove_trait]
										
										[modify_unit]
											[filter]
												[filter_side]
													[allied_with]
														side=$qquws_lasting_effect_information[$i].side
													[/allied_with]
												[/filter_side]
												
												trait=qquws_undrainable_aura_buff
											[/filter]
											
											[status]
												undrainable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											[filter_side]
												[allied_with]
													side=$qquws_lasting_effect_information[$i].side
												[/allied_with]
											[/filter_side]
											
											trait=qquws_undrainable_aura_buff
											trait_id=qquws_undrainable_aura_buff
										[/remove_trait]
										
										[modify_unit]
											[filter]
												[filter_side]
													[allied_with]
														side=$qquws_lasting_effect_information[$i].side
													[/allied_with]
												[/filter_side]
												
												trait=qquws_unslowable_aura_buff
											[/filter]
											
											[status]
												unslowable=no
											[/status]
										[/modify_unit]
										
										[remove_trait]
											[filter_side]
												[allied_with]
													side=$qquws_lasting_effect_information[$i].side
												[/allied_with]
											[/filter_side]
											
											trait=qquws_unslowable_aura_buff
											trait_id=qquws_unslowable_aura_buff
										[/remove_trait]
									[/else]
								[/if]
								
								{CLEAR_VARIABLE qquws_lasting_effect_information[$i]}
								{VARIABLE_OP i sub 1}
								{VARIABLE effect_is_consumed yes}
							[/case]
						[/switch]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=effect_is_consumed
						boolean_equals=no
					[/variable]
					[then]
						[switch]
							variable=qquws_lasting_effect_information[$i].effect_type
							
							[case]
								value=sickness
								
								[if]
									[have_unit]
										id=$qquws_lasting_effect_information[$i].id
										count=1
									[/have_unit]
									[then]
										[modify_unit]
											[filter]
												id=$qquws_lasting_effect_information[$i].id
											[/filter]
											
											[status]
												slowed=yes
												unhealable=yes
												poisoned=yes
											[/status]
										[/modify_unit]
										
										[if]
											[variable]
												name=qquws_lasting_effect_information[$i].side
												equals=$side_number
											[/variable]
											[then]
												[harm_unit]
													[filter]
														id=$qquws_lasting_effect_information[$i].id
														formula="if(hitpoints > 1, 1, 0)"
													[/filter]
													
													amount=8
													alignment=neutral
													kill=no
													animate=yes
													experience=no
												[/harm_unit]
											[/then]
										[/if]
									[/then]
								[/if]
							[/case]
						[/switch]
					[/then]
				[/if]
			[/do]
		[/for]
	[/event]
#enddef

#define REGISTER_MAGICAL_FEEDING
	[event]
		name=die
		first_time_only=no
		
		[filter_second]
			ability=qqas_feeding
		[/filter_second]
		
		{VARIABLE add_hp_bonus $unit.level}
		[if]
			[variable]
				name=add_hp_bonus
				equals=0
			[/variable]
			[then]
				{VARIABLE add_hp_bonus 1}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=add_hp_bonus
				greater_than=$second_unit.variables.feeding_cap
			[/variable]
			[then]
				{VARIABLE add_hp_bonus $second_unit.variables.feeding_cap}
			[/then]
		[/if]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
				
			[object]
				silent=yes

				[effect]
				    apply_to=hitpoints
				    increase=$add_hp_bonus
				    increase_total=$add_hp_bonus
				[/effect]
			[/object]
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#42bd19' size='large'>+$add_hp_bonus|hp</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_POSSESSED_BY_BLOOD
	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			ability=qq_possessed_by_blood
		[/filter]
		
		[fire_event]
			name=handle_possessed_by_blood
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_second]
			ability=qq_possessed_by_blood
		[/filter_second]
		
		[fire_event]
			name=handle_possessed_by_blood
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=handle_possessed_by_blood
		first_time_only=no
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
						
					[object]
						silent=yes
						duration=turn end
						
						[effect]
						    apply_to=attack
						    increase_damage=15%
						[/effect]
						[effect]
						    apply_to=overlay
						    add=misc/new-battle2.png
						[/effect]
					[/object]
				[/modify_unit]
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#d9686d' size='medium'>+15% dmg</span>"
				[/floating_text]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_FREEZING_GEM
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qqas_freezing_gem
		[/filter_attack]
		
		{VARIABLE freezing_touch_amount $unit.variables.freezing_touch_amount}
		
		[fire_event]
			name=handle_freezing_gem
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter_second_attack]
			special_id=qqas_freezing_gem
		[/filter_second_attack]
		
		{VARIABLE freezing_touch_amount $second_unit.variables.freezing_touch_amount}
		
		[fire_event]
			name=handle_freezing_gem
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=handle_freezing_gem
		first_time_only=no
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
						
					[object]
						silent=yes
						duration=turn end
						
						[effect]
						    apply_to=freezing_gem_defense
						    [defense]
							flat=$freezing_touch_amount
							frozen=$freezing_touch_amount
							forest=$freezing_touch_amount
							hills=$freezing_touch_amount
							village=$freezing_touch_amount
							swamp_water=$freezing_touch_amount
							sand=$freezing_touch_amount
							reef=$freezing_touch_amount
							cave=$freezing_touch_amount
							fungus=$freezing_touch_amount
							mountains=$freezing_touch_amount
							castle=$freezing_touch_amount
							sand=$freezing_touch_amount
							shallow_water=$freezing_touch_amount
						    [/defense]
						[/effect]
						
						[effect]
						    apply_to=overlay
						    add=misc/ums.png
						[/effect]
					[/object]
				[/modify_unit]
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#77cbe0' size='medium'>-$freezing_touch_amount defense</span>"
				[/floating_text]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_ARMOR_DESTRUCTION
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qqas_armor_destruction
		[/filter_attack]
		
		{VARIABLE armor_destruction_amount $unit.variables.armor_destruction_amount}
		{VARIABLE attack_weapon_type $weapon.type}
		
		[fire_event]
			name=handle_armor_destruction
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qqas_enemy_only_armor_destruction
		[/filter_attack]
		
		{VARIABLE armor_destruction_amount $damage_inflicted}
		{VARIABLE_OP armor_destruction_amount multiply $unit.variables.armor_destruction_factor}
		{VARIABLE_OP armor_destruction_amount divide 100}
		{VARIABLE_OP armor_destruction_amount round floor}
		
		[if]
			[variable]
				name=armor_destruction_amount
				greater_than=0
			[/variable]
			[then]
				{VARIABLE attack_weapon_type $weapon.type}
		
				[fire_event]
					name=handle_armor_destruction
					[primary_unit]
						id=$second_unit.id
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=handle_armor_destruction
		first_time_only=no
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				{VARIABLE reduced_resistance 0}
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
						
					[object]
						silent=yes
						
						[effect]
						    apply_to=remove_resistance
						    type=$attack_weapon_type
						    amount=$armor_destruction_amount
						[/effect]
					[/object]
				[/modify_unit]
				
				[if]
					[variable]
						name=reduced_resistance
						greater_than=0
					[/variable]
					[then]
						[floating_text]
							x,y=$unit.x,$unit.y
							text="<span color='#975da1' size='medium'>-$reduced_resistance $attack_weapon_type res</span>"
						[/floating_text]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_DOUBLE_ATTACK
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qqas_double_attack
		[/filter_attack]
		
		[if]
			[variable]
				name=unit.variables.is_second_attack
				boolean_equals=yes
			[/variable]
			[then]
				[remove_object]
					find_in=unit
					object_id=qquws_double_attack_object
				[/remove_object]
		
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[variables]
						double_attack_bank=0
						is_second_attack=no
					[/variables]
					
					[effect]
					    apply_to=remove_ability
					    [abilities]
						[dummy]
							id=qquws_can_do_double_attack
						[/dummy]
					    [/abilities]
					[/effect]
					[effect]
					    apply_to=new_ability
					    [abilities]
						[dummy]
							id=qquws_can_do_double_attack
							name="quick on ranged (0\$attacks_required|)"
							description="This unit can fire ranged attacks twice in single turn, once the ability is charged."
						[/dummy]
					    [/abilities]
					[/effect]
				[/modify_unit]
			[/then]
			[else]
				{VARIABLE attacks_required $unit.variables.double_attack_required}
				{VARIABLE attacks_done $unit.variables.double_attack_bank}
				{VARIABLE_OP attacks_done add 1}
				
				[if]
					[variable]
						name=attacks_done
						greater_than=$attacks_required
					[/variable]
					[then]
						{VARIABLE attacks_done $attacks_required}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[variables]
						double_attack_bank=$attacks_done
					[/variables]
					
					[effect]
					    apply_to=remove_ability
					    [abilities]
						[dummy]
							id=qquws_can_do_double_attack
						[/dummy]
					    [/abilities]
					[/effect]
					[effect]
					    apply_to=new_ability
					    [abilities]
						[dummy]
							id=qquws_can_do_double_attack
							name="quick on ranged ($attacks_done|\$attacks_required|)"
							description="This unit can fire ranged attacks twice in single turn, once the ability is charged."
						[/dummy]
					    [/abilities]
					[/effect]
				[/modify_unit]
				
				[if]
					[variable]
						name=attacks_done
						greater_than_equal_to=$attacks_required
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]
							
							[variables]
								is_second_attack=yes
							[/variables]
							
							attacks_left=1
						[/modify_unit]
					
						[object]
							id=qquws_double_attack_object
							take_only_once=no
							duration=turn
							silent=yes
							
							[filter]
								id=$unit.id
							[/filter]
							[effect]
								apply_to=remove_attacks
								[not]
									special_id=qqas_double_attack
								[/not]
							[/effect]
							[effect]
								apply_to=max_attacks
								increase=1
							[/effect]
						[/object]
						
						[floating_text]
							x,y=$unit.x,$unit.y
							text="<span color='#ff6224' size='medium'>Second attack available</span>"
						[/floating_text]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
	
	[event]
		name=side turn
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
			
			[has_unit]
				ability=qquws_can_do_double_attack
			[/has_unit]
		[/filter_side]
		
		[modify_unit]
			[filter]
				side=$side_number
				ability=qquws_can_do_double_attack
			[/filter]
			
			[variables]
				is_second_attack=no
			[/variables]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_HIT_AND_RUN
	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			x,y=$x1,$y1
			ability=qquws_hit_and_run
			
			[not]
				ability=qquws_status_time_dilation_active
			[/not]
		[/filter]
		
		{VARIABLE_OP unit.moves add $unit.variables.hit_and_run_amount}
		[unstore_unit]
			variable=unit
			color="0,255,0"
			text="+$unit.variables.hit_and_run_amount movepoints"
			find_vacant=no
		[/unstore_unit]
	[/event]
	
	[event]
		name=die
		first_time_only=no
		
		[filter_second]
			x,y=$x2,$y2
			ability=qquws_kill_and_run
			side=$side_number
		[/filter_second]
		
		{VARIABLE_OP second_unit.moves add $second_unit.variables.hit_and_run_amount}
		[unstore_unit]
			variable=second_unit
			color="0,255,0"
			text="+$second_unit.variables.hit_and_run_amount movepoints"
			find_vacant=no
		[/unstore_unit]
	[/event]
#enddef

#define REGISTER_HEALS_ALL
	[event]
		name=turn refresh
		first_time_only=no
		
		[if]
			[have_unit]
				side=$side_number
				status=heals_all
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						status=heals_all
					[/filter]
					
					variable=global_healers
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=global_healers
					variable=global_healer
					readonly=yes
					
					[do]
						[if]
							[variable]
								name=uws_game.is_pvp
								boolean_equals=yes
							[/variable]
							[then]
								[heal_unit]
									[filter]
										side=$side_number
									[/filter]
									
									amount=$global_healer.variables.heals_all_amount
									restore_statuses=$global_healer.variables.heals_restore_statuses
									animate=yes
								[/heal_unit]
							[/then]
							[else]
								[heal_unit]
									[filter]
										[filter_side]
											[allied_with]
												side=$side_number
											[/allied_with]
										[/filter_side]
									[/filter]
									
									amount=$global_healer.variables.heals_all_amount
									restore_statuses=$global_healer.variables.heals_restore_statuses
									animate=yes
								[/heal_unit]
							[/else]
						[/if]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE global_healers}
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_RATS
	[event]
		name=new turn
		first_time_only=no
		
		[if]
			[have_unit]
				status=spawns_rats
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						status=spawns_rats
					[/filter]
					
					variable=rats_breeders
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=rats_breeders
					variable=rats_breeder
					readonly=no
					
					[do]
						{VARIABLE rats_countdown $rats_breeder.variables.rats_countdown}
						[if]
							[variable]
								name=rats_countdown
								equals=""
							[/variable]
							[then]
								{VARIABLE rats_countdown $rats_breeder.variables.rats_frequency}
							[/then]
						[/if]
						
						{VARIABLE_OP rats_countdown sub 1}
						
						[if]
							[variable]
								name=rats_countdown
								equals=0
							[/variable]
							[then]
								{VARIABLE rats_description "This unit is able to breed tasty rats once every $rats_frequency turn(s) (max 4 bred rats).

A fresh rat will spawn this turn"}
							[/then]
							[else]
								{VARIABLE rats_description "This unit is able to breed tasty rats once every $rats_frequency turn(s) (max 4 bred rats).

A fresh rat will spawn in $rats_countdown turn(s)"}
							[/else]
						[/if]
						
						[modify_unit]
							[filter]
								id=$rats_breeder.id
							[/filter]
							
							[variables]
								rats_countdown=$rats_countdown
							[/variables]
						[/modify_unit]
						
						[object]
							silent=yes
							
							[filter]
								id=$rats_breeder.id
							[/filter]

							[effect]
								apply_to=remove_ability
								[abilities]
									[dummy]
										id=qquws_breeds_rats
									[/dummy]
								[/abilities]
							[/effect]
							[effect]
								apply_to=new_ability
								[abilities]
									[dummy]
										id=qquws_breeds_rats
										name="breeds rats"
										description=$rats_description
									[/dummy]
								[/abilities]
							[/effect]
						[/object]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE rats_breeders}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
		[/filter_side]
		
		[if]
			[have_unit]
				side=$side_number
				status=spawns_rats
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						status=spawns_rats
					[/filter]
					
					variable=rats_breeders
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=rats_breeders
					variable=rats_breeder
					readonly=no
					
					[do]
						[if]
							[variable]
								name=rats_breeder.variables.rats_countdown
								numerical_equals=0
							[/variable]
							[then]
								[if]
									[have_unit]
										side=$side_number
										ability=qquws_bred_rat
										count=5-999
									[/have_unit]
									[then]
										{VARIABLE rats_description "This unit is able to breed tasty rats once every $rats_frequency turn(s) (max 4 bred rats).

Limit of 4 rats is exceeded. A single delicious rat is waiting in the spawn queue."}
										[modify_unit]
											[filter]
												id=$rats_breeder.id
											[/filter]
											
											[variables]
												rats_countdown=1
											[/variables]
										[/modify_unit]
									[/then]
									[else]
										{VARIABLE rats_description "This unit is able to breed tasty rats once every $rats_frequency turn(s) (max 4 bred rats).

A fresh and tasty rat has been spawned."}
										[unit]
											type="Giant Rat"
											x=$rats_breeder.x
											y=$rats_breeder.y
											side=$side_number
											passable=yes
											upkeep=loyal
											animate=yes
											
											[status]
												is_bred_rat=yes
											[/status]
											
											[modifications]
												[object]
													silent=yes
													
													[effect]
														apply_to=new_ability
														[abilities]
															[dummy]
																id=qquws_bred_rat
																name="bred rat"
																description="This is a bred rat. Culinary delicacy."
															[/dummy]
														[/abilities]
													[/effect]
												[/object]
											[/modifications]
										[/unit]
										
										[modify_unit]
											[filter]
												id=$rats_breeder.id
											[/filter]
											
											[variables]
												rats_countdown=$rats_breeder.variables.rats_frequency
											[/variables]
										[/modify_unit]
									[/else]
								[/if]
								
								[object]
									silent=yes
									
									[filter]
										id=$rats_breeder.id
									[/filter]

									[effect]
										apply_to=remove_ability
										[abilities]
											[dummy]
												id=qquws_breeds_rats
											[/dummy]
										[/abilities]
									[/effect]
									[effect]
										apply_to=new_ability
										[abilities]
											[dummy]
												id=qquws_breeds_rats
												name="breeds rats"
												description=$rats_description
											[/dummy]
										[/abilities]
									[/effect]
								[/object]
							[/then]
						[/if]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE rats_breeders}
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_ICEWIND_AURA
	[event]
		name=turn refresh
		first_time_only=no

		[if]
			[have_unit]
				side=$side_number
				ability=qquws_icewind_aura
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						ability=qquws_icewind_aura
					[/filter]
					
					variable=icewind_aura_units
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=icewind_aura_units
					variable=icewind_aura_unit
					readonly=yes
					
					[do]
						{VARIABLE unit_levels "0,1,2,3,4,5,6,7"}
						[switch]
							variable=icewind_aura_unit.level
							
							[case]
								value=0
								{VARIABLE unit_levels "0"}
							[/case]
							[case]
								value=1
								{VARIABLE unit_levels "0,1"}
							[/case]
							[case]
								value=2
								{VARIABLE unit_levels "0,1,2"}
							[/case]
							[case]
								value=3
								{VARIABLE unit_levels "0,1,2,3"}
							[/case]
							[case]
								value=4
								{VARIABLE unit_levels "0,1,2,3,4"}
							[/case]
							[case]
								value=5
								{VARIABLE unit_levels "0,1,2,3,4,5"}
							[/case]
							[case]
								value=6
								{VARIABLE unit_levels "0,1,2,3,4,5,6"}
							[/case]
						[/switch]
						
						[modify_unit]
							[filter]
								[not]
									[filter_wml]
										[variables]
											is_immune_to_specials=yes
										[/variables]
									[/filter_wml]
								[/not]
			
								[filter_location]
									x,y=$icewind_aura_unit.x,$icewind_aura_unit.y
									radius=$icewind_aura_unit.variables.icewind_radius
									[filter_radius]
										terrain="!,_off^_usr,X*,M*^X*"
									[/filter_radius]
									[filter_vision]
										visible=yes
										respect_fog=yes
									[/filter_vision]
								[/filter_location]
								
								[filter_side]
									[enemy_of]
										side=$side_number
									[/enemy_of]
								[/filter_side]
								
								level=$unit_levels
								x=2-99
								formula="if(max_moves > 3, 1, 0)"
							[/filter]
								
							[object]
								silent=yes
								duration=turn end
								
								[effect]
								    apply_to=movement
								    increase=-30%
								[/effect]
								
								[effect]
								    apply_to=overlay
								    add=halo/uws/icewind.png
								[/effect]
							[/object]
						[/modify_unit]
						
						[if]
							[variable]
								name=icewind_aura_unit.variables.icewind_damage
								greater_than=0
							[/variable]
							[then]
								[harm_unit]
									[filter]
										[not]
											[filter_wml]
												[variables]
													is_immune_to_specials=yes
												[/variables]
											[/filter_wml]
										[/not]
										
										[filter_location]
											x,y=$icewind_aura_unit.x,$icewind_aura_unit.y
											radius=$icewind_aura_unit.variables.icewind_radius
											[filter_radius]
												terrain="!,_off^_usr,X*,M*^X*"
											[/filter_radius]
											[filter_vision]
												visible=yes
												respect_fog=yes
											[/filter_vision]
										[/filter_location]
										
										[filter_side]
											[enemy_of]
												side=$side_number
											[/enemy_of]
										[/filter_side]
										
										level=$unit_levels
										x=2-99
									[/filter]
									
									amount=$icewind_aura_unit.variables.icewind_damage
									damage_type=cold
									alignment=neutral
									kill=no
									animate=yes
									experience=no
								[/harm_unit]
							[/then]
						[/if]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE icewind_aura_units}
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_REFLECTS_DAMAGE
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_second]
			ability=qquws_reflects_damage
		[/filter_second]
		
		{VARIABLE damage_dealt $damage_inflicted}
		{VARIABLE_OP damage_dealt multiply $second_unit.variables.reflects_factor}
		{VARIABLE_OP damage_dealt round ceil}
		
		[if]
			[variable]
				name=damage_dealt
				greater_than=0
			[/variable]
			[then]
				[harm_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					amount=$damage_dealt
					damage_type=$weapon.type
					alignment=neutral
					kill=no
					animate=yes
					experience=no
				[/harm_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter]
			ability=qquws_reflects_damage
		[/filter]
		
		{VARIABLE damage_dealt $damage_inflicted}
		{VARIABLE_OP damage_dealt multiply $unit.variables.reflects_factor}
		{VARIABLE_OP damage_dealt round ceil}
		
		[if]
			[variable]
				name=damage_dealt
				greater_than=0
			[/variable]
			[then]
				[harm_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					amount=$damage_dealt
					damage_type=$second_weapon.type
					alignment=neutral
					kill=no
					animate=yes
					experience=no
				[/harm_unit]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_SUMMONS
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
		[/filter_side]
		
		[if]
			[have_unit]
				side=$side_number
				ability=qquws_raises_undead
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						ability=qquws_raises_undead
					[/filter]
					
					variable=summoners
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=summoners
					variable=summoner
					readonly=yes
					
					[do]
						{VARIABLE_OP rand_chance rand 0..99}
						
						[if]
							[variable]
								name=rand_chance
								less_than=$summoner.variables.summons_chance
							[/variable]
							[then]
								{VARIABLE_OP summon_unit_type rand $summoner.variables.summons_list}
								
								{VARIABLE_OP random_hp_factor rand 3,4,5,6,6,7,7,8,10,12,13,14,17,19,22,25}
								{VARIABLE_OP random_hp_factor multiply 10}
								{VARIABLE hp_factor_readable $random_hp_factor}
								{VARIABLE_OP random_hp_factor sub 100}
								
								{VARIABLE_OP random_dmg_factor rand 5,6,7,8,8,10,11,13,15,20}
								{VARIABLE_OP random_dmg_factor multiply 10}
								{VARIABLE dmg_factor_readable $random_dmg_factor}
								{VARIABLE_OP random_dmg_factor sub 100}
								
								[unit]
									type=$summon_unit_type
									x=$summoner.x
									y=$summoner.y
									side=$side_number
									find_vacant=yes
									upkeep=loyal
									animate=yes
									
									[status]
										is_summoned=yes
									[/status]
									
									[modifications]
										[object]
											silent=yes
											
											[effect]
												apply_to=new_ability
												[abilities]
													[dummy]
														id=qquws_summoned
														name="summoned"
														description="This is a summoned unit. $hp_factor_readable|% hp, $dmg_factor_readable|% dmg."
													[/dummy]
												[/abilities]
											[/effect]
											[effect]
											    apply_to=hitpoints
											    increase="$random_hp_factor|%"
											    increase_total="$random_hp_factor|%"
											[/effect]
											[effect]
											    apply_to=attack
											    range=melee
											    increase_damage="$random_dmg_factor|%"
											[/effect]
										[/object]
									[/modifications]
								[/unit]
							[/then]
						[/if]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE summoners}
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_MAGIC_NEGATION
	[event]
		name=turn refresh
		first_time_only=no
		
		[if]
			[have_unit]
				side=$side_number
				ability=qquws_negates_magic
			[/have_unit]
			[then]
				{VARIABLE apply_to_side $side_number}
				
				[fire_event]
					name=apply_magic_negation
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=unit placed
		first_time_only=no
		
		[if]
			[have_unit]
				side=$unit.side
				ability=qquws_negates_magic
			[/have_unit]
			[then]
				{VARIABLE apply_to_side $unit.side}
				
				[fire_event]
					name=apply_magic_negation
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=apply_magic_negation
		first_time_only=no
		
		[store_unit]
			[filter]
				side=$apply_to_side
				ability=qquws_negates_magic
			[/filter]
			
			variable=sorcerers
			mode=always_clear
		[/store_unit]
		
		[foreach]
			array=sorcerers
			variable=sorcerer
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=uws_game.is_pvp
						boolean_equals=yes
					[/variable]
					[then]
						[modify_unit]
							[filter]
								side=$sorcerer.side
								
								[not]
									id=$sorcerer.id
								[/not]
							[/filter]
								
							[object]
								silent=yes
								duration=turn
								
								[effect]
									apply_to=resistance
									replace=no
									[resistance]
										arcane=-$sorcerer.variables.negates_magic_value
										fire=-$sorcerer.variables.negates_magic_value
										cold=-$sorcerer.variables.negates_magic_value
									[/resistance]
								[/effect]
								[effect]
									apply_to=new_ability
									[abilities]
										[dummy]
											id=qquws_protected_from_magic
											name="protected from magic $sorcerer.variables.negates_magic_value"
											description="This units benefits from magic negation."
										[/dummy]
									[/abilities]
								[/effect]
							[/object]
						[/modify_unit]
					[/then]
					[else]
						[modify_unit]
							[filter]
								[filter_side]
									[allied_with]
										side=$sorcerer.side
									[/allied_with]
								[/filter_side]
								
								[not]
									id=$sorcerer.id
								[/not]
							[/filter]
								
							[object]
								silent=yes
								duration=turn
								
								[effect]
									apply_to=resistance
									replace=no
									[resistance]
										arcane=-$sorcerer.variables.negates_magic_value
										fire=-$sorcerer.variables.negates_magic_value
										cold=-$sorcerer.variables.negates_magic_value
									[/resistance]
								[/effect]
								[effect]
									apply_to=new_ability
									[abilities]
										[dummy]
											id=qquws_protected_from_magic
											name="protected from magic $sorcerer.variables.negates_magic_value"
											description="This units benefits from magic negation."
										[/dummy]
									[/abilities]
								[/effect]
							[/object]
						[/modify_unit]
					[/else]
				[/if]
			[/do]
		[/foreach]
		
		{CLEAR_VARIABLE sorcerers}
	[/event]
#enddef

#define REGISTER_ARMOR_SCIENCE
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_apply_global_specials_sides
		[/filter_side]
		
		[if]
			[have_unit]
				[filter_side]
					[enemy_of]
						side=$side_number
					[/enemy_of]
				[/filter_side]
				
				ability=qquws_armor_science
			[/have_unit]
			[then]
				{VARIABLE apply_to_side $side_number}
				
				[fire_event]
					name=apply_armor_science
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=unit placed
		first_time_only=no
		
		[filter]
			side=$uws_game.filter_apply_global_specials_sides
		[/filter]
		
		[if]
			[have_unit]
				[filter_side]
					[enemy_of]
						side=$unit.side
					[/enemy_of]
				[/filter_side]
				
				ability=qquws_armor_science
			[/have_unit]
			[then]
				{VARIABLE apply_to_side $unit.side}
				
				[fire_event]
					name=apply_armor_science
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=apply_armor_science
		first_time_only=no
		
		[store_unit]
			[filter]
				[filter_side]
					[enemy_of]
						side=$apply_to_side
					[/enemy_of]
				[/filter_side]
				
				ability=qquws_armor_science
			[/filter]
			
			variable=armor_masters
			mode=always_clear
		[/store_unit]
		
		[foreach]
			array=armor_masters
			variable=armor_master
			readonly=yes
			
			[do]
				[modify_unit]
					[filter]
						side=$apply_to_side
						
						[not]
							ability=qquws_dimished_armor
						[/not]
						
						[filter_location]
							x,y=$armor_master.x,$armor_master.y
							radius=12
							[filter_radius]
								terrain="!,_off^_usr,X*,M*^X*"
							[/filter_radius]
							[filter_vision]
								visible=yes
								respect_fog=yes
							[/filter_vision]
						[/filter_location]
					[/filter]
						
					[object]
						silent=yes
						duration=turn
						
						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								blade=$armor_master.variables.armor_science_value
								impact=$armor_master.variables.armor_science_value
								pierce=$armor_master.variables.armor_science_value
							[/resistance]
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_dimished_armor
									name="flawed armor $armor_master.variables.armor_science_value"
									description="This unit's armor has been studied by your armor scientist and flaws were found."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
			[/do]
		[/foreach]
		
		{CLEAR_VARIABLE armor_masters}
	[/event]
#enddef

#define REGISTER_INFINITY_LOCK
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_time_lock
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[object]
						silent=yes
						duration=turn
						
						[effect]
						    apply_to=defense
						    replace=yes
						    [defense]
							flat=75
							frozen=75
							forest=75
							hills=75
							village=75
							swamp_water=75
							shallow_water=75
							castle=75
							cave=75
							sand=75
							fungus=75
							mountains=75
							castle=75
							sand=75
						    [/defense]
						[/effect]
						[effect]
						    apply_to=remove_attacks
						[/effect]
						[effect]
						    apply_to=image_mod
						    add="~BL(1.5)"
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_time_locked
									name="<span color='#99d5e0'>time lock</span>"
									description="This unit is locked outside of time."
								[/dummy]
								[dummy]
									id=qquws_status_time_dilation_active
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
				
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[status]
						slowed=yes
					[/status]
					
					[object]
						silent=yes
						duration=turn end
						
						[effect]
						    apply_to=defense
						    replace=yes
						    [defense]
							flat=75
							frozen=75
							forest=75
							hills=75
							village=75
							swamp_water=75
							shallow_water=75
							castle=75
							cave=75
							sand=75
							fungus=75
							mountains=75
							castle=75
							sand=75
						    [/defense]
						[/effect]
						[effect]
						    apply_to=attack
						    set_attacks=1
						[/effect]
						[effect]
						    apply_to=image_mod
						    add="~BL(1.5)"
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_time_locked
									name="<span color='#99d5e0'>time lock</span>"
									description="This unit is locked outside of time."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
				
				[harm_unit]
					[filter]
						[not]
							[filter_wml]
								[variables]
									is_immune_to_specials=yes
								[/variables]
							[/filter_wml]
						[/not]
						
						[not]
							id=$second_unit.id
						[/not]
	
						[filter_location]
							x,y=$second_unit.x,$second_unit.y
							radius=1
							[filter_radius]
								terrain="!,_off^_usr,X*,M*^X*"
							[/filter_radius]
						[/filter_location]
						
						[filter_side]
							[enemy_of]
								side=$unit.side
							[/enemy_of]
						[/filter_side]
					[/filter]
					
					[filter_second]
						id=$unit.id
					[/filter_second]
					
					amount=4
					damage_type=cold
					alignment=neutral
					kill=yes
					animate=yes
					experience=yes
					slowed=yes
				[/harm_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_infinity_lock
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[object]
						silent=yes
						duration=turn
						
						[effect]
						    apply_to=remove_attacks
						[/effect]
						[effect]
						    apply_to=image_mod
						    add="~BL(2)~BW(255)"
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_infinity_locked
									name="<span color='#9660cc'>infinity lock</span>"
									description="This unit is locked outside of space."
								[/dummy]
								[dummy]
									id=qquws_status_time_dilation_active
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
				
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[status]
						slowed=yes
					[/status]
					
					[object]
						silent=yes
						duration=turn end
						
						[effect]
						    apply_to=defense
						    replace=yes
						    [defense]
							flat=85
							frozen=85
							forest=85
							hills=85
							village=85
							swamp_water=85
							shallow_water=85
							castle=85
							cave=85
							sand=85
							fungus=85
							mountains=85
							castle=85
							sand=85
						    [/defense]
						[/effect]
						[effect]
						    apply_to=remove_attacks
						[/effect]
						[effect]
						    apply_to=movement
						    set=0
						[/effect]
						[effect]
						    apply_to=image_mod
						    add="~BL(2)~BW(255)"
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_infinity_locked
									name="<span color='#9660cc'>infinity lock</span>"
									description="This unit is locked outside of space."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
				
				[harm_unit]
					[filter]
						[not]
							[filter_wml]
								[variables]
									is_immune_to_specials=yes
								[/variables]
							[/filter_wml]
						[/not]
						
						[not]
							id=$second_unit.id
						[/not]
	
						[filter_location]
							x,y=$second_unit.x,$second_unit.y
							radius=5
							[filter_radius]
								terrain="!,_off^_usr,X*,M*^X*"
							[/filter_radius]
						[/filter_location]
						
						[filter_side]
							[enemy_of]
								side=$unit.side
							[/enemy_of]
						[/filter_side]
					[/filter]
					
					[filter_second]
						id=$unit.id
					[/filter_second]
					
					amount=8
					damage_type=cold
					alignment=neutral
					kill=yes
					animate=yes
					experience=yes
					slowed=yes
				[/harm_unit]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_IMPALE
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_impale
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_status_impaled
			[/not]
		[/filter_second]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#c71628'>IMPALED!</span>"
		[/floating_text]
		
		{VARIABLE mask_image_width 72}
		{VARIABLE mask_image_height 72}
		[if]
			[variable]
				name=second_unit.variables.image_base_w
				greater_than=0
			[/variable]
			[then]
				{VARIABLE mask_image_width $second_unit.variables.image_base_w}
				{VARIABLE mask_image_height $second_unit.variables.image_base_h}
			[/then]
		[/if]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				    apply_to=attack
				    increase_damage=-33%
				[/effect]
				[effect]
				    apply_to=movement
				    increase=-33%
				[/effect]
				[effect]
				    apply_to=image_mod
				    add="~MASK(halo/uws/impale.png~SCALE($mask_image_width,$mask_image_height))"
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_impaled
							name="<span color='#bd3124'>impaled</span>"
							description="This unit was impaled. It's damage and movement are reduced by 33% until the end of it's turn."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
				    apply_to=remove_resistance
				    type=pierce
				    amount=$unit.variables.impale_armor_reduce
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_BATTLE_TRANCE
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_trance
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[foreach]
			array=unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=qquws_w_berserkers_fury
					[/variable]
					[then]
						{VARIABLE battle_trance_attack_id $i}
						{VARIABLE battle_trance_base_damage $weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_trance
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{VARIABLE_OP unit.attack[$battle_trance_attack_id].damage add 1}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_trance
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{VARIABLE unit.attack[$battle_trance_attack_id].damage $battle_trance_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE battle_trance_attack_id}
		{CLEAR_VARIABLE battle_trance_base_damage}
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_overwhelm
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[foreach]
			array=unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$weapon.name
					[/variable]
					[then]
						{VARIABLE overwhelm_attack_id $i}
						{VARIABLE overwhelm_base_damage $weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
		
		[foreach]
			array=second_unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$second_weapon.name
					[/variable]
					[then]
						{VARIABLE overwhelm_second_attack_id $i}
						{VARIABLE overwhelm_second_base_damage $second_weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_overwhelm
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{VARIABLE_OP unit.attack[$overwhelm_attack_id].damage add 1}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{VARIABLE second_attack_test $overwhelm_second_base_damage}
		{VARIABLE_OP second_attack_test multiply 0.33}
		{VARIABLE_OP second_attack_test add 1}
		
		[if]
			[variable]
				name=second_unit.attack[$overwhelm_second_attack_id].damage
				greater_than=$second_attack_test
			[/variable]
			[then]
				{VARIABLE_OP second_attack_test multiply 2}
				
				{VARIABLE damage_decrease_factor 1}
				[if]
					[variable]
						name=second_unit.attack[$overwhelm_second_attack_id].damage
						greater_than=$second_attack_test
					[/variable]
					[then]
						{VARIABLE damage_decrease_factor 2}
					[/then]
				[/if]
				
				{VARIABLE_OP second_unit.attack[$overwhelm_second_attack_id].damage sub $damage_decrease_factor}
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_overwhelm
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{VARIABLE unit.attack[$overwhelm_attack_id].damage $overwhelm_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{VARIABLE second_unit.attack[$overwhelm_second_attack_id].damage $overwhelm_second_base_damage}
		[unstore_unit]
		        variable=second_unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE overwhelm_attack_id}
		{CLEAR_VARIABLE overwhelm_base_damage}
		{CLEAR_VARIABLE overwhelm_second_attack_id}
		{CLEAR_VARIABLE overwhelm_second_base_damage}
		{CLEAR_VARIABLE second_attack_test}
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				    apply_to=defense
				    replace=no
				    [defense]
					flat=10
					frozen=10
					forest=10
					hills=10
					village=10
					swamp_water=10
					shallow_water=10
					castle=10
					cave=10
					sand=10
					fungus=10
					mountains=10
					castle=10
					sand=10
				    [/defense]
				[/effect]
				[effect]
				    apply_to=attack
				    increase_accuracy=-10
				[/effect]
				[effect]
				    apply_to=image_mod
				    add="~SEPIA()"
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_overwelmed
							name="<span color='#cf7851'>overwhelmed</span>"
							description="This unit is overwhelmed and has all defenses and weapon accuracy reduced by 10% for one turn."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_MIND_TRICKS
	[event]
		name=attack
		first_time_only=no
		
		[filter]
			ability=qquws_mind_tricks
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]

		{VARIABLE mind_tricks_received_damage 0}
	[/event]

	[event]
		name=defender hits
		first_time_only=no
		
		[filter]
			ability=qquws_mind_tricks
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{VARIABLE_OP mind_tricks_received_damage add $damage_inflicted}
	[/event]

	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			ability=qquws_mind_tricks
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[fire_event]
			name=mind_tricks_apply
			[primary_unit]
				id=$unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$second_unit.id
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=mind_tricks_apply
		first_time_only=no
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=second_unit.hitpoints
					greater_than=0
				[/variable]
			[/and]
			[then]
				{VARIABLE mind_tricks_deal_damage $mind_tricks_received_damage}
				{VARIABLE_OP mind_tricks_deal_damage multiply $unit.variables.mind_tricks_factor}
				{VARIABLE_OP mind_tricks_deal_damage round floor}
				
				[if]
					[variable]
						name=mind_tricks_deal_damage
						greater_than=0
					[/variable]
					[then]
						[heal_unit]
							[filter]
								id=$unit.id
							[/filter]
							
							amount=$mind_tricks_deal_damage
							animate=yes
						[/heal_unit]
						
						[harm_unit]
							[filter]
								id=$second_unit.id
							[/filter]
							
							[filter_second]
								id=$unit.id
							[/filter_second]
							
							amount=$mind_tricks_deal_damage
							damage_type=arcane
							alignment=neutral
							kill=yes
							animate=yes
							experience=yes
						[/harm_unit]
					[/then]
				[/if]
			[/then]
		[/if]
		
		{CLEAR_VARIABLE mind_tricks_received_damage}
		{CLEAR_VARIABLE mind_tricks_deal_damage}
	[/event]
#enddef

#define REGISTER_REVERSED_POLARITY
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_reversed_polarity
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]

		{VARIABLE reversed_polarity_applied no}
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_reversed_polarity
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=reversed_polarity_applied
				boolean_equals=no
			[/variable]
			[then]
				{VARIABLE new_x $unit.x}
				{VARIABLE new_y $unit.y}
				
				{VARIABLE unit.x $second_unit.x}
				{VARIABLE unit.y $second_unit.y}
				
				{VARIABLE second_unit.x 0}
				{VARIABLE second_unit.y 0}
				
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
				
				[unstore_unit]
					variable=unit
				[/unstore_unit]
				
				{VARIABLE second_unit.x $new_x}
				{VARIABLE second_unit.y $new_y}
				
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
		
				{VARIABLE reversed_polarity_applied yes}
				{CLEAR_VARIABLE new_x}
				{CLEAR_VARIABLE new_y}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_reversed_polarity
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		{CLEAR_VARIABLE reversed_polarity_applied}
	[/event]
#enddef

#define REGISTER_ARCANE_TRICKSTERY
	[event]
		name=defender hits
		first_time_only=no
		
		[filter]
			ability=qquws_arcane_trickstery
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[fire_event]
			name=apply_arcane_trickstery
			[primary_unit]
				id=$unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$second_unit.id
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_second]
			ability=qquws_arcane_trickstery
		[/filter_second]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		
		[fire_event]
			name=apply_arcane_trickstery
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$unit.id
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=apply_arcane_trickstery
		first_time_only=no
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				{VARIABLE arcane_trickstery_value $damage_inflicted}
				{VARIABLE_OP arcane_trickstery_value multiply $unit.variables.arcane_trickstery_factor}
				{VARIABLE_OP arcane_trickstery_value round floor}
				
				[if]
					[variable]
						name=arcane_trickstery_value
						greater_than=0
					[/variable]
					[then]
						[store_unit]
							[filter]
								[filter_location]
									x=$unit.x
									y=$unit.y
									radius=3
								[/filter_location]
								
								[not]
									[filter_wml]
										[variables]
											is_immune_to_specials=yes
										[/variables]
									[/filter_wml]
								[/not]
							[/filter]
							
							variable=units_within_radius
							mode=always_clear
						[/store_unit]
						
						{VARIABLE_OP random_unit_i rand 1..$units_within_radius.length}
						{VARIABLE_OP random_unit_i sub 1}
						
						[if]
							[have_unit]
								id=$units_within_radius[$random_unit_i].id
								[filter_side]
									[enemy_of]
										side=$unit.side
									[/enemy_of]
								[/filter_side]
								count=1
							[/have_unit]
							[then]
								# it is an enemy
								[harm_unit]
									[filter]
										id=$units_within_radius[$random_unit_i].id
									[/filter]
									
									[filter_second]
										id=$unit.id
									[/filter_second]
									
									amount=$arcane_trickstery_value
									damage_type=arcane
									alignment=neutral
									kill=yes
									animate=yes
									experience=yes
								[/harm_unit]
							[/then]
							[else]
								# [heal_unit] can't go above max hitpoints
								{VARIABLE_OP units_within_radius[$random_unit_i].hitpoints add $arcane_trickstery_value}
								[unstore_unit]
									variable=units_within_radius[$random_unit_i]
								[/unstore_unit]
								
								[floating_text]
									x,y=$units_within_radius[$random_unit_i].x,$units_within_radius[$random_unit_i].y
									text="<span color='#00ff00'>$arcane_trickstery_value</span>"
								[/floating_text]
							[/else]
						[/if]
						
						{CLEAR_VARIABLE $units_within_radius}
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_STUN
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_stun
		[/filter_attack]
		
		[filter_second]
			[not]
				ability=qquws_status_stunned
			[/not]
		[/filter_second]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
					apply_to=zoc
					value=no
				[/effect]
				[effect]
					apply_to=image_mod
					add="~CS(50,50,0)"
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_stunned
							name="<span color='#d1a758'>stunned</span>"
							description="This unit is stunned and has no zone of control."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#d1a758'>stunned</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_CRUSHING_BLOW
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_crushing_blow
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_status_crushed
			[/not]
		[/filter_second]
		
		{VARIABLE mask_image_width 72}
		{VARIABLE mask_image_height 60}
		[if]
			[variable]
				name=second_unit.variables.image_base_w
				greater_than=0
			[/variable]
			[then]
				{VARIABLE mask_image_width $second_unit.variables.image_base_w}
				{VARIABLE mask_image_height $second_unit.variables.image_base_h}
				{VARIABLE_OP mask_image_height mulitply 0.8}
			[/then]
		[/if]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				    apply_to=attack
				    increase_attacks=-1
				[/effect]
				[effect]
					apply_to=zoc
					value=no
				[/effect]
				[effect]
					apply_to=image_mod
					add="~SCALE($mask_image_width,$mask_image_height)~CS(50,50,0)"
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_crushed
							name="<span color='#d1a758'>crushed</span>"
							description="This unit is crushed, has no zone of control and has 1 strike removed."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#d1a758'>crushed</span>"
		[/floating_text]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_shatter_the_bones
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_status_shattered
			[/not]
		[/filter_second]
		
		{VARIABLE mask_image_width 72}
		{VARIABLE mask_image_height 48}
		[if]
			[variable]
				name=second_unit.variables.image_base_w
				greater_than=0
			[/variable]
			[then]
				{VARIABLE mask_image_width $second_unit.variables.image_base_w}
				{VARIABLE mask_image_height $second_unit.variables.image_base_h}
				{VARIABLE_OP mask_image_height mulitply 0.6}
			[/then]
		[/if]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				    apply_to=attack
				    increase_attacks=-51%
				[/effect]
				[effect]
					apply_to=zoc
					value=no
				[/effect]
				[effect]
					apply_to=image_mod
					add="~SCALE($mask_image_width,$mask_image_height)~CS(50,50,0)"
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_shattered
							name="<span color='#d1a758'>shattered</span>"
							description="This unit is shattered, has no zone of control and has 50% strikes removed."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#d1a758'>shattered</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_BURNING_PASSION
	[event]
		name=die
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_burning_passion
		[/filter_second_attack]
		
		[filter_second]
			side=$side_number
		[/filter_second]

		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			attacks_left=1
			
			[status]
				is_qquws_possessed=yes
			[/status]
			
			[object]
				silent=yes
				duration=turn
				
				[effect]
				    apply_to=attack
				    increase_damage=1
				[/effect]
			[/object]
		[/modify_unit]
		
		[if]
			[have_unit]
				id=$second_unit.id
				ability=qquws_status_possessed
				count=0
			[/have_unit]
			[then]
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[object]
						silent=yes
						duration=turn end
						
						[effect]
							apply_to=image_mod
							add="~CS(50,0,0)"
						[/effect]
						[effect]
							apply_to=remove_attacks
							[not]
								name=qquws_w_wrath_of_fire
							[/not]
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_possessed
									name="<span color='#e81410'>possessed</span>"
									description="This unit is possessed, it's damage is increased and can attack again."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
			[/then]
		[/if]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#e81410'>possessed!</span>"
		[/floating_text]
	[/event]
	
	[event]
		name=side turn end
		first_time_only=no
		
		[filter_side]
			[has_unit]
				side=$side_number
				status=is_qquws_possessed
			[/has_unit]
		[/filter_side]
		
		[modify_unit]
			[filter]
				side=$side_number
				status=is_qquws_possessed
			[/filter]
			
			[status]
				is_qquws_possessed=no
			[/status]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				        apply_to=remove_attacks
				[/effect]
				[effect]
					apply_to=image_mod
					add="~NEG(80)"
				[/effect]
				[effect]
					apply_to=movement
					set=0
				[/effect]
				[effect]
				    apply_to=resistance
				    replace=yes
				    [resistance]
					arcane=100
					blade=100
					cold=100
					impact=100
					pierce=100
				    [/resistance]
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_possession_recovery
							name="<span color='#e81410'>exhaustion</span>"
							description="The spirits have left this unit. It will recover after one turn."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_BURNING_POSSESSION
	[event]
		name=die
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_burning_possession
		[/filter_second_attack]
		
		[filter_second]
			side=$side_number
		[/filter_second]

		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			attacks_left=1
			moves=2
			
			[status]
				is_qquws_extra_possessed=yes
			[/status]
			
			[object]
				silent=yes
				duration=turn
				
				[effect]
				    apply_to=attack
				    increase_damage=2
				[/effect]
			[/object]
		[/modify_unit]
		
		[if]
			[have_unit]
				id=$second_unit.id
				ability=qquws_status_extra_possessed
				count=0
			[/have_unit]
			[then]
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[object]
						silent=yes
						duration=turn end
						
						[effect]
							apply_to=image_mod
							add="~CS(50,0,0)"
						[/effect]
						[effect]
							apply_to=remove_attacks
							[not]
								name=qquws_w_wrath_of_fire
							[/not]
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_extra_possessed
									name="<span color='#e81410'>possessed</span>"
									description="This unit is possessed, it's damage is increased and can move and attack again."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
			[/then]
		[/if]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#e81410'>possessed!</span>"
		[/floating_text]
	[/event]
	
	[event]
		name=side turn end
		first_time_only=no
		
		[filter_side]
			[has_unit]
				side=$side_number
				status=is_qquws_extra_possessed
			[/has_unit]
		[/filter_side]
		
		[modify_unit]
			[filter]
				side=$side_number
				status=is_qquws_extra_possessed
			[/filter]
			
			[status]
				is_qquws_extra_possessed=no
			[/status]
			
			[object]
				silent=yes
				duration=turn end
				
				[effect]
				        apply_to=remove_attacks
				[/effect]
				[effect]
					apply_to=image_mod
					add="~NEG(80)"
				[/effect]
				[effect]
					apply_to=movement
					set=3
				[/effect]
				[effect]
				    apply_to=resistance
				    replace=yes
				    [resistance]
					arcane=100
					blade=100
					cold=100
					impact=100
					pierce=100
				    [/resistance]
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_status_possession_recovery
							name="<span color='#e81410'>exhaustion</span>"
							description="The spirits have left this unit. It will recover after one turn."
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_FINAL_SHOWDOWN
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_final_showdown
		[/filter_attack]
		
		[fire_event]
			name=qquws_final_showdown_prepare
			[primary_unit]
				id=$unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$second_unit.id
			[/secondary_unit]
			
			[primary_attack]
				name=$weapon.name
				damage=$weapon.damage
			[/primary_attack]
			
			[secondary_attack]
				name=$second_weapon.name
				damage=$second_weapon.damage
			[/secondary_attack]
		[/fire_event]
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_final_showdown
		[/filter_second_attack]
		
		[fire_event]
			name=qquws_final_showdown_prepare
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$unit.id
			[/secondary_unit]
			
			[primary_attack]
				name=$second_weapon.name
				damage=$second_weapon.damage
			[/primary_attack]
			
			[secondary_attack]
				name=$weapon.name
				damage=$weapon.damage
			[/secondary_attack]
		[/fire_event]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_final_showdown
		[/filter_attack]
		
		{VARIABLE_OP unit.attack[$final_showdown_attack_id].damage add 1}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_final_showdown
		[/filter_second_attack]
		
		{VARIABLE_OP unit.attack[$final_showdown_second_attack_id].damage add 1}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_final_showdown
		[/filter_attack]
		
		{VARIABLE_OP second_unit.attack[$final_showdown_second_attack_id].damage add 1}
		[unstore_unit]
		        variable=second_unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_final_showdown
		[/filter_second_attack]
		
		{VARIABLE_OP second_unit.attack[$final_showdown_attack_id].damage add 1}
		[unstore_unit]
		        variable=second_unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_final_showdown
		[/filter_attack]
		
		[fire_event]
			name=qquws_final_showdown_clear
			[primary_unit]
				id=$unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$second_unit.id
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_final_showdown
		[/filter_second_attack]
		
		[fire_event]
			name=qquws_final_showdown_clear
			[primary_unit]
				id=$second_unit.id
			[/primary_unit]
			
			[secondary_unit]
				id=$unit.id
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
		name=qquws_final_showdown_prepare
		first_time_only=no
		
		[foreach]
			array=unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$weapon.name
					[/variable]
					[then]
						{VARIABLE final_showdown_attack_id $i}
						{VARIABLE final_showdown_base_damage $weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
		
		[foreach]
			array=second_unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$second_weapon.name
					[/variable]
					[then]
						{VARIABLE final_showdown_second_attack_id $i}
						{VARIABLE final_showdown_second_base_damage $second_weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
	[/event]
	
	[event]
		name=qquws_final_showdown_clear
		first_time_only=no
		
		{VARIABLE unit.attack[$final_showdown_attack_id].damage $final_showdown_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE final_showdown_attack_id}
		{CLEAR_VARIABLE final_showdown_base_damage}
		
		{VARIABLE second_unit.attack[$final_showdown_second_attack_id].damage $final_showdown_second_base_damage}
		[unstore_unit]
		        variable=second_unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE final_showdown_second_attack_id}
		{CLEAR_VARIABLE final_showdown_second_base_damage}
	[/event]
#enddef

#define REGISTER_AURA_OF_DEATH
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_side]
			[has_unit]
				ability=qquws_aura_of_death
			[/has_unit]
		[/filter_side]
		
		[if]
			[have_unit]
				side=$side_number
				ability=qquws_aura_of_death
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						ability=qquws_aura_of_death
					[/filter]
					
					variable=aura_of_death_units
					mode=always_clear
				[/store_unit]
				
				[foreach]
					array=aura_of_death_units
					variable=aura_of_death_unit
					readonly=yes
					
					[do]
						[harm_unit]
							[filter]
								[filter_location]
									x,y=$aura_of_death_unit.x,$aura_of_death_unit.y
									radius=12
									[filter_radius]
										terrain="!,_off^_usr,X*,M*^X*"
									[/filter_radius]
									[filter_vision]
										visible=yes
										respect_fog=yes
									[/filter_vision]
								[/filter_location]
								
								[filter_side]
									[enemy_of]
										side=$side_number
									[/enemy_of]
								[/filter_side]
								
								x=2-99
							[/filter]
							
							amount=$aura_of_death_unit.variables.aura_of_death_damage
							damage_type=arcane
							alignment=neutral
							kill=no
							animate=yes
							experience=no
						[/harm_unit]
					[/do]
				[/foreach]
				
				{CLEAR_VARIABLE aura_of_death_units}
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_INFERNAL_POSSESSION
	[event]
		name=die
		first_time_only=no
		
		[filter_second]
			side=$side_number
			ability=qquws_infernal_possession
		[/filter_second]

		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			attacks_left=1
			moves=2
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#e81410'>possessed!</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_ENEMY_OVERWHELM
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_enemy_overwhelm
		[/filter_attack]
		
		[foreach]
			array=unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$weapon.name
					[/variable]
					[then]
						{VARIABLE enemy_overwhelm_attack_id $i}
						{VARIABLE enemy_overwhelm_base_damage $weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
		
		[foreach]
			array=second_unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$second_weapon.name
					[/variable]
					[then]
						{VARIABLE enemy_overwhelm_second_attack_id $i}
						{VARIABLE enemy_overwhelm_second_base_damage $second_weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_enemy_overwhelm
		[/filter_attack]
		
		{VARIABLE_OP unit.attack[$enemy_overwhelm_attack_id].damage add 3}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{VARIABLE second_attack_test $enemy_overwhelm_second_base_damage}
		{VARIABLE_OP second_attack_test multiply 0.33}
		{VARIABLE_OP second_attack_test add 1}
		
		[if]
			[variable]
				name=second_unit.attack[$enemy_overwhelm_second_attack_id].damage
				greater_than=$second_attack_test
			[/variable]
			[then]
				{VARIABLE_OP second_attack_test multiply 2}
				
				{VARIABLE damage_decrease_factor 1}
				[if]
					[variable]
						name=second_unit.attack[$enemy_overwhelm_second_attack_id].damage
						greater_than=$second_attack_test
					[/variable]
					[then]
						{VARIABLE damage_decrease_factor 3}
					[/then]
				[/if]
				
				{VARIABLE_OP second_unit.attack[$enemy_overwhelm_second_attack_id].damage sub $damage_decrease_factor}
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_enemy_overwhelm
		[/filter_attack]
		
		{VARIABLE unit.attack[$enemy_overwhelm_attack_id].damage $enemy_overwhelm_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{VARIABLE second_unit.attack[$enemy_overwhelm_second_attack_id].damage $enemy_overwhelm_second_base_damage}
		[unstore_unit]
		        variable=second_unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE enemy_overwhelm_attack_id}
		{CLEAR_VARIABLE enemy_overwhelm_base_damage}
		{CLEAR_VARIABLE enemy_overwhelm_second_attack_id}
		{CLEAR_VARIABLE enemy_overwhelm_second_base_damage}
		{CLEAR_VARIABLE second_attack_test}
	[/event]
#enddef

#define REGISTER_KAMIKAZE
	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			ability=qq_kamikaze
			x,y=$x1,$y1
		[/filter]
		[kill]
			x,y=$x1,$y1
			animate=yes
			fire_event=yes
		[/kill]
	[/event]
#enddef

#define REGISTER_ASTRAL_IMPRISONMENT
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_astral_imprisonment
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_status_astral_imprisoned
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[object]
						silent=yes
						duration=turn end
						
						[effect]
						    apply_to=remove_attacks
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_status_astral_imprisoned
									name="<span color='#ab7b87'>imprisoned</span>"
									description="This unit is imprisoned."
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_second]
			ability=qquws_status_astral_imprisoned
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					hitpoints=1
					[status]
						petrified=yes
						unhealable=yes
					[/status]
				[/modify_unit]
				
				[set_variables]
					name=qquws_lasting_effect_information
					mode=append
					[value]
					    id=$second_unit.id
					    side=$second_unit.side
					    end_of_effect_turn="$($turn_number| + 2)"
					    effect_type=petrification
					[/value]
				[/set_variables]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_DRAGONS_PROTECTION
	[event]
		name=attack
		first_time_only=no
		
		[filter]
			ability=qquws_dragon_protection
		[/filter]
		
		[if]
			[variable]
				name=unit.hitpoints
				less_than_equal_to=$unit.variables.dragon_protection_threshold
			[/variable]
			[and]
				[variable]
					name=unit.variables.dragon_protection_counter
					greater_than=0
				[/variable]
			[/and]
			[then]
				[object]
					silent=yes
					id=dragon_protection_enabled
					take_only_once=no
					
					[filter]
						id=$unit.id
					[/filter]
					
					[effect]
						apply_to=new_ability
						[abilities]
							[dummy]
								id=qquws_protected_dragon_protection
								name="<span color='#55ad44'>protected</span>"
								description="This unit is protected with Dragon's Protection."
							[/dummy]
						[/abilities]
					[/effect]
					[effect]
					    apply_to=halo
					    halo="halo/uws/dragon_protection[1~8].png:100"
					[/effect]
				[/object]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_second]
			ability=qquws_dragon_protection
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				less_than_equal_to=$second_unit.variables.dragon_protection_threshold
			[/variable]
			[and]
				[variable]
					name=second_unit.variables.dragon_protection_counter
					greater_than=0
				[/variable]
			[/and]
			[then]
				[object]
					silent=yes
					id=dragon_protection_enabled
					take_only_once=no
					
					[filter]
						id=$second_unit.id
					[/filter]
					
					[effect]
						apply_to=new_ability
						[abilities]
							[dummy]
								id=qquws_protected_dragon_protection
								name="<span color='#55ad44'>protected</span>"
								description="This unit is protected with Dragon's Protection."
							[/dummy]
						[/abilities]
					[/effect]
					[effect]
					    apply_to=halo
					    halo="halo/uws/dragon_protection[1~8].png:100"
					[/effect]
				[/object]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			ability=qquws_protected_dragon_protection
		[/filter]
		
		[if]
			[variable]
				name=unit.hitpoints
				less_than=1
			[/variable]
			[then]
				{VARIABLE unit.hitpoints $unit.variables.dragon_restore_amount}
				[unstore_unit]
					variable=unit
				[/unstore_unit]
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[variables]
						dragon_protection_counter=0
					[/variables]
				[/modify_unit]
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#42bd19' size='large'>Protection!</span>"
				[/floating_text]
			[/then]
		[/if]
		
		[remove_object]
			id=$unit.id
			object_id=dragon_protection_enabled
		[/remove_object]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_second]
			ability=qquws_protected_dragon_protection
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				less_than=1
			[/variable]
			[then]
				{VARIABLE second_unit.hitpoints $second_unit.variables.dragon_restore_amount}
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
				
				[modify_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[variables]
						dragon_protection_counter=0
					[/variables]
				[/modify_unit]
				
				[floating_text]
					x,y=$second_unit.x,$second_unit.y
					text="<span color='#42bd19' size='large'>Protection!</span>"
				[/floating_text]
			[/then]
		[/if]
		
		[remove_object]
			id=$second_unit.id
			object_id=dragon_protection_enabled
		[/remove_object]
	[/event]
#enddef

#define REGISTER_SICKNESS
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_sickness
		[/filter_attack]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_bitten_sickness
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_sickness
					
					[primary_unit]
						id=$second_unit.id
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_sickness
		[/filter_second_attack]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
			
			[not]
				ability=qquws_bitten_sickness
			[/not]
		[/filter]
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_sickness
					
					[primary_unit]
						id=$unit.id
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=uws_handle_sickness
		first_time_only=no
		
		{VARIABLE sickness_end_turn $turn_number}
		{VARIABLE_OP sickness_end_turn add 3}
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[status]
				slowed=yes
				unhealable=yes
				poisoned=yes
			[/status]
			
			[object]
				silent=yes
				id=uws_sickness_bitten_object
				take_only_once=no
				
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_bitten_sickness
							name="<span color='#b0693a'>sickness</span>"
							description="This unit is bitten. It is slowed, poisoned, unhealable and receives 25% more damage from all enemies. The effect will wear off on turn $sickness_end_turn|."
						[/dummy]
					[/abilities]
				[/effect]
				[effect]
					apply_to=attack
					[set_specials]
						[damage]
							id=qquws_easy_target
							name="easy target"
							apply_to=opponent
							multiply=1.25
							description="Receives 25% more damage from all enemies. The effect will wear off on turn $sickness_end_turn|."
						[/damage]
					[/set_specials]
				[/effect]
				[effect]
				    apply_to=halo
				    halo="halo/uws/sickness[1~6].png:160"
				[/effect]
			[/object]
		[/modify_unit]
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#b0693a' size='large'>Sickness!</span>"
		[/floating_text]
		
		[set_variables]
			name=qquws_lasting_effect_information
			mode=append
			[value]
			    id=$unit.id
			    side=$unit.side
			    end_of_effect_turn=$sickness_end_turn
			    effect_type=sickness
			[/value]
		[/set_variables]
	[/event]
#enddef

#define REGISTER_REQUIRES_ESCORTING
	[event]
		name=side turn
		first_time_only=no
		
		[filter_side]
			side=$uws_game.filter_human_sides
			
			[has_unit]
				side=$side_number
				ability=qquws_requires_escorting
			[/has_unit]
		[/filter_side]
		
		{VARIABLE all_units_found no}
		{VARIABLE distance_within_limit no}
		[lua]
			code = <<
				local side_number = wesnoth.get_variable('side_number')
				local easily_lost = wesnoth.units.find_on_map({ side = side_number, ability = 'qquws_requires_escorting' })
				local leader_8 = wesnoth.units.find_on_map({ side = 8, canrecruit = true })
				local leader_9 = wesnoth.units.find_on_map({ side = 9, canrecruit = true })
				
				if easily_lost and easily_lost[1] then
					wesnoth.set_variable('all_units_found', true)
					
					local distance_8 = 99
					local distance_9 = 99
					if leader_8 and leader_8[1] then
						distance_8 = wesnoth.map.distance_between({ easily_lost[1].x, easily_lost[1].y }, { leader_8[1].x, leader_8[1].y })
					end
					
					if leader_9 and leader_9[1] then
						distance_9 = wesnoth.map.distance_between({ easily_lost[1].x, easily_lost[1].y }, { leader_9[1].x, leader_9[1].y })
					end
					
					if distance_8 < 3 or distance_9 < 3 then
						wesnoth.set_variable('distance_within_limit', true)
					end
				end
>>
		[/lua]
		
		[if]
			[variable] # should ALWAYS evaluate to true
				name=all_units_found
				boolean_equals=yes
			[/variable]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						ability=qquws_requires_escorting
					[/filter]
					
					variable=easily_lost_unit
					mode=always_clear
				[/store_unit]
			
				[if]
					[variable]
						name=distance_within_limit
						boolean_equals=yes
					[/variable]
					[then]
						[if]
							[variable]
								name=easily_lost_unit.variables.unit_lost_counter
								less_than=1
							[/variable]
							[then]
								[message]
									id=$easily_lost_unit.id
									message="Goodness me, my heart is in my throat, I thought I lost you guys!"
								[/message]
							[/then]
						[/if]
						
						[modify_unit]
							[filter]
								id=$easily_lost_unit.id
							[/filter]
							
							[variables]
								unit_lost_counter=1
							[/variables]
						[/modify_unit]
					[/then]
					[else]
						[if]
							[variable]
								name=easily_lost_unit.variables.unit_lost_counter
								less_than=1
							[/variable]
							[then]
								[message]
									id=$easily_lost_unit.id
									message="I'm lost..."
								[/message]
								
								[kill]
									id=$easily_lost_unit.id
									animate=yes
									fire_event=no
								[/kill]
							[/then]
							[else]
								[message]
									id=$easily_lost_unit.id
									message="Guys? GUYS?! Where are you? Don't leave me here alone!"
								[/message]
								
								[modify_unit]
									[filter]
										id=$easily_lost_unit.id
									[/filter]
									
									[variables]
										unit_lost_counter=0
									[/variables]
								[/modify_unit]
							[/else]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=last breath
		first_time_only=no
		
		[filter]
			ability=qquws_requires_escorting
		[/filter]
		
		[store_unit]
			[filter]
				side=$unit.side
				canrecruit=yes
			[/filter]
			
			variable=dead_unit_side_owner
			mode=always_clear
		[/store_unit]
		
		[message]
			id=$unit.id
			message="Darkness I see, help me! HELP ME!"
		[/message]
		
		[message]
			id=$dead_unit_side_owner.id
			message="No hard feelings after this guy."
		[/message]
	[/event]
#enddef

#define REGISTER_INTERRUPTS
	[event]
		name=defender hits
		first_time_only=no

		[filter_second_attack]
			special_id=qquws_interrupt
		[/filter_second_attack]
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		[filter_condition]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
		[/filter_condition]

		[store_unit]
			[filter]
				find_in=second_unit
			[/filter]
			
			variable=qquws_interrupt_target
			kill=yes
		[/store_unit]
		
		{VARIABLE qquws_interrupt_target.variables.qquws_interrupt yes}
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_condition]
			[variable]
				name=qquws_interrupt_target.variables.qquws_interrupt
				equals=yes
			[/variable]
		[/filter_condition]
		
		{CLEAR_VARIABLE qquws_interrupt_target.variables.qquws_interrupt}
		[unstore_unit]
			variable=qquws_interrupt_target
			text=_ "interrupt"
			{COLOR_HEAL}
		[/unstore_unit]
		
		{CLEAR_VARIABLE qquws_interrupt_target}
	[/event]
#enddef

#define REGISTER_MEDUSA_SPIRIT
	[event]
		name=attacker hits
		first_time_only=no

		[filter_second]
			ability=qquws_medusa_spirit
		[/filter_second]
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		[filter_condition]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
		[/filter_condition]

		[if]
			[variable]
				name=unit.status.slowed
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=unit.status.petrified
						boolean_equals=no
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]
							
							[status]
								petrified=yes
							[/status]
							
							[object]
								silent=yes
								duration=turn
								
								[effect]
								    apply_to=remove_attacks
								[/effect]
								[effect]
									apply_to=new_ability
									[abilities]
										[dummy]
											id=qquws_status_turned_to_stone
											name="<span color='#ab7b87'>turned to stone</span>"
											description="This unit gazed into the eyes of a medusa. The effect lasts for two turns."
										[/dummy]
									[/abilities]
								[/effect]
							[/object]
						[/modify_unit]
						
						[floating_text]
							x,y=$unit.x,$unit.y
							text="<span color='#ff0000'>petrified!</span>"
						[/floating_text]
						
						[set_variables]
							name=qquws_lasting_effect_information
							mode=append
							[value]
							    id=$unit.id
							    side=$unit.side
							    end_of_effect_turn="$($turn_number| + 2)"
							    effect_type=petrification
							[/value]
						[/set_variables]
					[/then]
				[/if]
			[/then]
			[else]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[status]
						slowed=yes
					[/status]
				[/modify_unit]
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#ff0000'>slowed</span>"
				[/floating_text]
			[/else]
		[/if]
	[/event]
#enddef

#define REGISTER_CARNAGE
	[event]
		name=die
		first_time_only=no
		
		[filter_second]
			ability=qquws_carnage
		[/filter_second]
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
				
			[object]
				silent=yes

				[effect]
				    apply_to=attack
				    increase_damage=15%
				[/effect]
			[/object]
		[/modify_unit]
		
		[heal_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			amount=$second_unit.variables.carnage_heal_amount
			restore_statuses=yes
			animate=yes
		[/heal_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#ff0000'>Carnage!</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_MIND_RAID
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter]
			ability=qquws_mind_raid
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_mind_raid
					
					[primary_unit]
						id=$unit.id
					[/primary_unit]
					
					[secondary_unit]
						id=$second_unit.id
					[/secondary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter_second]
			ability=qquws_mind_raid
		[/filter_second]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[fire_event]
					name=uws_handle_mind_raid
					
					[primary_unit]
						id=$second_unit.id
					[/primary_unit]
					
					[secondary_unit]
						id=$unit.id
					[/secondary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=uws_handle_mind_raid
		first_time_only=no
		
		{VARIABLE mind_raid_stolen_xp $unit.variables.mind_raid_stolen_xp}
		{VARIABLE_OP mind_raid_stolen_xp add $unit.variables.mind_raid_steal_per_hit}
		
		[if]
			[variable]
				name=unit.variables.mind_raid_stolen_xp
				greater_than_equal_to=$unit.variables.mind_raid_threshold
			[/variable]
			[then]
				{VARIABLE mind_raid_stolen_xp 0}
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[object]
						silent=yes
						
						[effect]
						    apply_to=attack
						    increase_damage=15%
						[/effect]
					[/object]
				[/modify_unit]
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#943fd1'>+15% dmg</span>"
				[/floating_text]
			[/then]
		[/if]
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[variables]
				mind_raid_stolen_xp=$mind_raid_stolen_xp
			[/variables]
		[/modify_unit]
		
		{VARIABLE mind_raid_reduced_xp $second_unit.experience}
		{VARIABLE_OP mind_raid_reduced_xp sub $unit.variables.mind_raid_steal_per_hit}
		
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			
			experience=$mind_raid_reduced_xp
		[/modify_unit]
		
		[floating_text]
			x,y=$second_unit.x,$second_unit.y
			text="<span color='#5e98a8'>-$unit.variables.mind_raid_steal_per_hit|xp</span>"
		[/floating_text]
		
		{CLEAR_VARIABLE mind_raid_reduced_xp}
		{CLEAR_VARIABLE mind_raid_stolen_xp}
	[/event]
#enddef

#define REGISTER_EXPLODES
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_second]
			ability=qquws_explodes
		[/filter_second]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		
		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=second_unit.hitpoints
					less_than=$second_unit.variables.explodes_threshold
				[/variable]
			[/and]
			[then]
				[fire_event]
					name=uws_handle_explosion
					
					[primary_unit]
						id=$second_unit.id
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=defender hits
		first_time_only=no
		
		[filter]
			ability=qquws_explodes
		[/filter]
		
		[filter_second]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter_second]
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=unit.hitpoints
					less_than=$unit.variables.explodes_threshold
				[/variable]
			[/and]
			[then]
				[fire_event]
					name=uws_handle_explosion
					
					[primary_unit]
						id=$unit.id
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=uws_handle_explosion
		first_time_only=no
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#ff0000'>KABOOM!!!</span>"
		[/floating_text]
		
		[harm_unit]
			[filter]
				[filter_adjacent]
					x,y=$unit.x,$unit.y
				[/filter_adjacent]
			[/filter]
			
			[filter_second]
				id=$unit.id
			[/filter_second]
			
			amount=$unit.variables.explodes_damage
			damage_type=impact
			alignment=neutral
			kill=yes
			animate=yes
		[/harm_unit]
		
		[kill]
			id=$unit.id
			animate=no
			fire_event=yes
		[/kill]
	[/event]
#enddef

#define REGISTER_CONCENTRATION
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_concentration
		[/filter_attack]
		
		[object]
			id=qquws_concentration_bonus_object
			take_only_once=no
			silent=yes
			
			[filter]
				id=$unit.id
			[/filter]

			[effect]
			    apply_to=attack
			    range=ranged
			    name=$weapon.name
			    increase_accuracy=$unit.variables.concentration_amount
			[/effect]
		[/object]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_concentration
		[/filter_attack]
		
		[if]
			[variable]
				name=unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				[remove_object]
					id=$unit.id
					object_id=qquws_concentration_bonus_object
				[/remove_object]
			[/then]
		[/if]
	[/event]
#enddef

#define REGISTER_BATTLE_FURY
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_fury
		[/filter_attack]
		
		[foreach]
			array=unit.attack
			variable=units_weapon
			index_var=i
			readonly=yes
			
			[do]
				[if]
					[variable]
						name=units_weapon.name
						equals=$weapon.name
					[/variable]
					[then]
						{VARIABLE battle_fury_attack_id $i}
						{VARIABLE battle_fury_base_damage $weapon.damage}
						[break][/break]
					[/then]
				[/if]
			[/do]
		[/foreach]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_fury
		[/filter_attack]
		
		{VARIABLE_OP unit.attack[$battle_fury_attack_id].damage add $unit.variables.fury_amount}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=attacker misses
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_fury
		[/filter_attack]
		
		{VARIABLE unit.attack[$battle_fury_attack_id].damage $battle_fury_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
	[/event]
	
	[event]
		name=attack end
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_battle_fury
		[/filter_attack]
		
		{VARIABLE unit.attack[$battle_fury_attack_id].damage $battle_fury_base_damage}
		[unstore_unit]
		        variable=unit
		[/unstore_unit]
		
		{CLEAR_VARIABLE battle_fury_attack_id}
		{CLEAR_VARIABLE battle_fury_base_damage}
	[/event]
#enddef

#define REGISTER_CHRONOSPHERE
	[event]
		name=attack
		first_time_only=no
		
		[filter_second]
			ability=qquws_chronosphere
		[/filter_second]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[status]
				slowed=yes
			[/status]
		[/modify_unit]
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#45bdf5'>Slowed!</span>"
		[/floating_text]
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_second]
			ability=qquws_lesser_chronosphere
		[/filter_second]
		
		[filter]
			[not]
				[filter_wml]
					[variables]
						is_immune_to_specials=yes
					[/variables]
				[/filter_wml]
			[/not]
		[/filter]
		
		[filter_attack]
			range=melee
		[/filter_attack]
		
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			
			[status]
				slowed=yes
			[/status]
		[/modify_unit]
		
		[floating_text]
			x,y=$unit.x,$unit.y
			text="<span color='#45bdf5'>Slowed!</span>"
		[/floating_text]
	[/event]
#enddef

#define REGISTER_ANTI_STATUS_AURAS
	[event]
		name=turn refresh
		first_time_only=no
		
		[filter_condition]
			[have_unit]
				side=$side_number
				ability=qquws_unpoisonable_aura,qquws_undrainable_aura,qquws_unslowable_aura # comma separated list, at least one has to be met
			[/have_unit]
		[/filter_condition]
		
		{VARIABLE apply_to_side $side_number}
		[fire_event]
			name=apply_anti_status_auras
		[/fire_event]
	[/event]
		
	[event]
		name=unit placed
		first_time_only=no
		
		[filter_condition]
			[have_unit]
				side=$side_number
				ability=qquws_unpoisonable_aura,qquws_undrainable_aura,qquws_unslowable_aura # comma separated list, at least one has to be met
			[/have_unit]
		[/filter_condition]
		
		{VARIABLE apply_to_side $unit.side}
		[fire_event]
			name=apply_anti_status_auras
		[/fire_event]
	[/event]
	
	[event]
		name=apply_anti_status_auras
		first_time_only=no
		
		[set_variables]
			name=auras_to_iterate
			mode=replace
			[value]
				ability=qquws_unpoisonable_aura
				status=unpoisonable
			[/value]
			[value]
				ability=qquws_undrainable_aura
				status=undrainable
			[/value]
			[value]
				ability=qquws_unslowable_aura
				status=unslowable
			[/value]
		[/set_variables]
		
		[foreach]
			array=auras_to_iterate
			variable=aura
			[do]
				[if]
					[have_unit]
						side=$apply_to_side
						ability=$aura.ability
					[/have_unit]
					[then]
						[store_unit]
							[filter]
								side=$apply_to_side
								ability=$aura.ability
							[/filter]
							
							variable=aura_unit
							mode=always_clear
						[/store_unit]
						
						[store_unit]
							[filter]
								[filter_side]
									[allied_with]
										side=$apply_to_side
									[/allied_with]
								[/filter_side]
								
								[not]
									status=$aura.status
								[/not]
								
								[not]
									id=$aura_unit.id
								[/not]
								
								[filter_location]
									x,y=$aura_unit.x,$aura_unit.y
									radius=7
									[filter_radius]
										terrain="!,_off^_usr,X*,M*^X*"
									[/filter_radius]
								[/filter_location]
							[/filter]
							
							variable=apply_aura_units
							mode=always_clear
						[/store_unit]
						
						[foreach]
							array=apply_aura_units
							variable=add_aura_effect_unit
							index_var=j
							[do]
								[switch]
									# unpoisonable in [status] cannot be a var so this sill looking switch / case
									variable=aura.status
									
									[case]
										value=unpoisonable
										
										[modify_unit]
											[filter]
												id=$add_aura_effect_unit.id
											[/filter]
											
											[status]
												unpoisonable=yes
											[/status]
											
											[trait]
												id=qquws_unpoisonable_aura_buff
												name=unpoisonable
												description="This unit benefits from unpoisonable aura."
											[/trait]
										[/modify_unit]
									[/case]
									
									[case]
										value=undrainable
										
										[modify_unit]
											[filter]
												id=$add_aura_effect_unit.id
											[/filter]
											
											[status]
												undrainable=yes
											[/status]
											
											[trait]
												id=qquws_undrainable_aura_buff
												name=undrainable
												description="This unit benefits from undrainable aura."
											[/trait]
										[/modify_unit]
									[/case]
									
									[case]
										value=unslowable
										
										[modify_unit]
											[filter]
												id=$add_aura_effect_unit.id
											[/filter]
											
											[status]
												unslowable=yes
											[/status]
											
											[trait]
												id=qquws_unslowable_aura_buff
												name=unslowable
												description="This unit benefits from unslowable aura."
											[/trait]
										[/modify_unit]
									[/case]
								[/switch]
							[/do]
						[/foreach]
					[/then]
				[/if]
			[/do]
		[/foreach]
		
		[set_variables]
			name=qquws_lasting_effect_information
			mode=append
			[value]
			    id=all
			    side=$apply_to_side
			    end_of_effect_turn="$( $turn_number + 1 )"
			    effect_type=reset_status_auras
			[/value]
		[/set_variables]
	[/event]
#enddef

#define REGISTER_NECROMANCERS_BANE
	[event]
		name=attack end
		first_time_only=no
		
		[filter]
			ability=qquws_necromancers_bane
		[/filter]
		
		{VARIABLE necro_bane_reduce_near_units $unit.variables.fear_reduction}
		[if]
			[variable]
				name=second_unit.hitpoints
				less_than=1
			[/variable]
			[then]
				{VARIABLE_OP necro_bane_reduce_near_units add $unit.variables.fear_kill_reduction}
			[/then]
		[/if]
		
		{VARIABLE unit_levels "0,1,2,3,4,5,6,7"}
		[switch]
			variable=unit.variables.fear_max_lvl
			
			[case]
				value=0
				{VARIABLE unit_levels "0"}
			[/case]
			[case]
				value=1
				{VARIABLE unit_levels "0,1"}
			[/case]
			[case]
				value=2
				{VARIABLE unit_levels "0,1,2"}
			[/case]
			[case]
				value=3
				{VARIABLE unit_levels "0,1,2,3"}
			[/case]
			[case]
				value=4
				{VARIABLE unit_levels "0,1,2,3,4"}
			[/case]
			[case]
				value=5
				{VARIABLE unit_levels "0,1,2,3,4,5"}
			[/case]
			[case]
				value=6
				{VARIABLE unit_levels "0,1,2,3,4,5,6"}
			[/case]
		[/switch]
		
		[modify_unit]
			[filter]
				[filter_location]
					x,y=$second_unit.x,$second_unit.y
					radius=$unit.variables.fear_radius
					[filter_radius]
						terrain="!,_off^_usr,X*,M*^X*"
					[/filter_radius]
				[/filter_location]
				
				[filter_side]
					[enemy_of]
						side=$unit.side
					[/enemy_of]
				[/filter_side]
				
				level=$unit_levels
				
				[not]
					ability=qquws_necro_alarmed
				[/not]
			[/filter]
				
			[object]
				silent=yes
				duration=turn end
				
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qquws_necro_alarmed
							name="<span color='#bd201a'>alarmed</span>"
							description="This unit is alarmed by the presence of the Necromancer's Bane. It's damage is reduced by $necro_bane_reduce_near_units|% (half of this value if it is a champion, Butcher of Wesnoth, fearless unit or a leader)."
						[/dummy]
					[/abilities]
				[/effect]
				[effect]
				     apply_to=attack
				     remove_specials=qquws_bane_alarmed_dmg
				     [set_specials]
				    	  	mode=append
				     		 [damage]
							id=qquws_bane_alarmed_dmg
							name=""
							description=""
							apply_to=self
							multiply="( (100.0 - if(self.variables.is_immune_to_specials or self.traits.fearless or self.canrecruit, $necro_bane_reduce_near_units / 2.0, $necro_bane_reduce_near_units)) / 100.0 )"
						[/damage]
				     [/set_specials]
				 [/effect]
				
				[effect]
				    apply_to=image_mod
				    add="~CS(+40,+40,+40)~BW(220)"
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define REGISTER_PREEMPTIVE_STRIKE
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_preemptive_strike
		[/filter_attack]
		
		{VARIABLE_OP preemptive_calculate_chance rand 1..10}
		[if]
			[variable]
				name=preemptive_calculate_chance
				less_than=7
			[/variable]
			[then]
				{VARIABLE harm_damage "$( $weapon.damage * 0.75 )"}
				{VARIABLE_OP harm_damage round ceil}
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#d12e33' size='medium'>strike!</span>"
				[/floating_text]
				
				[harm_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[filter_second]
						id=$unit.id
					[/filter_second]
					
					[primary_attack]
						name=$weapon.name
					[/primary_attack]
					
					animate=yes
					experience=yes
					fire_event=yes
					alignment=$unit.alignment
					damage_type=$weapon.type
					amount=$harm_damage
					kill=yes
				[/harm_unit]
			[/then]
			[else]
				[animate_unit]
					flag=attack
					[filter]
						id=$unit.id
					[/filter]
					[primary_attack]
						name=$weapon.name
					[/primary_attack]
					
					hits=no
				[/animate_unit]
				
				[floating_text]
					x,y=$second_unit.x,$second_unit.y
					text="<span color='#65b8b5' size='medium'>miss!</span>"
				[/floating_text]
			[/else]
		[/if]
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_attack]
			special_id=qquws_initiative
		[/filter_attack]
		
		{VARIABLE_OP preemptive_calculate_chance rand 1..10}
		[if]
			[variable]
				name=preemptive_calculate_chance
				less_than=8
			[/variable]
			[then]
				{VARIABLE harm_damage "$( $weapon.damage * 1.25 )"}
				{VARIABLE_OP harm_damage round floor}
				
				[floating_text]
					x,y=$unit.x,$unit.y
					text="<span color='#d12e33' size='medium'>initiative!</span>"
				[/floating_text]
				
				[harm_unit]
					[filter]
						id=$second_unit.id
					[/filter]
					
					[filter_second]
						id=$unit.id
					[/filter_second]
					
					[primary_attack]
						name=$weapon.name
					[/primary_attack]
					
					animate=yes
					experience=yes
					fire_event=yes
					alignment=$unit.alignment
					damage_type=$weapon.type
					amount=$harm_damage
					kill=yes
				[/harm_unit]
			[/then]
			[else]
				[animate_unit]
					flag=attack
					[filter]
						id=$unit.id
					[/filter]
					[primary_attack]
						name=$weapon.name
					[/primary_attack]
					
					hits=no
				[/animate_unit]
				
				[floating_text]
					x,y=$second_unit.x,$second_unit.y
					text="<span color='#65b8b5' size='medium'>initiative miss!</span>"
				[/floating_text]
			[/else]
		[/if]
	[/event]
	
	[event]
		name=attack
		first_time_only=no
		
		[filter_second_attack]
			special_id=qquws_initiative
		[/filter_second_attack]
		
		{VARIABLE_OP preemptive_calculate_chance rand 1..10}
		[if]
			[variable]
				name=preemptive_calculate_chance
				less_than=8
			[/variable]
			[then]
				{VARIABLE harm_damage "$( $second_weapon.damage * 1.25 )"}
				{VARIABLE_OP harm_damage round floor}
				
				[floating_text]
					x,y=$second_unit.x,$second_unit.y
					text="<span color='#d12e33' size='medium'>initiative!</span>"
				[/floating_text]
				
				[harm_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[filter_second]
						id=$second_unit.id
					[/filter_second]
					
					[primary_attack]
						name=$second_weapon.name
					[/primary_attack]
					
					animate=yes
					experience=no
					fire_event=yes
					alignment=$second_unit.alignment
					damage_type=$second_weapon.type
					amount=$harm_damage
					kill=yes
				[/harm_unit]
			[/then]
			[else]
				[animate_unit]
					flag=attack
					[filter]
						id=$second_unit.id
					[/filter]
					[primary_attack]
						name=$second_weapon.name
					[/primary_attack]
					
					hits=no
				[/animate_unit]
				
				[floating_text]
					x,y=$second_unit.x,$second_unit.y
					text="<span color='#65b8b5' size='medium'>initiative miss!</span>"
				[/floating_text]
			[/else]
		[/if]
	[/event]
#enddef

#define REGISTER_BATTLE_FERVOR
	[event]
		name=unit placed
		first_time_only=no
		
		[filter]
			[not]
				trait=qquws_battle_fervor_trait
			[/not]
		[/filter]
		
		{VARIABLE apply_battle_fervor 0}
		[if]
			[variable]
				name=uws_game.is_pvp
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$unit.side
						ability=qquws_battle_fervor
					[/have_unit]
					[then]
						[store_unit]
							[filter]
								side=$unit.side
								ability=qquws_battle_fervor
							[/filter]
							
							variable=battle_fervor_unit
							mode=always_clear
						[/store_unit]
						
						{VARIABLE apply_battle_fervor $battle_fervor_unit.variables.battle_fervor_mp}
						{CLEAR_VARIABLE battle_fervor_unit}
					[/then]
				[/if]
			[/then]
			[else]
				[if]
					[have_unit]
						ability=qquws_battle_fervor
						
						[filter_side]
							[allied_with]
								[has_unit]
									ability=qquws_battle_fervor
								[/has_unit]
							[/allied_with]
						[/filter_side]
					[/have_unit]
					[then]
						[store_unit]
							[filter]
								ability=qquws_battle_fervor
								
								[filter_side]
									[allied_with]
										[has_unit]
											ability=qquws_battle_fervor
										[/has_unit]
									[/allied_with]
								[/filter_side]
							[/filter]
							
							variable=battle_fervor_unit
							mode=always_clear
						[/store_unit]
						
						{VARIABLE apply_battle_fervor $battle_fervor_unit.variables.battle_fervor_mp}
						{CLEAR_VARIABLE battle_fervor_unit}
					[/then]
				[/if]
			[/else]
		[/if]
		
		[if]
			[variable]
				name=apply_battle_fervor
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[trait]
						id=qquws_battle_fervor_trait
						name="battle fervor"
						description="This unit benefits from the battle fervor aura. It's movement points are increased by $apply_battle_fervor|."
						
						[effect]
						    apply_to=movement
						    increase=$apply_battle_fervor
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=apply_battle_fervor_to_all_allies
		first_time_only=no
		
		{VARIABLE apply_battle_fervor 0}
		[if]
			[have_unit]
				side=$side_number
				ability=qquws_battle_fervor
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						ability=qquws_battle_fervor
					[/filter]
					
					variable=battle_fervor_unit
					mode=always_clear
				[/store_unit]
				
				{VARIABLE apply_battle_fervor $battle_fervor_unit.variables.battle_fervor_mp}
				{CLEAR_VARIABLE battle_fervor_unit}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=apply_battle_fervor
				greater_than=0
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.is_pvp
						boolean_equals=yes
					[/variable]
					[then]
						[remove_trait]
							side=$side_number
							trait_id=qquws_battle_fervor_trait
						[/remove_trait]
						
						[modify_unit]
							[filter]
								[not]
									trait=qquws_battle_fervor_trait
								[/not]
								
								[not]
									ability=qquws_battle_fervor
								[/not]
					
								side=$side_number
							[/filter]
							
							[trait]
								id=qquws_battle_fervor_trait
								name=battle fervor
								description="This unit benefits from the battle fervor aura. It's movement points are increased by $apply_battle_fervor|."
								
								[effect]
								    apply_to=movement
								    increase=$apply_battle_fervor
								[/effect]
							[/trait]
						[/modify_unit]
					[/then]
					[else]
						[remove_trait]
							[filter_side]
								[allied_with]
									side=$side_number
								[/allied_with]
							[/filter_side]
							
							trait_id=qquws_battle_fervor_trait
						[/remove_trait]
						
						[modify_unit]
							[filter]
								[not]
									trait=qquws_battle_fervor_trait
								[/not]
								
								[not]
									ability=qquws_battle_fervor
								[/not]
					
								[filter_side]
									[allied_with]
										side=$side_number
									[/allied_with]
								[/filter_side]
							[/filter]
							
							[trait]
								id=qquws_battle_fervor_trait
								name=battle fervor
								description="This unit benefits from the battle fervor aura. It's movement points are increased by $apply_battle_fervor|."
								
								[effect]
								    apply_to=movement
								    increase=$apply_battle_fervor
								[/effect]
							[/trait]
						[/modify_unit]
					[/else]
				[/if]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=die
		first_time_only=no
		
		[filter]
			ability=qquws_battle_fervor
		[/filter]
		
		[if]
			[variable]
				name=uws_game.is_pvp
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$unit.side
						ability=qquws_battle_fervor
						[not]
							id=$unit.id
						[/not]
						
						count=0
					[/have_unit]
					[then]
						[remove_trait]
							side=$unit.side
							trait_id=qquws_battle_fervor_trait
						[/remove_trait]
					[/then]
				[/if]
			[/then]
			[else]
				[if]
					[have_unit]
						ability=qquws_battle_fervor
						
						[filter_side]
							[allied_with]
								side=$unit.side
							[/allied_with]
						[/filter_side]
						
						[not]
							id=$unit.id
						[/not]
						
						count=0
					[/have_unit]
					[then]
						[remove_trait]
							[filter_side]
								[allied_with]
									side=$unit.side
								[/allied_with]
							[/filter_side]
							
							trait_id=qquws_battle_fervor_trait
						[/remove_trait]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define REGISTER_ENEMY_CONTROL
	[event]
		name=unit placed
		first_time_only=no
		
		[filter]
			[not]
				trait=qquws_enemy_control_trait
			[/not]
		[/filter]
		
		{VARIABLE apply_enemy_control no}
		[if]
			[variable]
				name=uws_game.is_pvp
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$unit.side
						ability=qquws_enemy_control
					[/have_unit]
					[then]
						{VARIABLE apply_enemy_control yes}
					[/then]
				[/if]
			[/then]
			[else]
				[if]
					[have_unit]
						ability=qquws_enemy_control
						
						[filter_side]
							[allied_with]
								[has_unit]
									ability=qquws_enemy_control
								[/has_unit]
							[/allied_with]
						[/filter_side]
					[/have_unit]
					[then]
						{VARIABLE apply_enemy_control yes}
					[/then]
				[/if]
			[/else]
		[/if]
		
		[if]
			[variable]
				name=apply_enemy_control
				boolean_equals=yes
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]
					
					[trait]
						id=qquws_enemy_control_trait
						name="enemy control"
						description="This unit can control how the enemies behave and therefore ignores their zone of control."
						
						[effect]
							apply_to=new_ability
							[abilities]
								[skirmisher]
									id=qquws_enemy_control_skirmisher
									name=""
									description=""
									affect_self=yes
								[/skirmisher]
							[/abilities]
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=apply_enemy_control_to_all_allies
		first_time_only=no
		
		{VARIABLE apply_enemy_control no}
		[if]
			[have_unit]
				side=$side_number
				ability=qquws_enemy_control
			[/have_unit]
			[then]
				{VARIABLE apply_enemy_control yes}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=apply_enemy_control
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.is_pvp
						boolean_equals=yes
					[/variable]
					[then]
						[remove_trait]
							side=$side_number
							trait_id=qquws_enemy_control_trait
						[/remove_trait]
						
						[modify_unit]
							[filter]
								[not]
									trait=qquws_enemy_control_trait
								[/not]
								
								[not]
									ability=qquws_enemy_control
								[/not]
					
								side=$side_number
							[/filter]
							
							[trait]
								id=qquws_enemy_control_trait
								name="enemy control"
								description="This unit can control how the enemies behave and therefore ignores their zone of control."
								
								[effect]
									apply_to=new_ability
									[abilities]
										[skirmisher]
											id=qquws_enemy_control_skirmisher
											name=""
											description=""
											affect_self=yes
										[/skirmisher]
									[/abilities]
								[/effect]
							[/trait]
						[/modify_unit]
					[/then]
					[else]
						[remove_trait]
							[filter_side]
								[allied_with]
									side=$side_number
								[/allied_with]
							[/filter_side]
							
							trait_id=qquws_enemy_control_trait
						[/remove_trait]
						
						[modify_unit]
							[filter]
								[not]
									trait=qquws_enemy_control_trait
								[/not]
								
								[not]
									ability=qquws_enemy_control
								[/not]
					
								[filter_side]
									[allied_with]
										side=$side_number
									[/allied_with]
								[/filter_side]
							[/filter]
							
							[trait]
								id=qquws_enemy_control_trait
								name="enemy control"
								description="This unit can control how the enemies behave and therefore ignores their zone of control."
								
								[effect]
									apply_to=new_ability
									[abilities]
										[skirmisher]
											id=qquws_enemy_control_skirmisher
											name=""
											description=""
											affect_self=yes
										[/skirmisher]
									[/abilities]
								[/effect]
							[/trait]
						[/modify_unit]
					[/else]
				[/if]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=die
		first_time_only=no
		
		[filter]
			ability=qquws_enemy_control
		[/filter]
		
		[if]
			[variable]
				name=uws_game.is_pvp
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$unit.side
						ability=qquws_enemy_control
						[not]
							id=$unit.id
						[/not]
						
						count=0
					[/have_unit]
					[then]
						[remove_trait]
							side=$unit.side
							trait_id=qquws_enemy_control_trait
						[/remove_trait]
					[/then]
				[/if]
			[/then]
			[else]
				[if]
					[have_unit]
						ability=qquws_enemy_control
						
						[filter_side]
							[allied_with]
								side=$unit.side
							[/allied_with]
						[/filter_side]
						
						[not]
							id=$unit.id
						[/not]
						
						count=0
					[/have_unit]
					[then]
						[remove_trait]
							[filter_side]
								[allied_with]
									side=$unit.side
								[/allied_with]
							[/filter_side]
							
							trait_id=qquws_enemy_control_trait
						[/remove_trait]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

