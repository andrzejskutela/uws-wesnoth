#define QQUWS_NEW_UNIT_BONUS
	[event]
		name=apply_new_unit_bonus
		first_time_only=no
		
		[store_unit_type]
			type=$uws_spawn.type
			variable=spawned_unit_type
			mode=always_clear
		[/store_unit_type]
		
		[if]
			[variable]
				name=new_unit_bulky_value
				greater_than=0
			[/variable]
			[then]
				{VARIABLE scale_bulky_from_value $new_unit_bulky_value}
				[fire_event]
					name=get_unit_main_image_dimensions
				[/fire_event]
				
				{VARIABLE tmp_bulky_value $new_unit_bulky_value}
				{VARIABLE_OP tmp_bulky_value multiply $uws_game.buff_modifier}
				{VARIABLE_OP tmp_bulky_value round 1}
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_bulky_trait
						name="<span color='#94b87b'>bulky $tmp_bulky_value</span>"
						description="This is a bulky warrior, it may require a few more hits to put it down."

						[effect]
							apply_to=hitpoints
							increase="$tmp_bulky_value|%"
							increase_total="$tmp_bulky_value|%"
						[/effect]
					[/trait]
				[/modify_unit]
				
				[if]
					[variable]
						name=uws_spawn.final_boss
						boolean_equals=no
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$new_unit_spawn_id
							[/filter]
							
							[variables]
								image_base_w=$bulky_image_width
								image_base_h=$bulky_image_height
							[/variables]
								
							[object]
								silent=yes
								
								[effect]
									apply_to=image_mod
									add="~SCALE_INTO_SHARP($bulky_image_width,$bulky_image_height)"
								[/effect]
							[/object]
						[/modify_unit]
					[/then]
				[/if]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_armored_value
				greater_than=0
			[/variable]
			[then]
				{VARIABLE tmp_armored_value $new_unit_armored_value}
				{VARIABLE_OP tmp_armored_value add $uws_game.small_buff_bonus}
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_armored_trait
						name="<span color='#9b7bb8'>armored $tmp_armored_value</span>"
						description="This enemy is protected by additional armor.
All Resistances: <span color='#00ff00'>+$tmp_armored_value|%</span>"

						[effect]
							apply_to=resistance
							replace=no
							[resistance]
								arcane=-$tmp_armored_value
								fire=-$tmp_armored_value
								cold=-$tmp_armored_value
								blade=-$tmp_armored_value
								impact=-$tmp_armored_value
								pierce=-$tmp_armored_value
							[/resistance]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~RC(magenta>rails)"
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_beefy_value
				greater_than=0
			[/variable]
			[then]
				{VARIABLE blend_amount 0.12}
				[if]
					[variable]
						name=new_unit_beefy_value
						greater_than=38
					[/variable]
					[then]
						{VARIABLE blend_amount 0.2}
					[/then]
				[/if]
				
				{VARIABLE tmp_bulky_value $new_unit_beefy_value}
				{VARIABLE_OP tmp_bulky_value multiply $uws_game.buff_modifier}
				{VARIABLE_OP tmp_bulky_value round 1}
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_beefy_trait
						name="<span color='#b87b7b'>beefy $tmp_bulky_value</span>"
						description="This is a beefy warrior, able to slash through the enemies at ease."

						[effect]
							apply_to=attack
							increase_damage="$tmp_bulky_value|%"
						[/effect]
					[/trait]
				[/modify_unit]
						
				[if]
					[variable]
						name=uws_spawn.final_boss
						boolean_equals=no
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$new_unit_spawn_id
							[/filter]
								
							[object]
								silent=yes
								
								[effect]
									apply_to=image_mod
									add="~BLEND(250,45,45,$blend_amount)"
								[/effect]
							[/object]
						[/modify_unit]
					[/then]
				[/if]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_fast_value
				greater_than=0
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_fast_trait
						name="<span color='#b8b87b'>fast $new_unit_fast_value</span>"
						description="This is a fast moving warrior, able to flank enemies quickly."

						[effect]
						    apply_to=movement
						    increase=$new_unit_fast_value
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(25,25,25)"
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_agile_value
				greater_than=0
			[/variable]
			[then]
				{VARIABLE tmp_armored_value $new_unit_agile_value}
				{VARIABLE_OP tmp_armored_value add $uws_game.micro_buff_bonus}
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_agile_trait
						name="<span color='#7bb89c'>agile $tmp_armored_value</span>"
						description="This enemy is very agile and difficult to hit.
All Defenses: <span color='#00ff00'>+$tmp_armored_value|%</span>"

						[effect]
							apply_to=defense
							replace=no
							[defense]
								flat=-$tmp_armored_value
								frozen=-$tmp_armored_value
								forest=-$tmp_armored_value
								village=-$tmp_armored_value
								swamp_water=-$tmp_armored_value
								cave=-$tmp_armored_value
								reef=-$tmp_armored_value
								shallow_water=-$tmp_armored_value
								deep_water=-$tmp_armored_value
								fungus=-$tmp_armored_value
								hills=-$tmp_armored_value
								mountains=-$tmp_armored_value
								castle=-$tmp_armored_value
								sand=-$tmp_armored_value
								unwalkable=-$tmp_armored_value
							[/defense]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~O(67%)"
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_spawn_champion
				not_equals=""
			[/variable]
			[then]
				{VARIABLE champion_unit_id $new_unit_spawn_id}
				{VARIABLE champion_settings_list $new_unit_spawn_champion}
				{VARIABLE champion_display_type_id champion}
				[fire_event]
					name=apply_champion_bonus
				[/fire_event]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_spawn_quiet_bonus_id
				not_equals=""
			[/variable]
			[then]
				{VARIABLE quiet_bonus_key $new_unit_spawn_quiet_bonus_id}
				{VARIABLE quiet_bonus_unit_id $new_unit_spawn_id}
				[fire_event]
					name=apply_quiet_bonus
				[/fire_event]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_spawn_minion
				not_equals=""
			[/variable]
			[then]
				{VARIABLE champion_unit_id $new_unit_spawn_id}
				{VARIABLE champion_settings_list $new_unit_spawn_minion}
				{VARIABLE champion_display_type_id minion}
				[fire_event]
					name=apply_champion_bonus
				[/fire_event]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_gold
				greater_than=0
			[/variable]
			[then]
				{VARIABLE display_gold_amount $new_unit_gold}
				[if]
					[variable]
						name=uws_game.mode
						equals=slash
					[/variable]
					[and]
						[variable]
							name=uws_game.single_player_game
							boolean_equals=no
						[/variable]
					[/and]
					[then]
						{VARIABLE_OP display_gold_amount divide 1.65}
						{VARIABLE_OP display_gold_amount round floor}
						{VARIABLE_OP display_gold_amount multiply 2}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=has_gold
						name="<span color='#d1b064'>carries gold</span>"
						description="This unit carries $display_gold_amount gold."
					[/trait]
				[/modify_unit]
			[/then]
		[/if]

		[if]
			[variable]
				name=unit_gives_gold_to_ai
				boolean_equals=yes
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[variables]
						gives_gold_to_ai=yes
						ai_gold_amount=$ai_gold_amount
					[/variables]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_has_item
				boolean_equals=yes
			[/variable]
			[then]
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=has_artifact
						name="<span color='#9e7bbd'>carries an artifact</span>"
						description="This unit carries a powerful item."
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=after_games.enable_spawn_copy_debuff
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE debuff_by "$( $after_games_base_percentage - 100 )"}
				{VARIABLE debuff_info "copy $after_games_base_percentage|%"}
				[if]
					[variable]
						name=after_games_extra_copy_buff
						numerical_not_equals=0
					[/variable]
					[then]
						{VARIABLE_OP debuff_by add $after_games_extra_copy_buff}

						[if]
							[variable]
								name=after_games_extra_copy_buff
								greater_than=0
							[/variable]
							[then]
								{VARIABLE debuff_info "copy $after_games_copy_info|+$after_games_extra_copy_buff|%"}
							[/then]
							[else]
								{VARIABLE debuff_info "copy $after_games_copy_info|$after_games_extra_copy_buff|%"}
							[/else]
						[/if]
					[/then]
				[/if]

				[if]
					[variable]
						name=debuff_by
						greater_than=0
					[/variable]
					[then]
						{VARIABLE after_games_colour "#db1414"}
					[/then]
					[else]
						[if]
							[variable]
								name=debuff_by
								greater_than=-12
							[/variable]
							[then]
								{VARIABLE after_games_colour "#d13719"}
							[/then]
							[else]
								[if]
									[variable]
										name=debuff_by
										greater_than=-24
									[/variable]
									[then]
										{VARIABLE after_games_colour "#e35c2d"}
									[/then]
									[else]
										[if]
											[variable]
												name=debuff_by
												greater_than=-36
											[/variable]
											[then]
												{VARIABLE after_games_colour "#de7b49"}
											[/then]
											[else]
												[if]
													[variable]
														name=debuff_by
														greater_than=-48
													[/variable]
													[then]
														{VARIABLE after_games_colour "#dea062"}
													[/then]
													[else]
														[if]
															[variable]
																name=debuff_by
																greater_than=-60
															[/variable]
															[then]
																{VARIABLE after_games_colour "#e3bc96"}
															[/then]
															[else]
																{VARIABLE after_games_colour "#fafafa"}
															[/else]
														[/if]
													[/else]
												[/if]
											[/else]
										[/if]
									[/else]
								[/if]
							[/else]
						[/if]
					[/else]
				[/if]

				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]
						
					[object]
						silent=yes
						
						[effect]
							apply_to=hitpoints
							increase="$debuff_by|%"
							increase_total="$debuff_by|%"
						[/effect]
						[effect]
							apply_to=attack
							increase_damage="$debuff_by|%"
						[/effect]
						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_after_games_handicap
									name="<span color='$after_games_colour|'>$debuff_info|</span>"
									description="Sent from side $after_games_copied_from_side"
								[/dummy]
							[/abilities]
						[/effect]
					[/object]
				[/modify_unit]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=new_unit_bonus_hp
				greater_than=1.4
			[/variable]
			[or]
				[variable]
					name=new_unit_bonus_dmg
					greater_than=2.4
				[/variable]
			[/or]
			[or]
				[variable]
					name=new_unit_bonus_strikes
					greater_than=0.5
				[/variable]
			[/or]
			[or]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=yes
				[/variable]
			[/or]
			[then]
				{VARIABLE_OP new_unit_bonus_hp multiply $uws_game.buff_modifier}
				{VARIABLE_OP new_unit_bonus_hp round 1}
				
				{VARIABLE_OP new_unit_bonus_dmg multiply $uws_game.buff_modifier}
				{VARIABLE_OP new_unit_bonus_dmg round 1}
				
				[if]
					[variable]
						name=new_unit_bonus_dmg
						less_than=0
					[/variable]
					[then]
						{VARIABLE total_bonus_description "+$new_unit_bonus_hp|% hp / $new_unit_bonus_dmg|% dmg"}
					[/then]
					[else]
						{VARIABLE total_bonus_description "+$new_unit_bonus_hp|% hp / +$new_unit_bonus_dmg|% dmg"}
					[/else]
				[/if]
				
				[if]
					[variable]
						name=new_unit_bonus_strikes
						greater_than=0
					[/variable]
					[then]
						{VARIABLE total_bonus_description "$total_bonus_description / +$new_unit_bonus_strikes strikes"}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					[trait]
						id=qquws_bonus
						name="uws"
						description="$bonus_breakdown
		Total (x$uws_game.buff_modifier|): $total_bonus_description"
					[/trait]

					[trait]
						id=qquws_bonus_effect
						
						[effect]
							apply_to=hitpoints
							increase="$new_unit_bonus_hp|%"
							increase_total="$new_unit_bonus_hp|%"
						[/effect]
						[effect]
							apply_to=attack
							increase_damage="$new_unit_bonus_dmg|%"
							increase_attacks=$new_unit_bonus_strikes
						[/effect]
					[/trait]
				[/modify_unit]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=get_unit_main_image_dimensions
		first_time_only=no
		
		[lua]
			name=unit_image_info
			code=<<
				local unit_image_path = wml.variables["spawned_unit_type.image"]
				local w, h = filesystem.image_size(unit_image_path)
				wml.variables["bulky_unit_image_base_width"] = w
				wml.variables["bulky_unit_image_base_height"] = h
>>
		[/lua]
		
		{VARIABLE scale_size 1.25}
		[if]
			[variable]
				name=scale_bulky_from_value
				greater_than=110
			[/variable]
			[then]
				{VARIABLE scale_size 1.5}
			[/then]
		[/if]
		
		{VARIABLE bulky_image_width $bulky_unit_image_base_width}
		{VARIABLE_OP bulky_image_width multiply $scale_size}
		{VARIABLE_OP bulky_image_width round floor}
		
		{VARIABLE bulky_image_height $bulky_unit_image_base_height}
		{VARIABLE_OP bulky_image_height multiply $scale_size}
		{VARIABLE_OP bulky_image_height round floor}
	[/event]
#enddef

#define QQUWS_SPAWN_RACE_BATCH
	[event]
		name=spawn_race_batch
		first_time_only=no
		
		{VARIABLE west_cutoff $sides[8].race_high_point}
		{VARIABLE_OP west_cutoff sub $race_spawn_look_ahead}
		
		{VARIABLE east_cutoff $sides[9].race_high_point}
		{VARIABLE_OP east_cutoff sub $race_spawn_look_ahead}
		
		[for]
			variable=j
			array=spawn_queue
			[do]
				{VARIABLE spawned_no 0}
				{VARIABLE spawn_west no}
				{VARIABLE spawn_east no}
				{VARIABLE real_spawn_count 0}
				
				[if]
					[variable]
						name=spawn_queue[$j].spawned
						contains=w
					[/variable]
					[then]
						{VARIABLE_OP spawned_no add 1}
					[/then]
					[else]
						[if]
							[variable]
								name=spawn_queue[$j].y
								greater_than=$west_cutoff
							[/variable]
							[then]
								{VARIABLE spawn_west yes}
								{VARIABLE uws_spawn.y $spawn_queue[$j].y}
								{VARIABLE spawn_queue[$j].spawned "w $spawn_queue[$j].spawned"}
								{VARIABLE_OP spawned_no add 1}
								{VARIABLE_OP real_spawn_count add 1}
							[/then]
						[/if]
					[/else]
				[/if]
				
				[if]
					[variable]
						name=spawn_queue[$j].spawned
						contains=e
					[/variable]
					[then]
						{VARIABLE_OP spawned_no add 1}
					[/then]
					[else]
						[if]
							[variable]
								name=spawn_queue[$j].y
								greater_than=$east_cutoff
							[/variable]
							[then]
								{VARIABLE spawn_east yes}
								{VARIABLE uws_spawn.y $spawn_queue[$j].y}
								{VARIABLE spawn_queue[$j].spawned "e $spawn_queue[$j].spawned"}
								{VARIABLE_OP spawned_no add 1}
								{VARIABLE_OP real_spawn_count add 1}
							[/then]
						[/if]
					[/else]
				[/if]
				
				[if]
					[variable]
						name=real_spawn_count
						greater_than=0
					[/variable]
					[then]
						{SPAWN_SET_VARIABLES}
			
						[fire_event]
							name=spawn
						[/fire_event]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=spawned_no
						greater_than_equal_to=2
					[/variable]
					[then]
						{CLEAR_VARIABLE spawn_queue[$j]}
						{VARIABLE_OP j sub 1}
					[/then]
				[/if]
			[/do]
		[/for]
		
		{VARIABLE west_cutoff $sides[8].race_high_point}
		{VARIABLE_OP west_cutoff add $race_spawn_look_ahead}
		
		{VARIABLE east_cutoff $sides[9].race_high_point}
		{VARIABLE_OP east_cutoff add $race_spawn_look_ahead}
		
		[modify_unit]
			[filter]
				side=2,3,4
				y=$west_cutoff|-200
				formula="if(self.max_moves < 3, 1, 0)"
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
				    apply_to=movement
				    set=4
				[/effect]
			[/object]
		[/modify_unit]
		
		[modify_unit]
			[filter]
				side=5,6,7
				y=$east_cutoff|-200
				formula="if(self.max_moves < 3, 1, 0)"
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
				    apply_to=movement
				    set=4
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
	
	[event]
		name=spawn_slash_batch
		first_time_only=no
		
		{VARIABLE west_cutoff $sides[8].race_high_point}
		{VARIABLE_OP west_cutoff sub $race_spawn_look_ahead}
		
		[for]
			variable=j
			array=spawn_queue
			[do]
				[if]
					[variable]
						name=spawn_queue[$j].y
						greater_than=$west_cutoff
					[/variable]
					[then]
						{VARIABLE spawn_west yes}
						[if]
							[variable]
								name=uws_game.hns_single_side
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE spawn_east no}
							[/then]
							[else]
								{VARIABLE spawn_east yes}
							[/else]
						[/if]
						
						{VARIABLE uws_spawn.y $spawn_queue[$j].y}
						{SPAWN_SET_VARIABLES}
			
						[fire_event]
							name=spawn
						[/fire_event]
						
						{CLEAR_VARIABLE spawn_queue[$j]}
						{VARIABLE_OP j sub 1}
					[/then]
				[/if]
			[/do]
		[/for]
		
		{VARIABLE west_cutoff $sides[8].race_high_point}
		{VARIABLE_OP west_cutoff add $race_spawn_look_ahead}
		
		[modify_unit]
			[filter]
				side=2,3,4,5,6,7
				y=$west_cutoff|-200
				formula="if(self.max_moves < 3, 1, 0)"
			[/filter]
			
			[object]
				silent=yes
				
				[effect]
				    apply_to=movement
				    set=4
				[/effect]
			[/object]
		[/modify_unit]

		[modify_unit]
			[filter]
				side=2,3,4,5,6,7
				y=$west_cutoff|-200
				canrecruit=yes
			[/filter]

			canrecruit=no
			
			[object]
				silent=yes
				
				[effect]
				    apply_to=attack
				    increase_damage=25%
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef

#define QQUWS_RACE_VICTORY
	[event]
		name=trigger_race_victory
		first_time_only=yes
		
		{FLASH_WHITE ()}
										
		[message]
		    speaker=narrator
		    caption="Timeless Bones, the Herald of the Crimson Banner"
		    image="portraits/uws/eternal.png"
		    message="Congratulations to $sides[$winning_side|].leader_name for winning the match!"
		[/message]
		
		[kill]
			[not]
				side=$winning_side
			[/not]
		[/kill]
	[/event]

	[event]
		name=race_ensure_two_players
		first_time_only=yes

		[if]
			[variable]
				name=sides[8].is_present
				boolean_equals=no
			[/variable]
			[then]
				[kill]
					side=1,2,3,4,5,6,7,8
					fire_event=yes
				[/kill]
			[/then]
			[else]
				[if]
					[variable]
						name=sides[9].is_present
						boolean_equals=no
					[/variable]
					[then]
						[kill]
							side=1,2,3,4,5,6,7,9
							fire_event=yes
						[/kill]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define QQUWS_APPLY_RUNE_BONUS
	[event]
		name=apply_rune_bonus
		first_time_only=no
		
		{VARIABLE quiet_bonus_key $rune_apply_key}
		{VARIABLE quiet_bonus_unit_id $unit.id}
		[fire_event]
			name=apply_quiet_bonus
		[/fire_event]
		
		[label]
			x=$unit.x
			y=$unit.y
			text=$applied_rune_text
			visible_in_fog=no
			visible_in_shroud=no
		[/label]
	[/event]
#enddef

#define QQUWS_PRINT_RACE_STATS
	[event]
		name=print_race_stats
		first_time_only=no
		
		{VARIABLE left_progress $sides[8].kills_race_value}
		{VARIABLE_OP left_progress divide $race_total_enemies}
		{VARIABLE_OP left_progress multiply 100}
		{VARIABLE_OP left_progress round 1}
		[if]
			[variable]
				name=sides[8].kills_race_opposite
				greater_than=0
			[/variable]
			[then]
				{VARIABLE left_opposite $sides[8].kills_race_opposite}
				{VARIABLE_OP left_opposite divide $race_total_enemies}
				{VARIABLE_OP left_opposite multiply 100}
				{VARIABLE_OP left_opposite round 1}
				{VARIABLE left_progress "($left_opposite|%) $left_progress|%"}
			[/then]
			[else]
				{VARIABLE left_progress "$left_progress|%"}
			[/else]
		[/if]
		
		{VARIABLE right_progress $sides[9].kills_race_value}
		{VARIABLE_OP right_progress divide $race_total_enemies}
		{VARIABLE_OP right_progress multiply 100}
		{VARIABLE_OP right_progress round 1}
		[if]
			[variable]
				name=sides[9].kills_race_opposite
				greater_than=0
			[/variable]
			[then]
				{VARIABLE right_opposite $sides[9].kills_race_opposite}
				{VARIABLE_OP right_opposite divide $race_total_enemies}
				{VARIABLE_OP right_opposite multiply 100}
				{VARIABLE_OP right_opposite round 1}
				{VARIABLE right_progress "$right_progress|% ($right_opposite|%)"}
			[/then]
			[else]
				{VARIABLE right_progress "$right_progress|%"}
			[/else]
		[/if]
		
		[print]
			text="$left_progress - $right_progress"
			size=20
			duration=unlimited
			color=255,255,255
		[/print]
	[/event]

	[event]
		name=print_slash_stats
		first_time_only=no
		
		{VARIABLE display_final ""}
		[if]
			[variable]
				name=sides[8].is_alive
				boolean_equals=yes
			[/variable]
			[then]
				[qquws_pad_text]
					text="$sides[8].leader_name|: $sides[8].kills"
					pad=" "
					length=300
					direction="r"
					output_var=display_string
				[/qquws_pad_text]

				{VARIABLE display_final "$display_string
"}
			[/then]
		[/if]

		[if]
			[variable]
				name=sides[9].is_alive
				boolean_equals=yes
			[/variable]
			[then]
				[qquws_pad_text]
					text="$sides[9].leader_name|: $sides[9].kills"
					pad=" "
					length=300
					direction="r"
					output_var=display_string
				[/qquws_pad_text]

				{VARIABLE display_final "$display_final|$display_string"}
			[/then]
		[/if]
		
		[print]
			text="$display_final"
			size=20
			duration=unlimited
			color=255,255,255
		[/print]
	[/event]

	[event]
		name=print_pillagers_stats
		first_time_only=no
		
		{VARIABLE pillagers_progress $sides[8].kills_race_value}
		{VARIABLE_OP pillagers_progress divide $race_total_enemies}
		{VARIABLE_OP pillagers_progress multiply 100}
		{VARIABLE_OP pillagers_progress round 1}
		
		[print]
			text="$pillagers_progress|%"
			size=20
			duration=unlimited
			color=255,255,255
		[/print]
	[/event]
#enddef

#define QQUWS_RACE_ONE_RECRUITER_ONLY
	[event]
		name=race_ensure_one_recruiter
		first_time_only=no
		
		[if]
			[variable]
				name=uws_game.is_open_world
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$run_events_for_side
						canrecruit=yes
						x=2-100
						[not]
							id=$spawning_unit.id
						[/not]
					[/have_unit]
					[then]
						[modify_unit]
							[filter]
								side=$run_events_for_side
								canrecruit=yes
								x=2-100
								[not]
									id=$spawning_unit.id
								[/not]
							[/filter]
							
							canrecruit=no
						[/modify_unit]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_SLASH_CALL_TO_FIGHT
	[event]
		name=slash_call_to_fight
		first_time_only=no
		
		[if]
			[variable]
				name=uws_game.is_open_world
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.mode
						equals=slash
					[/variable]
					[then]
						[if]
							[variable]
								# ignore spawning leaders on the eastern half of the map if both sides slash
								name=run_events_for_side
								less_than=5
							[/variable]
							[then]
								{VARIABLE_OP sides[8].race_high_point sub 3}
								{VARIABLE open_world_spawn_reiteration_needed yes}
							[/then]
						[/if]
					[/then]
					[else]
						[if]
							[variable]
								name=run_events_for_side
								less_than=5
							[/variable]
							[then]
								{VARIABLE_OP sides[8].race_high_point sub 3}
							[/then]
							[else]
								{VARIABLE_OP sides[9].race_high_point sub 3}
							[/else]
						[/if]

						{VARIABLE open_world_spawn_reiteration_needed yes}
					[/else]
				[/if]
				
				
				{VARIABLE gold_trickle_event_id "steady_gold_$new_unit_spawn_id"}
				
				[event]
					id=$gold_trickle_event_id
					name="turn end"
					first_time_only=no
					delayed_variable_substitution=no
					
					[if]
						[have_unit]
							id=$new_unit_spawn_id
							count=1
						[/have_unit]
						[then]
							{VARIABLE receive_gold $|turn_number}
							{VARIABLE_OP receive_gold modulo 3}
							
							[if]
								[variable]
									name=receive_gold
									numerical_equals=0
								[/variable]
								[then]
									{VARIABLE fraction_g $|turn_number} # current turn number
									{VARIABLE_OP fraction_g sub $turn_number} # substituted at the event creation
									{VARIABLE_OP fraction_g multiply 0.5}
									{VARIABLE_OP fraction_g add 4}
									{VARIABLE_OP fraction_g multiply $uws_spawn.recruitment_gold} # substituted at the event creation
									{VARIABLE_OP fraction_g divide 100}
									{VARIABLE_OP fraction_g round floor}
									
									[if]
										[variable]
											name=fraction_g
											greater_than=0
										[/variable]
										[then]
											[gold]
												side=$run_events_for_side
												amount=$|fraction_g
											[/gold]
										[/then]
									[/if]
								[/then]
							[/if]
						[/then]
						[else]
							[remove_event]
								id=$gold_trickle_event_id
							[/remove_event]
						[/else]
					[/if]
				[/event]
				
				[for]
					variable=i
					start=0
					end=7
					step=1
					[do]
						{VARIABLE call_to_fight_turn $turn_number}
						{VARIABLE_OP call_to_fight_turn add $i}
						{VARIABLE_OP call_to_fight_turn add 2}
						
						[event]
							name="turn $call_to_fight_turn end"
							first_time_only=yes
							delayed_variable_substitution=no
							
							{VARIABLE push_units_y $uws_spawn.y}
							{VARIABLE_OP push_units_y add 3}
							{VARIABLE_OP push_units_y sub $i}
							
							[modify_unit]
								[filter]
									y=$|push_units_y
									side=$run_events_for_side
									status=guardian
									
									[filter_wml]
										[variables]
											is_stoic=no
										[/variables]
									[/filter_wml]
								[/filter]
								
								[status]
									guardian=no
								[/status]
							[/modify_unit]
						[/event]
					[/do]
				[/for]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_HANDLE_XP_MOD
	[event]
		name=uws_handle_xp_mod
		first_time_only=no
		
		[lua]
			name=uws_xp_mod_hackery
		    code = <<
		    	wml.variables['current_era_id'] = wesnoth.scenario.era.id
		    	wml.variables['current_game_modifications'] = wesnoth.scenario.mp_settings.active_mods
		    	
				local base_xp_mod_action = wesnoth.wml_actions.xp_mod
				
				function wesnoth.wml_actions.xp_mod(cfg)
					base_xp_mod_action(cfg)
					
					local event_context = wesnoth.current.event_context
					local unit = wesnoth.get_unit(event_context.x1, event_context.y1)
					local side_str = 'sides[' .. tostring(unit.side) .. '].'
					if wml.variables['uws_game.mode'] == 'slash' then
						side_str = 'sides[8].'
					end
					
					local stat_str = 'xp_mod_hp'
					if string.find(cfg.desc, "movement") then
						stat_str = 'xp_mod_mp'
					elseif string.find(cfg.desc, "damage") then
						stat_str = 'xp_mod_dmg'
					elseif string.find(cfg.desc, "strike") then
						stat_str = 'xp_mod_str'
					end
					
					local used_times = wml.variables[side_str .. stat_str]
					wml.variables[side_str .. stat_str] = used_times + 1
					local unit_used = unit.variables[stat_str]
					if unit_used == nil then
						unit_used = 0
					end

					unit.variables[stat_str] = unit_used + 1
				end
		    >>
		[/lua]
		{VARIABLE xp_mod_set yes}
		
		[if]
			[variable]
				name=uws_game.is_campaign
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE Rav_XP_hp_cost 16}
				{VARIABLE Rav_XP_move_cost 20}
				{VARIABLE Rav_XP_damage_cost 40}
				{VARIABLE Rav_XP_strike_cost 100}
				{VARIABLE Rav_XP_amla_only yes}
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_HANDLE_MASK_FILE_SUBSTITUTION
	[event]
		name=substitute_mask_file
		first_time_only=no
		
		{VARIABLE middle_tile_x $uws_game.middle}
		{VARIABLE current_mask_data $uws_game.mask_file}
		
		[if]
			[variable]
				name=uws_game.is_open_world
				boolean_equals=yes
			[/variable]
			[then]
				[qquws_generate_new_mask_data]
			    		partial_data=$new_partial_data
			    		current_mask_data=$current_mask_data
			    		mask_manipulation_mode=$substitution_mode
			    		middle_tile_x=$middle_tile_x
			    		insert_at=$partial_location
			    		partial_length=$partial_length
			    		new_mask_var_name=altered_mask_data
				[/qquws_generate_new_mask_data]
				
				[replace_map]
				    map=$altered_mask_data
				[/replace_map]

				{VARIABLE uws_game.mask_file $altered_mask_data}
				
				{VARIABLE hide_map_from_x $uws_game.middle}
				{VARIABLE_OP hide_map_from_x add 1}
				
				{VARIABLE hide_map_from_y $uws_game.race_make_players_opponents_y}
				{VARIABLE_OP hide_map_from_y sub 3}
				
				[if]
					[variable]
						name=uws_game.hns_single_side
						boolean_equals=yes
					[/variable]
					[then]
						[terrain]
							terrain=_off^_usr
							y=$hide_map_from_y|-200
							x=$hide_map_from_x|-100
						[/terrain]
					[/then]
					[else]
						[if]
							[variable]
								name=uws_game.mode
								equals=slash
							[/variable]
							[and]
								[variable]
									name=uws_game.hns_keep_wall
									boolean_equals=no
								[/variable]
							[/and]
							[then]
								[fire_event]
									name=slash_remove_middle_wall
								[/fire_event]
							[/then]
						[/if]
					[/else]
				[/if]
				
				[store_map_dimensions]
					variable=map_size
				[/store_map_dimensions]
				
				[for]
					variable=i
					start=$race_lava_border
					end=$map_size.height
					step=2
					[do]
						[terrain_mask]
							x=1
							y=$i
							mask="{~add-ons/QQ_Ultimate_Wesnoth_Survival/maps/race_lava_mask.map}"
							border="yes"
							[rule]
								old=A*,B*,C*,D*,E*,F*,G*,H*,I*,J*,K*,L*,N*,O*,P*,Q*,R*,S*,T*,U*,V*,W*,Y*,Z*,A*^*,B*^*,C*^*,D*^*,E*^*,F*^*,G*^*,H*^*,I*^*,J*^*,K*^*,L*^*,N*^*,O*^*,P*^*,Q*^*,R*^*,S*^*,T*^*,U*^*,V*^*,W*^*,Y*^*,Z*^*
								new=Qlf
							[/rule]
							[rule]
								use_old=yes
							[/rule]
						[/terrain_mask]
					[/do]
				[/for]
			[/then]
			[else]
				[qquws_generate_new_mask_data]
			    		partial_data=$new_partial_data
			    		current_mask_data=$current_mask_data
			    		mask_manipulation_mode=$substitution_mode
			    		middle_tile_x=$middle_tile_x
			    		insert_at=$partial_location
			    		partial_length=$partial_length
			    		new_mask_var_name=altered_mask_data
				[/qquws_generate_new_mask_data]
				
				{VARIABLE uws_game.mask_file $altered_mask_data}
				
				{VARIABLE scroll_y $uws_game.scroll_rounds}
				{VARIABLE_OP scroll_y multiply -1}
				{VARIABLE_OP scroll_y add $turn_number}
				
				[terrain_mask]
					x=1
					y=$scroll_y
					mask=$uws_game.mask_file
					border="yes"
					[rule]
						old=A*,B*,C*,D*,E*,F*,G*,H*,I*,J*,K*,L*,M*,N*,O*,P*,Q*,R*,S*,T*,U*,V*,W*,Y*,Z*,A*^*,B*^*,C*^*,D*^*,E*^*,F*^*,G*^*,H*^*,I*^*,J*^*,K*^*,L*^*,M*^*,N*^*,O*^*,P*^*,Q*^*,R*^*,S*^*,T*^*,U*^*,V*^*,W*^*,Y*^*,Z*^*,_off^_usr,Xu,Xos,Xuc,Xue,Xom,Xoi,Xoc,Xot,*^Efs
					[/rule]
					[rule]
						use_old=yes
					[/rule]
				[/terrain_mask]
				
				{CLEAR_VARIABLE middle_tile_x,current_mask_data,altered_mask_data}
			[/else]
		[/if]
	[/event]

	[event]
		name=update_single_tile
		first_time_only=no

		[terrain]
			x=$new_terrain_x
			y=$new_terrain_y
			layer=overlay
			terrain=$new_terrain
		[/terrain]

		[if]
			[variable]
				name=uws_game.is_open_world
				boolean_equals=yes
			[/variable]
			[then]
				[qquws_change_single_tile]
		    		current_mask_data=$uws_game.mask_file
		    		x=$new_terrain_x
					y=$new_terrain_y
		    		overlay=$new_terrain
		    		new_mask_var_name=altered_mask_data
				[/qquws_change_single_tile]
			[/then]
			[else]
				{VARIABLE scroll_tile_y "$( $uws_game.scroll_rounds - $turn_number + $new_terrain_y + 1 ) "}

				[qquws_change_single_tile]
		    		current_mask_data=$uws_game.mask_file
		    		x=$new_terrain_x
					y=$scroll_tile_y
		    		overlay=$new_terrain
		    		new_mask_var_name=altered_mask_data
				[/qquws_change_single_tile]
			[/else]
		[/if]

		{VARIABLE uws_game.mask_file $altered_mask_data}
		{CLEAR_VARIABLE altered_mask_data}
	[/event]
#enddef

#define QQUWS_UNHIDE_ITEM_ON_MAP
	[event]
		name=unhide_item_on_map
		first_time_only=no
		
		[for]
			variable=i
			array=scrollable_items
			[do]
				[if]
					[variable]
						name=scrollable_items[$i].object_id
						equals=$unhide_item_id
					[/variable]
					[then]
						{VARIABLE scrollable_items[$i].render yes}
						
						[fire_event]
							name=render_item_on_map
						[/fire_event]
					[/then]
				[/if]
			[/do]
		[/for]
	[/event]
	
	[event]
		name=render_item_on_map
		first_time_only=no
		
		{VARIABLE place_item yes}
		[if]
			[variable]
				name=uws_game.mode
				equals=scroll
			[/variable]
			[then]
				[if]
					[variable]
						name=scrollable_items[$i].y
						less_than=4
					[/variable]
					[or]
						[variable]
							name=scrollable_items[$i].y
							greater_than=18
						[/variable]
					[/or]
					[then]
						{VARIABLE place_item no}
					[/then]
				[/if]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=scrollable_items[$i].render
				boolean_equals=no
			[/variable]
			[then]
				{VARIABLE place_item no}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=place_item
				boolean_equals=yes
			[/variable]
			[then]
				[item]
					x,y=$scrollable_items[$i].x,$scrollable_items[$i].y
					image=$scrollable_items[$i].image
				[/item]
				
				[if]
					[variable]
						name=scrollable_items[$i].name
						not_equals=""
					[/variable]
					[then]
						{GENERATE_LABEL_TEXT}
						[label]
							x=$scrollable_items[$i].x
							y=$scrollable_items[$i].y
							text="<span color='$scrollable_items[$i].color|'>$item_label|</span>"
							tooltip=$item_tooltip
							visible_in_fog=no
							visible_in_shroud=no
						[/label]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_INIT_AND_REPLACE_MAP_MASK
	[event]
		name=init_and_replace_map_mask
		first_time_only=yes
		
		{TRANSFER_GAME_SETTINGS_TO_GAME_VAR}
		
		[switch]
			variable=uws_game.mode
			
			[case]
				value=scroll
				
				{VARIABLE new_map_width $uws_game.edge}
				[lua]
					name=i_dont_remember_what_this_is_for
				    code = <<
				    	local width = wml.variables['new_map_width']
				    	local height = 22
				    	local map_data = ''
				    	
				    	for i=1,height,1 do
				    		for j=1,width - 1, 1 do
				    			map_data = map_data .. 'Gg, '
				    		end
				    		
				    		map_data = map_data .. 'Gg' .. string.char(10)
				    	end
				    	
				    	wml.variables['expand_map_data'] = map_data
				    >>
				[/lua]
				
				[replace_map]
					map_data=$expand_map_data
					expand=yes
					shrink=yes
				[/replace_map]
				
				{VARIABLE scroll_y $uws_game.scroll_rounds}
				{VARIABLE_OP scroll_y multiply -1}
				{VARIABLE_OP scroll_y add 1}
				
				[terrain_mask]
					x=1
					y=$scroll_y
					mask=$uws_game.mask_file
					border="yes"
					[rule]
						old=*
					[/rule]
				[/terrain_mask]
				
				[terrain]
					x=0-$new_map_width
					y=0-3
					terrain=Xv
				[/terrain]
				
				{TELEPORT_LEADER 8 $uws_game.starting_ax $uws_game.starting_y}
				{TELEPORT_LEADER 9 $uws_game.starting_bx $uws_game.starting_y}
			[/case]
			
			[case]
				value=slash
				
				{TELEPORT_LEADER 8 5 1}
				{TELEPORT_LEADER 9 8 1}
				
				[replace_map]
				    map=$uws_game.mask_file
				    shrink=yes
				    expand=yes
				[/replace_map]
				
				[place_shroud]
					[filter_side]
						side=$uws_game.filter_human_sides
					[/filter_side]
					
					x=1-$uws_game.edge
					y=1-200
				[/place_shroud]
				
				{VARIABLE hide_map_from_x $uws_game.middle}
				{VARIABLE_OP hide_map_from_x add 1}
				
				{VARIABLE hide_map_from_y $uws_game.race_make_players_opponents_y}
				{VARIABLE_OP hide_map_from_y sub 3}
				
				[terrain]
					terrain=_off^_usr
					y=$hide_map_from_y|-200
					x=$hide_map_from_x|-100
				[/terrain]
				
				{VARIABLE leaderb_start_y $uws_game.race_start_y}
				{VARIABLE_OP leaderb_start_y add 1}
				
				{TELEPORT_LEADER 8 $uws_game.starting_ax $uws_game.race_start_y}
				{TELEPORT_LEADER 9 $uws_game.starting_ax $leaderb_start_y}
				
				[if]
					[variable]
						name=uws_game.single_player_game
						boolean_equals=no
					[/variable]
					[then]
						[terrain]
							terrain=$uws_game.slash_keep_tile
							y=$leaderb_start_y
							x=$uws_game.starting_ax
						[/terrain]
					[/then]
				[/if]
				
				{REMOVE_SHROUD_AROUND $uws_game.starting_ax $uws_game.race_start_y}
				
				[scroll_to]
					x=$uws_game.starting_ax
					y=$uws_game.race_start_y
				[/scroll_to]
			[/case]
			
			[case]
				value=race
				
				{TELEPORT_LEADER 8 5 1}
				{TELEPORT_LEADER 9 8 1}
				
				[replace_map]
				    map=$uws_game.mask_file
				    shrink=yes
				    expand=yes
				[/replace_map]
				
				[place_shroud]
					[filter_side]
						side=$uws_game.filter_human_sides
					[/filter_side]
					
					x=1-$uws_game.edge
					y=1-200
				[/place_shroud]
				
				[item]
					x=$uws_game.middle
					y=$uws_game.race_finish_y
					halo=flags/wood-elvish-flag-[1~4].png~SCALE(120,120):150
				[/item]
				
				[terrain]
					x=$uws_game.middle
					y=$uws_game.race_finish_y
					layer=overlay
					terrain="^Xo"
				[/terrain]
				
				{TELEPORT_LEADER 8 $uws_game.starting_ax $uws_game.race_start_y}
				{TELEPORT_LEADER 9 $uws_game.starting_bx $uws_game.race_start_y}
				
				{REMOVE_SHROUD_AROUND $uws_game.middle $uws_game.race_finish_y}
				{REMOVE_SHROUD_AROUND $uws_game.starting_ax $uws_game.race_start_y}
				{REMOVE_SHROUD_AROUND $uws_game.starting_bx $uws_game.race_start_y}
				
				[scroll_to]
					x=$uws_game.middle
					y=$uws_game.race_finish_y
				[/scroll_to]
			[/case]
			
			[case]
				value=after_classic
				
				{TELEPORT_LEADER 1 5 1}
				{TELEPORT_LEADER 3 8 1}
				
				[replace_map]
				    map=$uws_game.mask_file
				    shrink=yes
				    expand=yes
				[/replace_map]
				
				{TELEPORT_LEADER 1 $uws_game.starting_ax $uws_game.starting_y}
				{TELEPORT_LEADER 3 $uws_game.starting_bx $uws_game.starting_y}
				
				[modify_side]
					[filter_side]
						side=1,4
					[/filter_side]
					
					team_name=East
					user_team_name=East
					fog=yes
					share_vision=all
				[/modify_side]
				
				[modify_side]
					[filter_side]
						side=2,3
					[/filter_side]
					
					team_name=West
					user_team_name=West
					fog=yes
					share_vision=all
				[/modify_side]
			[/case]

			[case]
				value=after_race
				
				{TELEPORT_LEADER 1 5 1}
				{TELEPORT_LEADER 3 8 1}
				
				[replace_map]
				    map=$uws_game.mask_file
				    shrink=yes
				    expand=yes
				[/replace_map]
				
				{TELEPORT_LEADER 1 $uws_game.starting_ax $uws_game.starting_y}
				{TELEPORT_LEADER 3 $uws_game.starting_bx $uws_game.starting_y}
				
				[modify_side]
					[filter_side]
						side=1,4
					[/filter_side]
					
					team_name=East
					user_team_name=East
					fog=yes
					share_vision=all
				[/modify_side]
				
				[modify_side]
					[filter_side]
						side=2,3
					[/filter_side]
					
					team_name=West
					user_team_name=West
					fog=yes
					share_vision=all
				[/modify_side]
			[/case]

			[case]
				value=pillagers
				
				{TELEPORT_LEADER 8 5 1}
				{TELEPORT_LEADER 9 8 1}
				
				[replace_map]
				    map=$uws_game.mask_file
				    shrink=yes
				    expand=yes
				[/replace_map]
				
				{TELEPORT_LEADER 8 $uws_game.starting_y $uws_game.starting_ax}
				{TELEPORT_LEADER 9 $uws_game.starting_y $uws_game.starting_bx}
			[/case]
		[/switch]
	[/event]

	[event]
		name=slash_set_map_both_sides

		[replace_map]
		    map=$uws_game.mask_file
		    shrink=yes
		    expand=yes
		[/replace_map]
		
		{TELEPORT_LEADER 9 $uws_game.starting_bx $uws_game.race_start_y}
		{REMOVE_SHROUD_AROUND $uws_game.starting_bx $uws_game.race_start_y}

		[if]
			[variable]
				name=uws_game.hns_keep_wall
				boolean_equals=no
			[/variable]
			[then]
				[fire_event]
					name=slash_remove_middle_wall
				[/fire_event]
			[/then]
		[/if]
	[/event]

	[event]
		name=slash_remove_middle_wall
		first_time_only=no

		{VARIABLE middle_tile $uws_game.middle}
		{VARIABLE copy_from $middle_tile}
		{VARIABLE_OP copy_from sub 1}
		
		[store_locations]
			x=$middle_tile
			y=1-200
			terrain="_off^_usr"
			variable=wall_locations
			mode=always_clear
		[/store_locations]
		
		[foreach]
			array=wall_locations
			variable=wall_tile
			[do]
				[store_locations]
					x=$copy_from
					y=$wall_tile.y
					variable=tile_copy
					mode=always_clear
				[/store_locations]
				
				[terrain]
					x=$middle_tile
					y=$wall_tile.y
					terrain=$tile_copy.terrain
				[/terrain]
			[/do]
		[/foreach]
	[/event]
#enddef

#define QQUWS_PREPARE_AFTER_GAMES_SPAWN
	[event]
		name=find_vacant_after_games_spawn
		first_time_only=no

		[unit]
			type="QQUWS_surprise"
			side=$uws_game.helper_units_side
			placement=map
			passable=yes
			overwrite=no
			x=$after_spawn_x
			y=$after_spawn_y
			random_traits=no
			random_gender=no
			upkeep=loyal
			facing=se
			[status]
				petrified=yes
			[/status]
		[/unit]
		
		[store_unit]
			[filter]
				side=$uws_game.helper_units_side
				type=QQUWS_surprise
			[/filter]
			
			variable=newly_spawned_unit
			mode=always_clear
		[/store_unit]
		
		{VARIABLE available_location_x $newly_spawned_unit.x}
		{VARIABLE available_location_y $newly_spawned_unit.y}
		
		[kill]
			x=$newly_spawned_unit.x
			y=$newly_spawned_unit.y
			fire_event=no
		[/kill]
	[/event]
	
	[event]
		name=after_games_apply_copy_modifications
		first_time_only=no
		
		{VARIABLE uws_spawn.type $after_games_copy_unit_type}
		{VARIABLE new_unit_bulky_value $after_games_extra_bulky_buff}
		{VARIABLE new_unit_armored_value $after_games_extra_armored_buff}
		{VARIABLE new_unit_beefy_value $after_games_extra_beefy_buff}
		{VARIABLE new_unit_fast_value $after_games_extra_fast_buff}
		{VARIABLE new_unit_agile_value $after_games_extra_agile_buff}
		{VARIABLE new_unit_spawn_quiet_bonus_id ""}
		{VARIABLE new_unit_spawn_minion $after_games_spawn_minion}
		{VARIABLE new_unit_gold $after_games_gold_value}
		{VARIABLE new_unit_has_item $after_games_drop_item}
		{VARIABLE new_unit_spawn_champion ""}

		[if]
			[variable]
				name=after_games_next_send_$after_games_copied_from_side
				equals=mercenaries
			[/variable]
			[then]
				[if]
					[variable]
						name=after_games_side_leader
						boolean_equals=yes
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$new_unit_spawn_id
							[/filter]

							[object]
								silent=yes

								[effect]
									apply_to=new_advancement
									replace=yes
									types=$after_games_unit_translation_table_$after_games_copied_from_side|.leader
								[/effect]
							[/object]
						[/modify_unit]

						[transform_unit]
							id=$new_unit_spawn_id
							transform_to=$after_games_unit_translation_table_$after_games_copied_from_side|.leader
						[/transform_unit]
					[/then]

					[else]
						[modify_unit]
							[filter]
								id=$new_unit_spawn_id
							[/filter]

							[object]
								silent=yes

								[effect]
									apply_to=new_advancement
									replace=yes
									types=$after_games_unit_translation_table_$after_games_copied_from_side|.type_minion_$after_games_copy_level
								[/effect]
							[/object]
						[/modify_unit]
						
						[transform_unit]
							id=$new_unit_spawn_id
							transform_to=$after_games_unit_translation_table_$after_games_copied_from_side|.type_minion_$after_games_copy_level
						[/transform_unit]
					[/else]
				[/if]

				[heal_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]
				[/heal_unit]
			[/then]
		[/if]

		[if]
			[variable]
				name=after_games_generate_champion
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE is_single_buff_random yes}
				{VARIABLE prespawn_champion_type $after_games_copy_unit_type}
				{VARIABLE prespawn_moves 5}
				{VARIABLE prespawn_buff_a "rand"}
				{VARIABLE prespawn_buff_b "rand"}
				{VARIABLE prespawn_buff_c "rand"}
				{VARIABLE prespawn_full_buff "rand:rand:rand:C1"}
				{VARIABLE champion_unit_already_exists yes}

				[fire_event]
					name=generate_champion_data
				[/fire_event]

				{VARIABLE new_unit_spawn_champion "$prespawn_buff_a|:$prespawn_buff_b|:$prespawn_buff_c|:C1"}
				[modify_unit]
					[filter]
						id=$new_unit_spawn_id
					[/filter]

					name=$prespawn_buff_name
				[/modify_unit]
			[/then]
		[/if]
		
		[fire_event]
			name=apply_new_unit_bonus
		[/fire_event]

		[if]
			[variable]
				name=new_unit_has_item
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE register_uws_special "$after_games_item_id|_item"}
				[fire_event]
					name=register_uws_event
				[/fire_event]
			[/then]
		[/if]
	[/event]

	[event]
		name=after_games_apply_boost
		first_time_only=no

		[switch]
			variable=boost_type

			[case]
				value=slow

				[harm_unit]
					[filter]
						side=$boost_against
					[/filter]

					amount=0
					slowed=yes
				[/harm_unit]
			[/case]

			[case]
				value=steal

				[store_gold]
					side=$boost_against
					variable=side_gold
				[/store_gold]

				{VARIABLE steal_gold_amount $after_games_max_steal}
				[if]
					[variable]
						name=side_gold
						less_than=$steal_gold_amount
					[/variable]
					[then]
						{VARIABLE steal_gold_amount $side_gold}
					[/then]
				[/if]

				[if]
					[variable]
						name=steal_gold_amount
						greater_than=0
					[/variable]
					[then]
						[gold]
							side=$boost_against
							amount=-$steal_gold_amount
						[/gold]

						[gold]
							side=$gold_for
							amount=$steal_gold_amount
						[/gold]
					[/then]
				[/if]

				{VARIABLE itmp $after_games_$gold_for|_boost_i}
				{VARIABLE_OP itmp sub 1}
				{VARIABLE after_games_boost_info_$gold_for|[$itmp].buff "$after_games_boost_info_$gold_for|[$itmp].buff ($steal_gold_amount)"}
			[/case]

			[case]
				value=reheal_own

				[heal_unit]
					[filter]
						side=$gold_for
					[/filter]

					amount=full
					restore_statuses=yes
					animate=yes
				[/heal_unit]
			[/case]

			[case]
				value=slow_wave

				[harm_unit]
					[filter]
						side=$own_enemies
					[/filter]

					amount=0
					kill=no
					slowed=yes
				[/harm_unit]
			[/case]

			[case]
				value=improved_damage

				[modify_unit]
					[filter]
						side=$gold_for
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=attack
							increase_damage=70%
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(115,0,0)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=turtle_up

				[modify_unit]
					[filter]
						side=$gold_for
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
						    apply_to=resistance
						    replace=no
						    [resistance]
								blade=-40
								impact=-40
								pierce=-40
								arcane=-40
								cold=-40
								fire=-40
								secret=-40
								insects=-40
						    [/resistance]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(-100,-100,-100)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			
			[case]
				value=poison

				[harm_unit]
					[filter]
						side=$boost_against
					[/filter]

					amount=4
					kill=no
					poisoned=yes
				[/harm_unit]
			[/case]

			[case]
				value=damage_armor

				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
						    apply_to=resistance
						    replace=no
						    [resistance]
								blade=20
								impact=20
								pierce=20
								arcane=20
								cold=20
								fire=20
								secret=20
								insects=20
						    [/resistance]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(80,80,80)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=drunk_opponent

				# separate as trait because wesnoth refused to work with accuracy increase effect on removable object
				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[trait]
						id=qquws_after_boost_trait

						[effect]
						    apply_to=attack
							increase_accuracy=-10
							increase_parry=-5
						[/effect]
						[effect]
						    apply_to=attack
						    special_type=chance_to_hit
						    [set_specials]
						    	mode=append
						    	[chance_to_hit]
						    		id=qquws_alcohol_fumes_cth
						    		sub=10
						    		cumulative=no
						    	[/chance_to_hit]
						    [/set_specials]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~BL(1)"
						[/effect]
					[/trait]
				[/modify_unit]
			[/case]

			[case]
				value=dragon_heart

				[modify_unit]
					[filter]
						side=$gold_for
						[not]
							ability=qquws_dragon_protection
						[/not]
					[/filter]

					[variables]
						dragon_protection_max_lvl=5
						dragon_protection_counter=1
						dragon_restore_amount=0.25
						dragon_restore_is_fraction=yes
					[/variables]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_dragon_protection
									name="dragon heart protection"
									description="When this unit is dying the Dragon's Protection revives it, restoring 25% of max hp. Because of how much magical energy this requires, this can only trigger once per turn (the counter refreshes at the beginning of the player's turn) and only if the killer unit is of level 5 or lower."
								[/dummy]
							[/abilities]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(20,20,70)"
						[/effect]
					[/object]
				[/modify_unit]

				{VARIABLE register_uws_special "dragon_protection_item"}
				[fire_event]
					name=register_uws_event
				[/fire_event]
			[/case]

			[case]
				value=freeze_leader

				[modify_unit]
					[filter]
						side=$boost_against
						canrecruit=yes
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_frozen
									name="<span color='#64a3b5'>frozen</span>"
									description="This unit cannot move or attack, all defenses are set to 10% and resistances to 100%."
								[/dummy]
							[/abilities]
						[/effect]
						[effect]
							apply_to=movement
							set=0
						[/effect]
						[effect]
						    apply_to=defense
						    replace=yes
						    [defense]
								flat=90
								frozen=90
								forest=90
								hills=90
								village=90
								swamp_water=90
								shallow_water=90
								castle=90
								cave=90
								sand=90
								fungus=90
								mountains=90
								castle=90
								sand=90
								unwalkable=90
						    [/defense]
						[/effect]
						[effect]
						    apply_to=remove_attacks
						[/effect]
						[effect]
						    apply_to=resistance
						    replace=yes
						    [resistance]
								arcane=0
								blade=0
								cold=0
								fire=0
								impact=0
								pierce=0
								secret=0
								insects=0
						    [/resistance]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~GS()"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=easy_targets

				[modify_unit]
					[filter]
						side=$own_enemies
					[/filter]

					[object]
						silent=yes

						[effect]
						    apply_to=defense
						    replace=no
						    [defense]
								flat=20
								frozen=20
								forest=20
								hills=20
								village=20
								swamp_water=20
								shallow_water=20
								castle=20
								cave=20
								sand=20
								fungus=20
								mountains=20
								castle=20
								sand=20
								reef=20
								unwalkable=20
						    [/defense]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~SEPIA()"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=payback

				[harm_unit]
					[filter]
						side=$boost_against
					[/filter]

					amount=$after_games_payback_damage
					kill=no
				[/harm_unit]
			[/case]

			[case]
				value=remove_specials

				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=attack
							[set_specials]
								mode=replace
								[dummy]
									id=qquws_removed_specials
									name="specials removed"
									description="All specials are removed for a duration of one wave."
								[/dummy]
							[/set_specials]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(50,120,50)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=remove_zoc

				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_no_zoc
									name="<span color='#d68c4b'>no zoc</span>"
									description="This unit lost it's zone of control. All enemies can move freely around this unit."
								[/dummy]
							[/abilities]
						[/effect]
						[effect]
							apply_to=zoc
							value=no
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(50,50,0)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=lower_damage

				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=attack
							increase_damage=-30%
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(-25,80,80)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=flat_defense

				[modify_unit]
					[filter]
						side=$boost_against
					[/filter]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
						    apply_to=defense
						    replace=yes
						    [defense]
								flat=60
								frozen=60
								forest=60
								hills=60
								village=60
								swamp_water=60
								shallow_water=60
								castle=60
								cave=60
								sand=60
								fungus=60
								mountains=60
								castle=60
								sand=60
								reef=60
								unwalkable=60
						    [/defense]
						[/effect]
						[effect]
							apply_to=image_mod
							add="~CS(-30,0,-30)"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]

			[case]
				value=insurance

				[modify_unit]
					[filter]
						side=$gold_for
						canrecruit=no
					[/filter]

					[variables]
						insurance_multiplier=7
					[/variables]

					[object]
						silent=yes
						id=qquws_after_boost
						take_only_once=no

						[effect]
							apply_to=new_ability
							[abilities]
								[dummy]
									id=qquws_insured_unit
									name="insurance"
									description="This unit is insured, meaning that if it dies then the unit's owner receives gold. The amount received depends on the number of kills the unit has."
								[/dummy]
							[/abilities]
						[/effect]
						[effect]
						    apply_to=overlay
						    add=halo/uws/champion7.png
						[/effect]
					[/object]
				[/modify_unit]

				{VARIABLE register_uws_special "insurance_special"}
				[fire_event]
					name=register_uws_event
				[/fire_event]
			[/case]
		[/switch]
	[/event]
#enddef

#define QQUWS_HANDLE_SELECT_NEW_LEADER
	[event]
		name=select_new_side_leader
		first_time_only=no

		{VARIABLE unit.canrecruit yes}
		{VARIABLE second_unit.canrecruit no}
		{VARIABLE unit.recruits $second_unit.recruits}
		{VARIABLE unit.variables.original_name $unit.name}
		{VARIABLE unit.name $second_unit.name}

		[if]
			[variable]
				name=second_unit.variables.original_name
				not_equals=""
			[/variable]
			[then]
				{VARIABLE second_unit.name $second_unit.variables.original_name}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_game.is_campaign
				boolean_equals=yes
			[/variable]
			[then]
				[for]
					variable=i
					array=qquws_lasting_effect_information
					[do]
						[if]
							[variable]
								name=qquws_lasting_effect_information[$i].id
								equals=$unit.id
							[/variable]
							[then]
								{VARIABLE qquws_lasting_effect_information[$i].id $second_unit.id}
							[/then]
						[/if]
					[/do]
				[/for]
				
				[if]
					[variable]
						name=sculpt_unit_information[0].id
						not_equals=""
					[/variable]
					[then]
						[for]
							variable=i
							array=sculpt_unit_information
							[do]
								[if]
									[variable]
										name=sculpt_unit_information[$i].id
										equals=$unit.id
									[/variable]
									[then]
										{VARIABLE sculpt_unit_information[$i].id $second_unit.id}
									[/then]
								[/if]
							[/do]
						[/for]
					[/then]
				[/if]
				
				{VARIABLE unit.id $second_unit.id}
			[/then]
		[/if]
		
		[unstore_unit]
			variable=unit
		[/unstore_unit]

		[if]
			[variable]
				name=second_unit.hitpoints
				greater_than=0
			[/variable]
			[then]
				# what is the purpose of this? can this be deleted? I wrote this ffs but what for?
				[unstore_unit]
					variable=second_unit
				[/unstore_unit]
			[/then]
		[/if]
	[/event]
#enddef

#define QQUWS_ARENA_EVENTS
	[event]
		name=arena_print_labels
		first_time_only=no

		[label]
			x=$uws_game.middle
			y=1
			text="<span color='#ffffff'>$arena_wave_info</span>"
		[/label]

		[store_unit]
			variable=freshly_spawned_units
			kill=no
			[filter]
				side=5,6,7,8
				status=petrified
			[/filter]
		[/store_unit]

		[for]
			array=freshly_spawned_units
			variable=i
			[do]
				[store_unit_type]
					variable=spawned_unit_type
					mode=always_clear
					type=$freshly_spawned_units[$i].type
				[/store_unit_type]

				{VARIABLE spawn_label_color "#909296"}
				[if]
					[variable]
						name=turn_number
						equals=$freshly_spawned_units[$i].variables.unpetrify_turn
					[/variable]
					[then]
						{VARIABLE spawn_label_color "#e0bb82"}
					[/then]
				[/if]

				[label]
					x=$freshly_spawned_units[$i].x
					y=$freshly_spawned_units[$i].y
					text="<span color='$spawn_label_color'>$spawned_unit_type.name</span>"
				[/label]
			[/do]
		[/for]
	[/event]

	[event]
		name=arena_prepare_surprises
		first_time_only=no

		{VARIABLE arena_random_pool $random_pool.$arena_surprise_pool}
		{VARIABLE_OP random_surprise rand $arena_random_pool}

		[store_unit_type]
			type=$random_surprise
			variable=surprise_unit_type
			mode=always_clear
		[/store_unit_type]

		[set_variables]
			name=surprises_list
			mode=replace
			[value]
				# dummy (so the indexing begins from 1 = side_number)
			[/value]
			[value]
				type=$random_surprise
				value=$surprise_unit_type.cost
			[/value]
			[value]
				type=$random_surprise
				value=$surprise_unit_type.cost
			[/value]
		[/set_variables]
	[/event]

	[event]
		name=arena_generate_side_surprises
		first_time_only=no

		{VARIABLE arena_random_pool $random_pool.$arena_surprise_pool}
		[for]
			variable=i
			start=1
			end=5
			step=1
			[do]
				{VARIABLE_OP random_surprise rand $arena_random_pool}
				[store_unit_type]
					type=$random_surprise
					variable=surprise_unit_type
					mode=always_clear
				[/store_unit_type]

				[unit]
					type=$random_surprise
					side=9
					x=$sides[$side_number].arena_recruitment_x
					y="$( $sides[$side_number].arena_recruitment_y + $i )"
					[status]
						petrified=yes
					[/status]
				[/unit]

				[label]
					x=$sides[$side_number].arena_recruitment_x
					y="$( $sides[$side_number].arena_recruitment_y + $i )"
					text="<span color='#fafafa' size='small'>$surprise_unit_type.name ($surprise_unit_type.cost|g)</span>"
				[/label]
			[/do]
		[/for]
	[/event]
#enddef

#define QQUWS_REMOVE_GLOBAL_TRAIT
	[event]
		name=remove_global_trait
		first_time_only=no

		[if]
			[variable]
				name=uws_game.is_pvp
				boolean_equals=yes
			[/variable]
			[then]
				[remove_trait]
					side=$remove_trait_from_side
					trait_id=$remove_trait_id
				[/remove_trait]
			[/then]
			[else]
				[remove_trait]
					[filter_side]
						[allied_with]
							side=$remove_trait_from_side
						[/allied_with]
					[/filter_side]
					
					trait_id=$remove_trait_id
				[/remove_trait]
			[/else]
		[/if]
	[/event]
#enddef

#define QQUWS_AFTER_GAMES_HANDLE_SPECIAL_QUESTIONS
	[event]
		name=after_games_wave_preparation
		first_time_only=no

		[if]
			[variable]
				name=after_games.mercenaries_mode
				equals=select
			[/variable]
			[then]
				[store_unit]
					[filter]
						side=$side_number
						canrecruit=yes
					[/filter]
					
					variable=side_leader_unit
					mode=always_clear
				[/store_unit]
				{VARIABLE after_games_send_leader_$side_number $side_leader_unit.level}
				{VARIABLE after_games_send_leader_tmp $side_leader_unit.level}

				[message]
					speaker=narrator
					caption="General of the Northern Expedition"
					image="portraits/humans/general.png"
					side=$side_number
					message="It's time to decide on the next send. If you decide to hire mercenaries then remember that the number, levels and relative xp of the minions sent will be equal to the units you have at the beginning of the next turn, whereas the leader will be of level $after_games_send_leader_tmp|. Furthermore the mercenaries will receive all the item bonuses and all xp mod buffs from your units. Keep in mind that if you decide to enter the mercenaries' guild, you have to hire your warriors and must not turn your back to them disrespectfully."
					[option]
						message="Send regular copies"
						[command]
							{VARIABLE after_games_next_send_$side_number copies}
						[/command]
					[/option]
					[option]
						message="Send mercenaries"
						[command]
							{VARIABLE after_games_next_send_$side_number mercenaries}
						[/command]
					[/option]
				[/message]

				[if]
					[variable]
						name=after_games_next_send_$side_number
						equals=mercenaries
					[/variable]
					[then]
						[set_variables]
							name=after_games_random_mercenaries_pool
							mode=replace
						[/set_variables]

						[for]
							variable=m
							start=0
							end=2
							step=1
							[do]
								{VARIABLE_OP random_unit_type rand ("$random_pool.level_$after_games_send_leader_tmp")}
								{VARIABLE after_games_random_mercenaries_pool[$m].type_leader $random_unit_type}
								[store_unit_type]
									variable=randomed_unit_type
									mode=always_clear
									type=$random_unit_type
								[/store_unit_type]
								{VARIABLE after_games_random_mercenaries_pool[$m].image_leader $randomed_unit_type.image}
								{VARIABLE after_games_random_mercenaries_pool[$m].display_info "Leader: $randomed_unit_type.name"}

								[for]
									variable=n
									start=0
									end=6
									step=1
									[do]
										{VARIABLE_OP random_unit_type rand ("$random_pool.level_$random_pool.level_$n")}
										{VARIABLE after_games_random_mercenaries_pool[$m].type_minion_$n $random_unit_type}
										
										[if]
											[have_unit]
												side=$side_number
												level=$n
												canrecruit=no
											[/have_unit]
											[then]
												[store_unit_type]
													variable=randomed_unit_type
													mode=always_clear
													type=$random_unit_type
												[/store_unit_type]

												{VARIABLE after_games_random_mercenaries_pool[$m].display_info "$after_games_random_mercenaries_pool[$m].display_info
	Level $n|: $randomed_unit_type.name"}
											[/then]
										[/if]
									[/do]
								[/for]
							[/do]
						[/for]
						
						[message]
							speaker=narrator
							caption="Hiree of the Mercenaries Guild"
							image="portraits/humans/thug.png"
							side=$side_number
							message="These warriors offer to do the job for you, choose carefully:"
							[option]
								message=$after_games_random_mercenaries_pool[0].display_info
								image=$after_games_random_mercenaries_pool[0].image_leader
								[command]
									{VARIABLE after_games_unit_translation_table_$side_number|.leader $after_games_random_mercenaries_pool[0].type_leader}
									[for]
										variable=m
										start=0
										end=6
										step=1
										[do]
											{VARIABLE after_games_unit_translation_table_$side_number|.type_minion_$m $after_games_random_mercenaries_pool[0].type_minion_$m}
										[/do]
									[/for]
								[/command]
							[/option]
							[option]
								message=$after_games_random_mercenaries_pool[1].display_info
								image=$after_games_random_mercenaries_pool[1].image_leader
								[command]
									{VARIABLE after_games_unit_translation_table_$side_number|.leader $after_games_random_mercenaries_pool[1].type_leader}
									[for]
										variable=m
										start=0
										end=6
										step=1
										[do]
											{VARIABLE after_games_unit_translation_table_$side_number|.type_minion_$m $after_games_random_mercenaries_pool[1].type_minion_$m}
										[/do]
									[/for]
								[/command]
							[/option]
							[option]
								message=$after_games_random_mercenaries_pool[2].display_info
								image=$after_games_random_mercenaries_pool[2].image_leader
								[command]
									{VARIABLE after_games_unit_translation_table_$side_number|.leader $after_games_random_mercenaries_pool[2].type_leader}
									[for]
										variable=m
										start=0
										end=6
										step=1
										[do]
											{VARIABLE after_games_unit_translation_table_$side_number|.type_minion_$m $after_games_random_mercenaries_pool[2].type_minion_$m}
										[/do]
									[/for]
								[/command]
							[/option]
						[/message]
					[/then]
				[/if]
			[/then]
			[else]
				[if]
					[variable]
						name=after_games.mercenaries_mode
						equals=random
					[/variable]
					[and]
						[variable]
							name=side_number
							equals=1
						[/variable]
					[/and]
					[then]
						{VARIABLE after_games_next_send_1 mercenaries}
						{VARIABLE after_games_next_send_3 mercenaries}

						[store_unit]
							[filter]
								canrecruit=yes
							[/filter]
							
							variable=side_leaders
							mode=always_clear
						[/store_unit]

						{VARIABLE after_games_send_leader_tmp "$( max( $side_leaders[0].level, $side_leaders[1].level ) )"}
						{VARIABLE_OP random_unit_type rand ("$random_pool.level_$after_games_send_leader_tmp")}
						{VARIABLE after_games_unit_translation_table_1.leader $random_unit_type}
						{VARIABLE after_games_unit_translation_table_3.leader $random_unit_type}
						[for]
							variable=m
							start=0
							end=6
							step=1
							[do]
								{VARIABLE_OP random_unit_type rand ("$random_pool.level_$random_pool.level_$m")}
								{VARIABLE after_games_unit_translation_table_1.type_minion_$m $random_unit_type}
								{VARIABLE after_games_unit_translation_table_3.type_minion_$m $random_unit_type}
							[/do]
						[/for]
					[/then]
				[/if]
			[/else]
		[/if]

		[if]
			[variable]
				name=after_games.boosts_mode
				equals=select
			[/variable]
			[then]
				[message]
					speaker=narrator
					caption="Pillager of the Eastern Shore"
					image="portraits/orcs/warlord.png"
					side=$side_number
					message="Choose the buff (each buff can be chosen only once)"
					[option]
						message="Send regular wave (no buff)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost ""}
						[/command]
					[/option]
					[option]
						message="Send 10%p stronger wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost boost10}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "10%p stronger"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].boost10_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].boost10_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send 15%p stronger wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost boost15}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "15%p stronger"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].boost15_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].boost15_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send 20%p stronger wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost boost20}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "20%p stronger"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].boost20_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].boost20_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send 30%p stronger leader"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost leader30}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "30%p leader"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].leader30_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].leader30_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send bulky +70% leader, +35% minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost bulky}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Bulky"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].bulky_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].bulky_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send beefy +50% leader, +25% minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost beefy}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Beefy"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].beefy_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].beefy_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send armored +35% leader, +20% minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost armored}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Armored"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].armored_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].armored_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send agile +20% leader, +10% minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost agile}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Agile"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].agile_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].agile_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send fast +3mp leader, +2mp minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost fast}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Fast"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].fast_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].fast_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send champion leader (champion buff is random)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost champion}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Champion"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].champion_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].champion_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send strong leader (two random leader buffs)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost strong_leader}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Strong leader"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].strong_leader_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].strong_leader_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Send buffed minions (minion buff is random)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost minions}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Minions"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].minions_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].minions_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Slow all opponent's units"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost slow}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Slow"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].slow_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].slow_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Deal 4 damage and poison all opponent's units"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost poison}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Poison"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].poison_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].poison_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Decrease opponent's damage by 30% until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost lower_damage}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Low damage"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].lower_damage_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].lower_damage_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Decrease opponent's parry by 5 and accuracy by 10 until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost drunk_opponent}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Alcohol fumes"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].drunk_opponent_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].drunk_opponent_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Decrease opponent's resistance by 20% until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost damage_armor}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Reduced armor"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].damage_armor_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].damage_armor_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Set all opponent's unit defenses to flat 40% until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost flat_defense}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Flat defense"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].flat_defense_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].flat_defense_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Remove all weapon specials from opponent's units until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost remove_specials}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Forgetfulness"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].remove_specials_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].remove_specials_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="All opponent's units lose their zone of control until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost remove_zoc}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Remove ZoC"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].remove_zoc_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].remove_zoc_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Freeze opponent's leader until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost freeze_leader}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Freeze opponent"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].freeze_leader_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].freeze_leader_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Steal $after_games_max_steal gold (limited by the opponent's gold at the beginning of the next turn)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost steal}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Gold steal"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].steal_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].steal_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Deal 70% more damage until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost improved_damage}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Damage boost"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].improved_damage_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].improved_damage_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Improve your units' resistances by 40% until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost turtle_up}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Turtle up"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].turtle_up_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].turtle_up_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Get 15%p weaker wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost weaker15}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "15%p weaker"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].deboost15_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].deboost15_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Get 25%p weaker minions"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost weak_minions}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Weak minions"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].weak_minions_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].weak_minions_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Fully reheal your own units"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost reheal_own}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Reheal own"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].reheal_own_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].reheal_own_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Slow all incoming enemies"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost slow_wave}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Slow wave"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].slow_wave_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].slow_wave_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Reduce defense of all incoming enemies by 20%"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost easy_targets}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Easy targets"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].easy_targets_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].easy_targets_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Dragon Heart protection until the next wave"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost dragon_heart}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Dragon Heart"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].dragon_heart_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].dragon_heart_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Receive gold if any of your units dies before the next wave (7x unit's kills)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost insurance}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Insurance"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].insurance_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].insurance_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Cancel opponent's boost (if any is chosen)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost cancelation}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Cancelation"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].cancel_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].cancel_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Mirror opponent's boost back (if any is chosen)"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost mirror}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Mirror"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].mirror_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].mirror_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
					[option]
						message="Harm opponent's units for 24/8 dmg if an offensive/defensive boost is chosen"
						[command]
							{VARIABLE after_games_$side_number|_wave_boost payback}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].wave $after_games_preparation_wave_index}
							{VARIABLE after_games_boost_info_$side_number|[$after_games_$side_number|_boost_i].buff "Payback"}
							{VARIABLE_OP after_games_$side_number|_boost_i add 1}
							{VARIABLE after_games_boost[$side_number].payback_available no}
						[/command]
						[show_if]
							[variable]
								name=after_games_boost[$side_number].payback_available
								boolean_equals=yes
							[/variable]
						[/show_if]
					[/option]
				[/message]
			[/then]
			[else]
				[if]
					[variable]
						name=after_games.boosts_mode
						equals=random
					[/variable]
					[and]
						[variable]
							name=side_number
							equals=1
						[/variable]
					[/and]
					[then]
						{VARIABLE_OP select_random_boost rand "boost10,boost20,bulky,beefy,armored,fast,agile,champion,slow,improved_damage,reheal_own,weaker15,slow_wave,turtle_up,poison,damage_armor,drunk_opponent,boost15,minions,strong_leader,dragon_heart,freeze_leader,easy_targets,remove_specials,remove_zoc,leader30,lower_damage,flat_defense,insurance,weak_minions"}
						{VARIABLE after_games_1_wave_boost $select_random_boost}
						{VARIABLE after_games_3_wave_boost $select_random_boost}
						{VARIABLE after_games_boost_info_1[$after_games_1_boost_i].wave $after_games_preparation_wave_index}
						{VARIABLE after_games_boost_info_3[$after_games_3_boost_i].wave $after_games_preparation_wave_index}
						{VARIABLE after_games_boost_info_1[$after_games_1_boost_i].buff $after_games_boosts_translations.$select_random_boost}
						{VARIABLE after_games_boost_info_3[$after_games_3_boost_i].buff $after_games_boosts_translations.$select_random_boost}
						{VARIABLE_OP after_games_1_boost_i add 1}
						{VARIABLE_OP after_games_3_boost_i add 1}
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define QQUWS_AFTER_RACE_EVENTS
	[event]
		name=after_race_reprint_labels
		first_time_only=no

		[for]
			array=after_race_spawn_table
			variable=i
			[do]
				[label]
					x="$( $uws_game.middle - 1)"
					y=$after_race_spawn_table[$i].y
					text="<span color='$after_race_spawn_table[$i].colour'>$after_race_spawn_table[$i].label_west</span>"
				[/label]

				[label]
					x="$( $uws_game.middle + 1)"
					y=$after_race_spawn_table[$i].y
					text="<span color='$after_race_spawn_table[$i].colour'>$after_race_spawn_table[$i].label_east</span>"
				[/label]
			[/do]
		[/for]
	[/event]

	[event]
		name=after_race_check_win
		first_time_only=no

		[filter]
			y=1

			[filter_location]
				terrain="Ce"
			[/filter_location]
		[/filter]

		[if]
			[variable]
				name=all_waves_defeated
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						id=$unit.id
						canrecruit=yes
					[/have_unit]
					[then]
						[message]
							speaker=narrator
							caption="Arch-Lady of the Secret Order of the Silver Moon"
							image="portraits/humans/mage-silver+female.webp"
							message="Congratulations to $winning_leader for being the first to capture the flag and defeating $losing_leader in a clean battle."
						[/message]

						[kill]
							[not]
								side=$winning_side
							[/not]

							fire_event=yes
							animate=no
						[/kill]
					[/then]
					[else]
						[message]
							speaker=narrator
							caption="Initiate of the Tidal Wave"
							image="portraits/merfolk/initiate-2.webp"
							side_for=$unit.side
							message="Only the leader can claim the flag!"
						[/message]
					[/else]
				[/if]
			[/then]
			[else]
				[message]
					speaker=narrator
					caption="Grass-chewing George"
					image="portraits/uws/bull.png"
					side_for=$unit.side
					message="You haven't defeated all the enemies yet. And remember, only the leader can claim the flag."
				[/message]
			[/else]
		[/if]
	[/event]

	[event]
		name=after_race_check_waves_defeated
		first_time_only=no

		{VARIABLE check_key spawned_west}
		{VARIABLE winning_side 1}
		{VARIABLE enemies_side 2}
		{VARIABLE winning_leader $sides[1].side_name}
		{VARIABLE losing_leader $sides[3].side_name}
		{VARIABLE losing_player_side 3}
		{VARIABLE losing_player_done_key spawned_east}
		{VARIABLE losing_player_spawn_key spawn_east}
		[if]
			[variable]
				name=unit.side
				equals=3
			[/variable]
			[then]
				{VARIABLE check_key spawned_east}
				{VARIABLE winning_side 3}
				{VARIABLE enemies_side 4}
				{VARIABLE winning_leader $sides[3].side_name}
				{VARIABLE losing_leader $sides[1].side_name}
				{VARIABLE losing_player_side 1}
				{VARIABLE losing_player_done_key spawned_west}
				{VARIABLE losing_player_spawn_key spawn_west}
			[/then]
		[/if]

		{VARIABLE all_waves_defeated yes}
		[for]
			start=0
			end="$( $after_race_spawn_table.length - 1 )"
			step=1
			variable=i
			[do]
				[if]
					[variable]
						name=after_race_spawn_table[$i].$check_key
						boolean_equals=no
					[/variable]
					[then]
						{VARIABLE all_waves_defeated no}
					[/then]
				[/if]
			[/do]
		[/for]

		[if]
			[variable]
				name=all_waves_defeated
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[have_unit]
						side=$enemies_side
					[/have_unit]
					[then]
						{VARIABLE all_waves_defeated no}
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]

	[event]
		name=after_race_spawn_threshold_crossed
		first_time_only=no

		[fire_event]
			name=after_games_wave_preparation
		[/fire_event]
	[/event]
#enddef
