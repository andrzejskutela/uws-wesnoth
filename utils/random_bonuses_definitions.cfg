#define RB_GAME_SETTINGS
	[options]
		{GAME_OPTION_CHECKBOX qqrb_allow_xp yes "Allow xp bonuses" "Bonuses that increase xp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_max_xp_red yes "Allow max xp bonuses" "Bonuses that decrease max xp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_reheal yes "Allow reheal bonuses" "Bonuses that reheal units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_hp yes "Allow hp bonuses" "Bonuses that increase hp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_dmg yes "Allow dmg bonuses" "Bonuses that increase dmg of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_str yes "Allow strike bonuses" "Bonuses that increase strikes of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_acc yes "Allow accuracy bonuses" "Bonuses that increase accuracy of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_parry yes "Allow parry bonuses" "Bonuses that increase parry of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_mp yes "Allow mp bonuses" "Bonuses that increase mp and improve mc of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_res yes "Allow resistance bonuses" "Bonuses that increase resistance of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_def yes "Allow defense bonuses" "Bonuses that improve defense of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_abilities yes "Allow ability bonuses" "Bonuses that add new abilities and weapon specials"}
		{GAME_OPTION_CHECKBOX qqrb_allow_weapons yes "Allow weapon bonuses" "Bonuses that add new weapons to units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_mercs yes "Allow mercenaries bonuses" "Bonuses that give extra units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_loyal yes "Allow loyal bonuses" "Bonuses that make units loyal / upkeepless"}
		{GAME_OPTION_CHECKBOX qqrb_allow_copy yes "Allow copy bonuses" "Bonuses that copy units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_gold yes "Allow gold bonuses" "Bonuses that give extra gold"}
	[/options]
#enddef

#define RB_DEFINITIONS
	[set_variables]
		name=qqrb_bonus_definitions
		mode=replace

		[value] # group
			nothing=nothing # used when no other bonus is available due to game settings, it only reports it's existence
			xp_weak=xp
			xp_med=xp
			xp_str=xp
			xp_extr=xp
			xp_myth=xp
			max_xp_reduce_str=max_xp_red
			max_xp_reduce_extr=max_xp_red
			max_xp_reduce_myth=max_xp_red
			hp_heal_weak=reheal
			hp_heal_med=reheal
			hp_heal_str=reheal
			hp_heal_extr=reheal
			hp_weak=hp
			hp_med=hp
			hp_str=hp
			hp_extr=hp
			hp_myth=hp
			dmg_med=dmg
			dmg_str=dmg
			dmg_extr=dmg
			dmg_myth=dmg
			dmg_both_str=dmg_both
			dmg_both_extr=dmg_both
			dmg_both_myth=dmg_both
			str_str=str_single_range
			str_extr=str_mr
			str_myth=str_mr
			acc_weak=acc
			acc_med=acc
			acc_str=acc
			acc_extr=acc
			acc_myth=acc
			parry_weak=parry
			parry_med=parry
			parry_str=parry
			parry_extr=parry
			parry_myth=parry
			mp_str=mp
			mp_extr=mp
			mp_myth=mp
			res_weak=res
			res_med=res
			res_str=res
			res_extr=res
			res_myth=res
			group_res_str=group_res
			group_res_extr=group_res
			group_res_myth=group_res
		[/value]

		[value] # strength
			nothing=weak
			xp_weak=weak
			xp_med=medium
			xp_str=strong
			xp_extr=extreme
			xp_myth=mythical
			max_xp_reduce_str=strong
			max_xp_reduce_extr=extreme
			max_xp_reduce_myth=mythical
			hp_heal_weak=weak
			hp_heal_med=medium
			hp_heal_str=strong
			hp_heal_extr=extreme
			hp_weak=weak
			hp_med=medium
			hp_str=strong
			hp_extr=extreme
			hp_myth=mythical
			dmg_med=medium
			dmg_str=strong
			dmg_extr=extreme
			dmg_myth=mythical
			dmg_both_str=strong
			dmg_both_extr=extreme
			dmg_both_myth=mythical
			str_str=strong
			str_extr=extreme
			str_myth=mythical
			acc_weak=weak
			acc_med=medium
			acc_str=strong
			acc_extr=extreme
			acc_myth=mythical
			parry_weak=weak
			parry_med=medium
			parry_str=strong
			parry_extr=extreme
			parry_myth=mythical
			mp_str=strong
			mp_extr=extreme
			mp_myth=mythical
			res_weak=weak
			res_med=medium
			res_str=strong
			res_extr=extreme
			res_myth=mythical
			group_res_str=strong
			group_res_extr=extreme
			group_res_myth=mythical
		[/value]

		[value] # no of parameters
			nothing=0
			xp_weak=1
			xp_med=1
			xp_str=1
			xp_extr=1
			xp_myth=1
			max_xp_reduce_str=1
			max_xp_reduce_extr=1
			max_xp_reduce_myth=1
			hp_heal_weak=1
			hp_heal_med=1
			hp_heal_str=1
			hp_heal_extr=1
			hp_weak=1
			hp_med=1
			hp_str=1
			hp_extr=1
			hp_myth=1
			dmg_med=2
			dmg_str=2
			dmg_extr=2
			dmg_myth=2
			dmg_both_str=1
			dmg_both_extr=1
			dmg_both_myth=1
			str_str=1
			str_extr=1
			str_myth=1
			acc_weak=2
			acc_med=2
			acc_str=2
			acc_extr=2
			acc_myth=2
			parry_weak=2
			parry_med=2
			parry_str=2
			parry_extr=2
			parry_myth=2
			mp_str=3
			mp_extr=3
			mp_myth=3
			res_weak=2
			res_med=2
			res_str=2
			res_extr=2
			res_myth=2
			group_res_str=2
			group_res_extr=2
			group_res_myth=2
		[/value]

		[value] # parameter A range
			xp_weak="2..4"
			xp_med="6..10"
			xp_str="12..20"
			xp_extr="25..35"
			xp_myth="50..70"
			max_xp_reduce_str="5..10"
			max_xp_reduce_extr="10..15"
			max_xp_reduce_myth="18..24"
			hp_heal_weak="6..12"
			hp_heal_med="12..25"
			hp_heal_str="25..50"
			hp_heal_extr="50..100"
			hp_weak="4..8"
			hp_med="10..16"
			hp_str="18..24"
			hp_extr="26..40"
			hp_myth="50..80"
			dmg_med="10..15"
			dmg_str="16..22"
			dmg_extr="23..30"
			dmg_myth="31..50"
			dmg_both_str=2
			dmg_both_extr=3
			dmg_both_myth=5
			str_str="melee,ranged"
			str_extr=1
			str_myth=2
			acc_weak="1..2"
			acc_med="2..3"
			acc_str="4..6"
			acc_extr="7..10"
			acc_myth="10..15"
			parry_weak="1..2"
			parry_med="2..3"
			parry_str="4..6"
			parry_extr="7..10"
			parry_myth="10..15"
			mp_str=1
			mp_extr=2
			mp_myth=3
			res_weak="1..2"
			res_med="4..6"
			res_str="7..10"
			res_extr="10..14"
			res_myth="15..20"
			group_res_str="4..7"
			group_res_extr="7..10"
			group_res_myth="7..10"
		[/value]

		[value] # parameter B range
			dmg_med="melee,ranged"
			dmg_str="melee,ranged"
			dmg_extr="melee,ranged"
			dmg_myth="melee,ranged"
			acc_weak="melee,ranged"
			acc_med="melee,ranged"
			acc_str="melee,ranged"
			acc_extr="melee,ranged"
			acc_myth="melee,ranged"
			parry_weak="melee,ranged"
			parry_med="melee,ranged"
			parry_str="melee,ranged"
			parry_extr="melee,ranged"
			parry_myth="melee,ranged"
			mp_str="mp,mc"
			mp_extr="mp"
			mp_myth="mp,mc"
			res_weak="blade,impact,pierce,cold,arcane,fire,secret"
			res_med="blade,impact,pierce,cold,arcane,fire,secret"
			res_str="blade,impact,pierce,cold,arcane,fire,secret"
			res_extr="blade,impact,pierce,cold,arcane,fire,secret"
			res_myth="blade,impact,pierce,cold,arcane,fire,secret"
			group_res_str="physical,magical"
			group_res_extr="physical,magical"
			group_res_myth="all"
		[/value]

		[value] # parameter C range
			mp_str="forest,hills,water,snow,sand,cave"
			mp_extr="nothing"
			mp_myth="everywhere"
		[/value]
	[/set_variables]
#enddef

#define RB_READABLE_NAME_GENERATOR SWITCH_VAR SELECTOR
	[switch]
		variable={SWITCH_VAR}

		[case]
			value=nothing
			{VARIABLE {SELECTOR}.bonus_readable "nothing"}
		[/case]
		[case]
			value=xp
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 xp"}
		[/case]
		[case]
			value=max_xp_red
			{VARIABLE {SELECTOR}.bonus_readable "-${SELECTOR}.param_1|% max xp"}
		[/case]
		[case]
			value=reheal
			{VARIABLE {SELECTOR}.bonus_readable "reheal ${SELECTOR}.param_1|% hp"}
		[/case]
		[case]
			value=hp
			{VARIABLE {SELECTOR}.bonus_readable "max hp +${SELECTOR}.param_1|%"}
		[/case]
		[case]
			value=dmg
			{VARIABLE {SELECTOR}.bonus_readable "${SELECTOR}.param_2 dmg +${SELECTOR}.param_1|%"}
		[/case]
		[case]
			value=dmg_both
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 dmg"}
		[/case]
		[case]
			value=str_single_range
			{VARIABLE {SELECTOR}.bonus_readable "+1 ${SELECTOR}.param_1 strike"}
		[/case]
		[case]
			value=str_mr

			[if]
				[variable]
					name={SELECTOR}.param_1
					equals=1
				[/variable]
				[then]
					{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 strike"}
				[/then]
				[else]
					{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 strikes"}
				[/else]
			[/if]
		[/case]
		[case]
			value=acc
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 ${SELECTOR}.param_2 accuracy"}
		[/case]
		[case]
			value=parry
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 ${SELECTOR}.param_2 parry"}
		[/case]
		[case]
			value=mp

			[switch]
				variable={SELECTOR}.param_2

				[case]
					value=mp
					{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 mp"}
				[/case]
				[case]
					value=mc
					{VARIABLE {SELECTOR}.bonus_readable "-${SELECTOR}.param_1 mc (${SELECTOR}.param_3|)"}
				[/case]
			[/switch]
		[/case]
		[case]
			value=res
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 ${SELECTOR}.param_2 res"}
		[/case]
		[case]
			value=group_res
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 ${SELECTOR}.param_2 res"}
		[/case]
		[else]
			[chat]
				speaker="UWS Random Bonuses"
				message="Bonus group ${SWITCH_VAR} is not recognizable. Please notify the addon maintainer."
			[/chat]
		[/else]
	[/switch]
#enddef

#define RB_APPLY_BONUS_EVENT
	[event]
		name=qqrb_apply_bonus
		first_time_only=no

		[switch]
			variable=qqrb_bonuses[$i].apply_group

			[case]
				value=xp

				{VARIABLE unit_xp $unit.experience}
				{VARIABLE_OP unit_xp add $qqrb_bonuses[$i].param_1}

				[if]
					[variable]
						name=unit_xp
						greater_than_equal_to=$unit.max_experience
					[/variable]
					[then]
						{VARIABLE unit_xp "$( $unit.max_experience - 1 )"}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					experience=$unit_xp
				[/modify_unit]
			[/case]
			[case]
				value=max_xp_red
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=max_experience
							increase="-$qqrb_bonuses[$i].param_1|%"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=reheal
				
				{VARIABLE reheal_p $qqrb_bonuses[$i].param_1}
				{VARIABLE reheal_amount "$( ceil($unit.max_hitpoints * $reheal_p / 100) )"}

				[heal_unit]
					[filter]
						id=$unit.id
					[/filter]

					amount=$reheal_amount
					animate=no
					restore_statuses=no
				[/heal_unit]
			[/case]
			[case]
				value=hp
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=hitpoints
							increase="$qqrb_bonuses[$i].param_1|%"
						    increase_total="$qqrb_bonuses[$i].param_1|%"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=dmg
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
							range=$qqrb_bonuses[$i].param_2
						    increase_damage="$qqrb_bonuses[$i].param_1|%"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=dmg_both
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
						    increase_damage=$qqrb_bonuses[$i].param_1
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=str_single_range
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
							range=$qqrb_bonuses[$i].param_1
						    increase_attacks=1
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=str_mr
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
						    increase_attacks=$qqrb_bonuses[$i].param_1
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=acc
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
							range=$qqrb_bonuses[$i].param_2
						    increase_accuracy=$qqrb_bonuses[$i].param_1
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=parry
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=attack
							range=$qqrb_bonuses[$i].param_2
						    increase_parry=$qqrb_bonuses[$i].param_1
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=mp

				[switch]
					variable=qqrb_bonuses[$i].param_2

					[case]
						value=mp

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
									apply_to=movement
					    			increase=$qqrb_bonuses[$i].param_1
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=mc
						
						[switch]
							variable=qqrb_bonuses[$i].param_3

							[case]
								value=forest

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												forest=-$qqrb_bonuses[$i].param_3
												fungus=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=hills

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												hills=-$qqrb_bonuses[$i].param_3
												mountains=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=water

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												swamp_water=-$qqrb_bonuses[$i].param_3
												shallow_water=-$qqrb_bonuses[$i].param_3
												deep_water=-$qqrb_bonuses[$i].param_3
												reef=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=snow

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												frozen=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=sand

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												sand=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=cave

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												cave=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
							[case]
								value=everywhere

								[modify_unit]
									[filter]
										id=$unit.id
									[/filter]

									[object]
										silent=yes

										[effect]
											apply_to=movement_costs
										    replace=no
										    [movement_costs]
												flat=-$qqrb_bonuses[$i].param_3
												frozen=-$qqrb_bonuses[$i].param_3
												forest=-$qqrb_bonuses[$i].param_3
												hills=-$qqrb_bonuses[$i].param_3
												mountains=-$qqrb_bonuses[$i].param_3
												village=-$qqrb_bonuses[$i].param_3
												swamp_water=-$qqrb_bonuses[$i].param_3
												shallow_water=-$qqrb_bonuses[$i].param_3
												deep_water=-$qqrb_bonuses[$i].param_3
												reef=-$qqrb_bonuses[$i].param_3
												castle=-$qqrb_bonuses[$i].param_3
												cave=-$qqrb_bonuses[$i].param_3
												sand=-$qqrb_bonuses[$i].param_3
												fungus=-$qqrb_bonuses[$i].param_3
										    [/movement_costs]
										[/effect]
									[/object]
								[/modify_unit]
							[/case]
						[/switch]
					[/case]
				[/switch]
			[/case]
			[case]
				value=res

				[switch]
					variable=qqrb_bonuses[$i].param_2

					[case]
						value=arcane

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										arcane=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=cold

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										cold=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=fire

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										fire=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=secret

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										secret=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=blade

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										blade=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=impact

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										impact=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=pierce

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										pierce=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
				[/switch]
			[/case]
			[case]
				value=group_res

				[switch]
					variable=qqrb_bonuses[$i].param_2

					[case]
						value=magical

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										arcane=-$qqrb_bonuses[$i].param_1
										cold=-$qqrb_bonuses[$i].param_1
										fire=-$qqrb_bonuses[$i].param_1
										secret=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=physical

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										blade=-$qqrb_bonuses[$i].param_1
										impact=-$qqrb_bonuses[$i].param_1
										pierce=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
					[case]
						value=all

						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]

							[object]
								silent=yes

								[effect]
								    apply_to=resistance
								    replace=no
								    [resistance]
										arcane=-$qqrb_bonuses[$i].param_1
										cold=-$qqrb_bonuses[$i].param_1
										fire=-$qqrb_bonuses[$i].param_1
										secret=-$qqrb_bonuses[$i].param_1
										blade=-$qqrb_bonuses[$i].param_1
										impact=-$qqrb_bonuses[$i].param_1
										pierce=-$qqrb_bonuses[$i].param_1
								    [/resistance]
								[/effect]
							[/object]
						[/modify_unit]
					[/case]
				[/switch]
			[/case]
		[/switch]

		[floating_text]
			x=$unit.x
			y=$unit.y
			text="<span color='#22ff22'>$qqrb_bonuses[$i].bonus_readable</span>"
		[/floating_text]

		[remove_item]
			x=$qqrb_bonuses[$i].x
			y=$qqrb_bonuses[$i].y
			image="halo/elven/faerie-fire-halo[1~7].png:125"
		[/remove_item]

		{VARIABLE collected_bonuses "$unit.variables.qqrb_collected_bonuses
$qqrb_bonuses[$i].bonus_readable"}

		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]

			[variables]
				qqrb_collected_bonuses=$collected_bonuses
			[/variables]

			[object]
				silent=yes

				[effect]
					apply_to=remove_ability
					[abilities]
						[dummy]
							id=qqrb_unit_info
						[/dummy]
					[/abilities]
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qqrb_unit_info
							name="collected bonuses"
							description="Bonuses collected so far:
$collected_bonuses"
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef