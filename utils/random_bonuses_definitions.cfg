#define RB_GAME_SETTINGS
	[options]
		{GAME_OPTION_CHECKBOX qqrb_allow_xp yes "Allow xp bonuses" "Bonuses that increase xp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_max_xp_red yes "Allow max xp bonuses" "Bonuses that decrease max xp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_reheal yes "Allow reheal bonuses" "Bonuses that reheal units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_hp yes "Allow hp bonuses" "Bonuses that increase hp of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_dmg yes "Allow dmg bonuses" "Bonuses that increase dmg of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_str yes "Allow strike bonuses" "Bonuses that increase strikes of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_accprr yes "Allow acc/parry bonuses" "Bonuses that increase accuracy and parry of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_mp yes "Allow mp bonuses" "Bonuses that increase mp and improve mc of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_res yes "Allow resistance bonuses" "Bonuses that increase resistance of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_def yes "Allow defense bonuses" "Bonuses that improve defense of units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_abilities yes "Allow ability bonuses" "Bonuses that add new abilities and weapon specials"}
		{GAME_OPTION_CHECKBOX qqrb_allow_weapons yes "Allow weapon bonuses" "Bonuses that add new weapons to units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_mercs yes "Allow mercenaries bonuses" "Bonuses that give extra units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_loyal yes "Allow loyal bonuses" "Bonuses that make units loyal / upkeepless"}
		{GAME_OPTION_CHECKBOX qqrb_allow_copy yes "Allow copy bonuses" "Bonuses that copy units"}
		{GAME_OPTION_CHECKBOX qqrb_allow_gold yes "Allow gold bonuses" "Bonuses that give extra gold"}
	[/options]
#enddef

#define RB_DEFINITIONS
	[set_variables]
		name=qqrb_bonus_definitions
		mode=replace

		[value] # group
			nothing=nothing # used when no other bonus is available due to game settings, it only reports it's existence
			xp_weak=xp
			xp_med=xp
			xp_str=xp
			xp_extr=xp
			xp_myth=xp
			max_xp_reduce_str=max_xp_red
			max_xp_reduce_extr=max_xp_red
			max_xp_reduce_myth=max_xp_red
			hp_heal_weak=reheal
			hp_heal_med=reheal
			hp_heal_str=reheal
			hp_heal_extr=reheal
		[/value]

		[value] # strength
			nothing=weak
			xp_weak=weak
			xp_med=medium
			xp_str=strong
			xp_extr=extreme
			xp_myth=mythical
			max_xp_reduce_str=strong
			max_xp_reduce_extr=extreme
			max_xp_reduce_myth=mythical
			hp_heal_weak=weak
			hp_heal_med=medium
			hp_heal_str=strong
			hp_heal_extr=extreme
		[/value]

		[value] # no of parameters
			nothing=0
			xp_weak=1
			xp_med=1
			xp_str=1
			xp_extr=1
			xp_myth=1
			max_xp_reduce_str=1
			max_xp_reduce_extr=1
			max_xp_reduce_myth=1
			hp_heal_weak=1
			hp_heal_med=1
			hp_heal_str=1
			hp_heal_extr=1
		[/value]

		[value] # parameter a range
			xp_weak="2..4"
			xp_med="6..10"
			xp_str="12..20"
			xp_extr="25..35"
			xp_myth="50..70"
			max_xp_reduce_str="5..10"
			max_xp_reduce_extr="10..15"
			max_xp_reduce_myth="18..24"
			hp_heal_weak="6..12"
			hp_heal_med="12..25"
			hp_heal_str="25..50"
			hp_heal_extr="50..100"
		[/value]

	[/set_variables]
#enddef

#define RB_READABLE_NAME_GENERATOR SWITCH_VAR SELECTOR
	[switch]
		variable={SWITCH_VAR}

		[case]
			value=nothing
			{VARIABLE {SELECTOR}.bonus_readable "nothing"}
		[/case]
		[case]
			value=xp
			{VARIABLE {SELECTOR}.bonus_readable "+${SELECTOR}.param_1 xp"}
		[/case]
		[case]
			value=max_xp_red
			{VARIABLE {SELECTOR}.bonus_readable "-${SELECTOR}.param_1|% max xp"}
		[/case]
		[case]
			value=reheal
			{VARIABLE {SELECTOR}.bonus_readable "reheal ${SELECTOR}.param_1|% hp"}
		[/case]
		[else]
			[chat]
				speaker="UWS Random Bonuses"
				message="Bonus group ${SWITCH_VAR} is not recognizable. Please notify the addon maintainer."
			[/chat]
		[/else]
	[/switch]
#enddef

#define RB_APPLY_BONUS_EVENT
	[event]
		name=qqrb_apply_bonus
		first_time_only=no

		[switch]
			variable=qqrb_bonuses[$i].apply_group

			[case]
				value=xp

				{VARIABLE unit_xp $unit.experience}
				{VARIABLE_OP unit_xp add $qqrb_bonuses[$i].param_1}

				[if]
					[variable]
						name=unit_xp
						greater_than_equal_to=$unit.max_experience
					[/variable]
					[then]
						{VARIABLE unit_xp "$( $unit.max_experience - 1 )"}
					[/then]
				[/if]
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					experience=$unit_xp
				[/modify_unit]
			[/case]
			[case]
				value=max_xp_red
				
				[modify_unit]
					[filter]
						id=$unit.id
					[/filter]

					[object]
						silent=yes

						[effect]
							apply_to=max_experience
							increase="-$qqrb_bonuses[$i].param_1|%"
						[/effect]
					[/object]
				[/modify_unit]
			[/case]
			[case]
				value=reheal
				
				{VARIABLE reheal_p $qqrb_bonuses[$i].param_1}
				{VARIABLE reheal_amount "$( ceil($unit.max_hitpoints * $reheal_p / 100) "}

				[heal_unit]
					[filter]
						id=$unit.id
					[/filter]

					amount=$reheal_amount
					animate=no
					restore_statuses=no
				[/heal_unit]
			[/case]
		[/switch]

		[floating_text]
			x=$unit.x
			y=$unit.y
			text="<span color='#22ff22'>$qqrb_bonuses[$i].bonus_readable</span>"
		[/floating_text]

		[remove_item]
			x=$qqrb_bonuses[$i].x
			y=$qqrb_bonuses[$i].y
			image="halo/elven/faerie-fire-halo[1~7].png:125"
		[/remove_item]

		{VARIABLE collected_bonuses "$unit.variables.qqrb_collected_bonuses
$qqrb_bonuses[$i].bonus_readable"}

		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]

			[variables]
				qqrb_collected_bonuses=$collected_bonuses
			[/variables]

			[object]
				silent=yes

				[effect]
					apply_to=remove_ability
					[abilities]
						[dummy]
							id=qqrb_unit_info
						[/dummy]
					[/abilities]
				[/effect]
				[effect]
					apply_to=new_ability
					[abilities]
						[dummy]
							id=qqrb_unit_info
							name="collected bonuses"
							description="Bonuses collected so far:
$collected_bonuses"
						[/dummy]
					[/abilities]
				[/effect]
			[/object]
		[/modify_unit]
	[/event]
#enddef