#define QQUWS_SPAWN
	[event]
		name=spawn
		first_time_only=no
		
		{VARIABLE do_spawn_west $spawn_west}
		{VARIABLE do_spawn_east $spawn_east}
		
		[if]
			[variable]
				name=uws_spawn.x
				numerical_equals=$uws_game.middle
			[/variable]
			[or]
				[variable]
					name=uws_game.hns_single_side
					boolean_equals=yes
				[/variable]
			[/or]
			[or]
				[variable]
					name=uws_game.mode
					equals=pillagers
				[/variable]
			[/or]
			[then]
				{VARIABLE do_spawn_east no}
			[/then]
			[else]
				[if]
					[variable]
						name=uws_game.mode
						equals=scroll
					[/variable]
					[and]
						[variable]
							name=uws_game.single_player_game
							boolean_equals=yes
						[/variable]
					[/and]
					[then]
						[if]
							[variable]
								name=sides[8].is_present
								boolean_equals=yes
							[/variable]
							[then]
								{VARIABLE do_spawn_west yes}
								{VARIABLE do_spawn_east no}
							[/then]
							[else]
								{VARIABLE do_spawn_west no}
								{VARIABLE do_spawn_east yes}
							[/else]
						[/if]
					[/then]
				[/if]
			[/else]
		[/if]
		
		{VARIABLE unit_placement_y $uws_spawn.y}
		
		{VARIABLE is_lava_safe no}
		[if]
			[variable]
				name=uws_spawn.final_boss
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE is_lava_safe yes}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.clear_boss_tile_overlay
				boolean_equals=yes
			[/variable]
			[then]
				[terrain]
					x=$uws_spawn.x
					y=$uws_spawn.y
					layer=overlay
					terrain="^"
				[/terrain]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.buff
				not_equals=""
			[/variable]
			[then]
				{VARIABLE is_lava_safe yes}
			[/then]
		[/if]
		
		{VARIABLE new_unit_has_item no}
		{VARIABLE current_random_item_id ""}
		[if]
			[variable]
				name=uws_spawn.item
				not_equals=""
			[/variable]
			[then]
				{VARIABLE new_unit_has_item yes}
				{VARIABLE current_random_item_id $uws_spawn.item}
			[/then]
		[/if]
		
		{VARIABLE unit_has_gold no}
		{VARIABLE new_unit_gold 0}
		[if]
			[variable]
				name=uws_spawn.gold
				greater_than=0
			[/variable]
			[then]
				{VARIABLE unit_has_gold yes}
				{VARIABLE new_unit_gold $uws_spawn.gold}
			[/then]
		[/if]
		
		{VARIABLE new_unit_spawn_quiet_bonus_id $uws_spawn.quiet_buff}
		{VARIABLE new_unit_spawn_minion ""}
		{VARIABLE new_unit_bulky_value $uws_spawn.bulky}
		{VARIABLE new_unit_beefy_value $uws_spawn.beefy}
		{VARIABLE new_unit_armored_value $uws_spawn.armored}
		{VARIABLE new_unit_fast_value $uws_spawn.fast}
		{VARIABLE new_unit_agile_value $uws_spawn.agile}
		{VARIABLE uws_spawn.side_east $uws_spawn.side}
		
		[if]
			[variable]
				name=uws_spawn.side
				greater_than=1
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.mode
						equals=arena
					[/variable]
					[then]
						{VARIABLE_OP uws_spawn.side_east add 1}
					[/then]
					[else]
						{VARIABLE_OP uws_spawn.side_east add 3}
					[/else]
				[/if]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=do_spawn_west
				boolean_equals=yes
			[/variable]
			[then]
				[fire_event]
					name=get_new_unit_on_map
				[/fire_event]
				
				[if]
					[variable]
						name=uws_spawn.name
						not_equals=""
					[/variable]
					[and]
						[variable]
							name=uws_spawn.final_boss
							boolean_equals=no
						[/variable]
					[/and]
					[then]
						{VARIABLE spawning_unit.name $uws_spawn.name}
					[/then]
				[/if]
				
				[unstore_unit]
					variable=spawning_unit
					find_vacant=yes
					x=$uws_spawn.x
					y=$uws_spawn.y
					fire_event=yes
				[/unstore_unit]
				
				{VARIABLE new_unit_spawn_id $spawning_unit.id}
				{VARIABLE run_events_for_side $uws_spawn.side}
				
				[if]
					[variable]
						name=uws_spawn.recruits
						not_equals=no
					[/variable]
					[then]
						{SET_GOLD_FOR_SIDE $uws_spawn.side $uws_spawn.recruitment_gold}
						
						[fire_event]
							name=race_ensure_one_recruiter
						[/fire_event]
						
						[fire_event]
							name=slash_call_to_fight
						[/fire_event]
					[/then]
				[/if]
				
				{VARIABLE new_unit_spawn_champion $uws_spawn.buff}
				
				{VARIABLE new_unit_y $uws_spawn.y}
				
				[if]
					[variable]
						name=uws_spawn.x
						numerical_equals=$uws_game.middle
					[/variable]
					[then]
						[fire_event]
							name=copy_values_for_center_handicap_calculation
						[/fire_event]
						
						{VARIABLE calculate_handicap_for 10}
						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/then]
					[else]
						{VARIABLE calculate_handicap_for 8}

						[if]
							[variable]
								name=uws_game.mode
								equals=arena
							[/variable]
							[then]
								{VARIABLE calculate_handicap_for 1}
							[/then]
						[/if]

						[fire_event]
							name=calculate_handicap
						[/fire_event]
					[/else]
				[/if]
				
				[fire_event]
					name=apply_new_unit_bonus
				[/fire_event]
				
				[if]
					[variable]
						name=uws_spawn.event
						not_equals=""
					[/variable]
					[then]
						{VARIABLE gameplay_event_id $uws_spawn.event}
						{VARIABLE new_gpe_id "gpe_$new_unit_spawn_id"}
						{VARIABLE gpe_owner_side $uws_spawn.side}
						{VARIABLE gpe_owner_unit $new_unit_spawn_id}
						
						[fire_event]
							name=register_gameplay_event
						[/fire_event]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=uws_spawn.calls_for_help
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE new_high_point_tmp $uws_spawn.y}
						{VARIABLE_OP new_high_point_tmp sub 5}
						{VARIABLE_OP new_high_point_tmp add $race_spawn_look_ahead}
						
						[if]
							[variable]
								name=new_high_point_tmp
								less_than=$sides[8].race_high_point
							[/variable]
							[then]
								{VARIABLE sides[8].race_high_point $new_high_point_tmp}
								# west cutoff var is used when iterating through the spawn table on spawn event, changing here spawns more units
								{VARIABLE west_cutoff $sides[8].race_high_point}
								{VARIABLE_OP west_cutoff sub $race_spawn_look_ahead}
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=uws_spawn.story_message
						not_equals=""
					[/variable]
					[then]
						{FLASH_RED (
							[message]
								id=$new_unit_spawn_id
								message="$uws_spawn.story_message"
							[/message]
						)}
						
						[if]
							[variable]
								name=uws_spawn.story_response
								not_equals=""
							[/variable]
							[then]
								[store_unit]
									[filter]
										side=$uws_game.filter_human_sides
										canrecruit=yes
									[/filter]
									
									variable=message_leader
									mode=always_clear
								[/store_unit]
				
								[message]
									id=$message_leader.id
									message="$uws_spawn.story_response"
								[/message]
								
								{CLEAR_VARIABLE message_leader}
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=uws_spawn.final_boss
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE is_lava_safe yes}
						
						[if]
							[variable]
								name=uws_game.mode
								equals=slash
							[/variable]
							[then]
								[event]
									id=final_boss_warning
									name=die
									first_time_only=no
									delayed_variable_substitution=no
									
									[if]
										[have_unit]
											side=2,3,4
											x=2-100
											count=6-9
										[/have_unit]
										[then]
											[message]
												id=$new_unit_spawn_id
												message="You think you can threaten me? YOU?! Bring me their heads!"
											[/message]
											
											[modify_unit]
												[filter]
													side=2,3,4
													status=guardian
												[/filter]
												
												[status]
													guardian=no
												[/status]
											[/modify_unit]
											
											[remove_event]
												id=final_boss_warning
											[/remove_event]
										[/then]
									[/if]
								[/event]
								
								[event]
									id=final_boss_give_mp_to_units
									name=die
									first_time_only=no
									delayed_variable_substitution=no
									
									[if]
										[have_unit]
											side=2,3,4
											x=2-100
											count=1-5
										[/have_unit]
										[then]
											[message]
												id=$new_unit_spawn_id
												message="Move you lazy maggots! Kill them!!!"
											[/message]
											
											[modify_unit]
												[filter]
													side=2,3,4
													formula="if(self.max_moves < 3, 1, 0)"
												[/filter]
												
												[object]
													silent=yes
													
													[effect]
													    apply_to=movement
													    set=6
													[/effect]
												[/object]
											[/modify_unit]
											
											[modify_unit]
												[filter]
													side=2,3,4
													x=3-100
													canrecruit=yes
												[/filter]
												
												canrecruit=no
											[/modify_unit]
											
											[remove_event]
												id=final_boss_give_mp_to_units
											[/remove_event]
										[/then]
									[/if]
								[/event]
							[/then]
						[/if]
					[/then]
				[/if]
			[/then]
		[/if]
		
		[if]
			[variable]
				name=do_spawn_east
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=uws_game.full_random
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE uws_spawn.type $uws_spawn.second_random}
					[/then]
				[/if]
				
				[if]
					[variable]
						name=new_unit_has_item
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE current_random_item_id $uws_spawn.second_item}
					[/then]
				[/if]
				
				[fire_event]
					name=get_new_unit_on_map
				[/fire_event]
				
				{VARIABLE spawning_unit.side $uws_spawn.side_east}
				{VARIABLE east_x $uws_game.edge}
				{VARIABLE_OP east_x sub $uws_spawn.x}
				
				[if]
					[variable]
						name=uws_spawn.second_name
						not_equals=""
					[/variable]
					[then]
						{VARIABLE spawning_unit.name $uws_spawn.second_name}
					[/then]
				[/if]
				
				[unstore_unit]
					variable=spawning_unit
					find_vacant=yes
					x=$east_x
					y=$uws_spawn.y
					fire_event=yes
				[/unstore_unit]
				
				{VARIABLE new_unit_spawn_id $spawning_unit.id}
				{VARIABLE run_events_for_side $uws_spawn.side_east}
				
				[if]
					[variable]
						name=uws_spawn.recruits
						not_equals=no
					[/variable]
					[then]
						{SET_GOLD_FOR_SIDE $uws_spawn.side_east $uws_spawn.recruitment_gold}
						
						[fire_event]
							name=race_ensure_one_recruiter
						[/fire_event]
						
						[fire_event]
							name=slash_call_to_fight
						[/fire_event]
					[/then]
				[/if]
				
				{VARIABLE new_unit_spawn_champion $uws_spawn.second_buff}
				{VARIABLE calculate_handicap_for 9}
				{VARIABLE new_unit_y $uws_spawn.y}
				[if]
					[variable]
						name=uws_game.mode
						equals=arena
					[/variable]
					[then]
						{VARIABLE calculate_handicap_for 2}
					[/then]
				[/if]
				
				[fire_event]
					name=calculate_handicap
				[/fire_event]
				
				[fire_event]
					name=apply_new_unit_bonus
				[/fire_event]
				
				[if]
					[variable]
						name=uws_spawn.calls_for_help
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE new_high_point_tmp $uws_spawn.y}
						{VARIABLE_OP new_high_point_tmp sub 5}
						{VARIABLE_OP new_high_point_tmp add $race_spawn_look_ahead}
						
						[if]
							[variable]
								name=new_high_point_tmp
								less_than=$sides[9].race_high_point
							[/variable]
							[then]
								# for slash on both sides this sides[9] can be ignored. I think...
								{VARIABLE sides[9].race_high_point $new_high_point_tmp}
								# west east_cutoff var is used when iterating through the spawn table on spawn event, changing here spawns more units
								{VARIABLE east_cutoff $sides[9].race_high_point}
								{VARIABLE_OP east_cutoff sub $race_spawn_look_ahead}
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=uws_spawn.event
						not_equals=""
					[/variable]
					[then]
						{VARIABLE gameplay_event_id $uws_spawn.event}
						{VARIABLE new_gpe_id "gpe_$new_unit_spawn_id"}
						{VARIABLE gpe_owner_side $uws_spawn.side_east}
						{VARIABLE gpe_owner_unit $new_unit_spawn_id}
						
						[fire_event]
							name=register_gameplay_event
						[/fire_event]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
	
	[event]
		name=get_new_unit_on_map
		first_time_only=no
		
		[unit]
			type=$uws_spawn.type
			side=$uws_spawn.side
			to_variable=spawning_unit
			random_traits=no
			random_gender=yes
			upkeep=loyal
			[variables]
				has_item=$new_unit_has_item
				item_id=$current_random_item_id
				has_gold=$unit_has_gold
				gold_amount=$uws_spawn.gold
				final_boss=$uws_spawn.final_boss
				is_lava_safe=$is_lava_safe
				placement_y=$unit_placement_y
				is_stoic=$uws_spawn.disallow_slash_unguardian
				calls_for_help=$uws_spawn.calls_for_help
				recruit_armored=$uws_spawn.recruit_armored
				recruit_minion=$uws_spawn.recruit_minion
				race_points_value=$uws_spawn.race_points_value
			[/variables]
		[/unit]
		
		[if]
			[variable]
				name=uws_spawn.final_boss
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE spawning_unit.status.unpoisonable yes}
				{VARIABLE spawning_unit.status.undrainable yes}
				{VARIABLE spawning_unit.status.unplagueable yes}
				{VARIABLE spawning_unit.status.unpetrifiable yes}
				{VARIABLE spawning_unit.facing s}
				{VARIABLE spawning_unit.name $uws_game.final_boss_name}
				{VARIABLE spawning_unit.unrenamable yes}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.recruits
				not_equals=no
			[/variable]
			[then]
				{VARIABLE spawning_unit.canrecruit yes}
				{VARIABLE spawning_unit.extra_recruit $uws_spawn.recruits}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.damaged
				greater_than=0
			[/variable]
			[then]
				{VARIABLE_OP spawning_unit.hitpoints multiply $uws_spawn.damaged}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.moves
				greater_than=-1
			[/variable]
			[then]
				{VARIABLE spawning_unit.moves $uws_spawn.moves}
				{VARIABLE spawning_unit.max_moves $uws_spawn.moves}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.guard
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE spawning_unit.status.guardian yes}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_spawn.side
				equals=1
			[/variable]
			[then]
				{VARIABLE spawning_unit.status.petrified yes}
			[/then]
		[/if]

		[if]
			[variable]
				name=uws_spawn.delayed
				greater_than=-1
			[/variable]
			[then]
				{VARIABLE spawning_unit.status.petrified yes}
				{VARIABLE spawning_unit.variables.unpetrify_turn "$( $turn_number + $uws_spawn.delayed )"}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=copy_values_for_center_handicap_calculation
		first_time_only=no
		
		{VARIABLE sides[10].gold_income "$( max($sides[8].gold_income, $sides[9].gold_income) )"}
		{VARIABLE sides[10].village_income "$( max($sides[8].village_income, $sides[9].village_income) )"}
		{VARIABLE sides[10].xp_mod_hp "$( max($sides[8].xp_mod_hp, $sides[9].xp_mod_hp) + floor(min($sides[8].xp_mod_hp, $sides[9].xp_mod_hp) * 0.5) )"}
		{VARIABLE sides[10].xp_mod_mp "$( max($sides[8].xp_mod_mp, $sides[9].xp_mod_mp) + floor(min($sides[8].xp_mod_mp, $sides[9].xp_mod_mp) * 0.5) )"}
		{VARIABLE sides[10].xp_mod_dmg "$( max($sides[8].xp_mod_dmg, $sides[9].xp_mod_dmg) + floor(min($sides[8].xp_mod_dmg, $sides[9].xp_mod_dmg) * 0.5) )"}
		{VARIABLE sides[10].xp_mod_str "$( max($sides[8].xp_mod_str, $sides[9].xp_mod_str) + floor(min($sides[8].xp_mod_str, $sides[9].xp_mod_str) * 0.5) )"}
		{VARIABLE sides[10].is_leader_above_lvl2 no}
		{VARIABLE sides[10].xp_modifier "$( min($sides[8].xp_modifier, $sides[9].xp_modifier) )"}
		
		[if]
			[variable]
				name=sides[8].is_leader_above_lvl2
				boolean_equals=yes
			[/variable]
			[or]
				[variable]
					name=sides[9].is_leader_above_lvl2
					boolean_equals=yes
				[/variable]
			[/or]
			[then]
				{VARIABLE sides[10].is_leader_above_lvl2 yes}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=calculate_handicap
		first_time_only=no
		
		{VARIABLE new_unit_bonus_hp 0}
		{VARIABLE new_unit_bonus_dmg 0}
		{VARIABLE new_unit_bonus_strikes 0}
		{VARIABLE bonus_breakdown ""}
		
		[switch]
			variable=uws_game.mode

			[case]
				value=scroll

				{VARIABLE bonus_strength_kval "$(ceil(($turn_number + $uws_game.base_bonus_strength_kval) / 8))"}
			[/case]
			[case]
				value=pillagers

				{VARIABLE bonus_strength_kval "$(ceil(($turn_number + $uws_game.base_bonus_strength_kval) / 3))"}
			[/case]
			[else]
				{VARIABLE bonus_strength_kval "$(ceil(($uws_game.race_start_y - $new_unit_y + $uws_game.base_bonus_strength_kval) / 10))"}
				
				[if]
					[variable]
						name=bonus_strength_kval
						less_than=1
					[/variable]
					[then]
						{VARIABLE bonus_strength_kval 1}
					[/then]
				[/if]
			[/else]
		[/switch]
		
		{UWS_XPMOD_EXPANDED_SETTINGS}
		{VARIABLE hp_income_multiplier "$(1.15 - $bonus_strength_kval * 0.035)"}
		
		[if]
			[variable]
				name=uws_game.basic_income
				less_than=$sides[$calculate_handicap_for|].gold_income
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_starting_value $sides[$calculate_handicap_for|].gold_income}
				
				{VARIABLE penalty_value "$( $bonus_strength_kval * 2 * $hp_income_multiplier * ($penalty_starting_value - $uws_game.basic_income) )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $bonus_strength_kval * 0.8 * $hp_income_multiplier * ($penalty_starting_value - $uws_game.basic_income) )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("High income: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_game.basic_village_total
				less_than=$sides[$calculate_handicap_for|].village_income
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_starting_value $sides[$calculate_handicap_for|].village_income}
				
				{VARIABLE penalty_value "$( $bonus_strength_kval * 2.4 * $hp_income_multiplier * ($penalty_starting_value - $uws_game.basic_village_total) )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $bonus_strength_kval * 0.8 * $hp_income_multiplier * ($penalty_starting_value - $uws_game.basic_village_total) )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("High village income: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=bonustile_enabled
				boolean_equals=yes
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE starter_value 5}
				{VARIABLE mult_value 1}
				[if]
					[variable]
						name=bonus_strength_kval
						greater_than=8
					[/variable]
					[then]
						{VARIABLE starter_value 34}
						{VARIABLE mult_value 1}
					[/then]
					[else]
						[if]
							[variable]
								name=bonus_strength_kval
								greater_than=4
							[/variable]
							[then]
								{VARIABLE starter_value 18}
								{VARIABLE mult_value 3}
							[/then]
							[else]
								{VARIABLE starter_value 6}
								{VARIABLE mult_value 6}
							[/else]
						[/if]
					[/else]
				[/if]
				
				{VARIABLE penalty_value "$( $bonus_strength_kval * $mult_value + $starter_value )"}
				{VARIABLE_OP penalty_value round 1}
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE bonus_breakdown ("Bonus Tile mod: +$penalty_value|% hp
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=How_Much_We_Do_Funny_Bonuses
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( sqrt($How_Much_We_Do_Funny_Bonuses) * $bonus_strength_kval * (3.2 + (8 * $bonus_strength_kval / 50 - 1.2) / 2 ) )"}
				{VARIABLE penalty_dmg_value "$( sqrt($How_Much_We_Do_Funny_Bonuses) * $bonus_strength_kval )"}
				
				[if]
					[variable]
						name=uws_game.mode
						equals=scroll
					[/variable]
					[then]
						{VARIABLE_OP penalty_value multiply 2}
						{VARIABLE_OP penalty_dmg_value multiply 2}
					[/then]
				[/if]
				
				{VARIABLE_OP penalty_value round 1}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("Bonus Spam mod: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=aww_04_passive_xp
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( $aww_04_passive_xp * 1.6 * $bonus_strength_kval )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $aww_04_passive_xp * 0.4 * $bonus_strength_kval )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("Passive XP: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=exp_assigned
				boolean_equals=yes
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( $bonus_strength_kval * 4 + 26 )"}
				
				[if]
					[variable]
						name=XP_bank_start
						greater_than=0
					[/variable]
					[then]
						{VARIABLE_OP penalty_value add "$( floor($XP_bank_start / if($bonus_strength_kval < 10, $bonus_strength_kval ^ 1.5 + 0.5, 200)) )"}
					[/then]
				[/if]
				
				{VARIABLE_OP penalty_value round 1}
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE bonus_breakdown ("XP Bank: +$penalty_value|% hp
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=sides[$calculate_handicap_for|].xp_mod_hp
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE mod_used_total $sides[$calculate_handicap_for|].xp_mod_hp}
				
				{VARIABLE penalty_value "$( $mod_used_total * $uws_xpmod_hp_factor )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $mod_used_total * $uws_xpmod_hp_factor )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP mod_used_total multiply 4}
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("XP Mod +$mod_used_total HP: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=sides[$calculate_handicap_for|].xp_mod_mp
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE mod_used_total $sides[$calculate_handicap_for|].xp_mod_mp}
				
				{VARIABLE penalty_value "$( ($mod_used_total ^ 2) * $uws_xpmod_mp_factor_hp )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $mod_used_total * $uws_xpmod_mp_factor_dmg )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("XP Mod +$mod_used_total MP: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=sides[$calculate_handicap_for|].xp_mod_dmg
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE mod_used_total $sides[$calculate_handicap_for|].xp_mod_dmg}
				
				{VARIABLE penalty_value "$( $mod_used_total * $uws_xpmod_dmg_factor_hp )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $mod_used_total * $uws_xpmod_dmg_factor_dmg )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("XP Mod +$mod_used_total Damage: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=sides[$calculate_handicap_for|].xp_mod_str
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE mod_used_total $sides[$calculate_handicap_for|].xp_mod_str}
				
				{VARIABLE penalty_value "$( 2.8 + ($mod_used_total ^ 2) * if(bonus_factor < 0.2, 0.2, bonus_factor) where bonus_factor = (0.76 - $mod_used_total * $uws_xpmod_strike_factor_hp) )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE penalty_dmg_value "$( $mod_used_total * $uws_xpmod_strike_factor_dmg )"}
				{VARIABLE_OP penalty_dmg_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("XP Mod +$mod_used_total Strikes: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=sides[$calculate_handicap_for|].is_leader_above_lvl2
				boolean_equals=yes
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				[if]
					[variable]
						name=bonus_strength_kval
						less_than=6
					[/variable]
					[then]
						{VARIABLE penalty_value "$( [36,28,20,12,4][ $bonus_strength_kval - 1 ] )"}
						{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
						{VARIABLE bonus_breakdown ("Starting with high level leader: +$penalty_value|% hp
$bonus_breakdown")}
					[/then]
				[/if]
			[/then]
		[/if]
		
		{VARIABLE very_strong_eras "DMM_Shops_Mod,DMMH_Shops_Mod,DMML_Shops_Mod,DMMLH_Shops_Mod"}
		[if]
			[variable]
				name=very_strong_eras
				contains=$current_era_id
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( 32 + $bonus_strength_kval * 8 )"}
				{VARIABLE penalty_dmg_value "$( 24 + $bonus_strength_kval * 8 )"}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("Strong Era settings: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]

		[if]
			[variable]
				name=sides[$calculate_handicap_for|].xp_modifier
				less_than=$uws_game.xp_modifier
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE xp_mod_diff $uws_game.xp_modifier}
				{VARIABLE_OP xp_mod_diff sub $sides[$calculate_handicap_for|].xp_modifier}
				{VARIABLE penalty_value "$( 15 + 0.15 * $xp_mod_diff * $bonus_strength_kval )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE bonus_breakdown ("$sides[$calculate_handicap_for|].xp_modifier|% xp modifier: +$penalty_value|% hp
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=aww_10_enable_gifted_leaders
				boolean_equals=yes
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value 8}
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE bonus_breakdown ("Gifted leaders mod: +$penalty_value|% hp
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=Progressive_Mod_lvlup_per_unit
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( if($bonus_strength_kval < 20, 40 - 2 * $bonus_strength_kval, 20) )"}
				{VARIABLE penalty_dmg_value "$( if($bonus_strength_kval < 10, 15 - $bonus_strength_kval, 5) )"}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE_OP new_unit_bonus_dmg add $penalty_dmg_value}
				{VARIABLE bonus_breakdown ("Progressive Mod mod: +$penalty_value|% hp / +$penalty_dmg_value|% dmg
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=UR_gold_for_recruits
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=uws_game.spawn_weak_enemies
					boolean_equals=false
				[/variable]
			[/and]
			[then]
				{VARIABLE penalty_value "$( if($bonus_strength_kval < 8 and $UR_gold_for_recruits > 30, ( sqrt($UR_gold_for_recruits) * 5 ) / ($bonus_strength_kval + 0.5), 5) )"}
				{VARIABLE_OP penalty_value round 1}
				
				{VARIABLE_OP new_unit_bonus_hp add $penalty_value}
				{VARIABLE bonus_breakdown ("Ultimate Recruits mod: +$penalty_value|% hp
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_game.enable_scenario_bonus
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE_OP new_unit_bonus_hp add $uws_game.scenario_bonus_hp}
				{VARIABLE bonus_text "Scenario bonus: +$uws_game.scenario_bonus_hp|% hp"}
				
				[if]
					[variable]
						name=uws_game.scenario_bonus_dmg
						greater_than=0
					[/variable]
					[then]
						{VARIABLE_OP new_unit_bonus_dmg add $uws_game.scenario_bonus_dmg}
						{VARIABLE bonus_text "$bonus_text / +$uws_game.scenario_bonus_dmg|% dmg"}
					[/then]
				[/if]
				
				[if]
					[variable]
						name=uws_game.scenario_bonus_strikes
						greater_than=0
					[/variable]
					[then]
						{VARIABLE_OP new_unit_bonus_strikes add $uws_game.scenario_bonus_strikes}
						{VARIABLE bonus_text "$bonus_text / +$uws_game.scenario_bonus_strikes strikes"}
					[/then]
				[/if]
				
				{VARIABLE bonus_breakdown ("$bonus_text
$bonus_breakdown")}
			[/then]
		[/if]
		
		[if]
			[variable]
				name=uws_game.spawn_weak_enemies
				boolean_equals=yes
			[/variable]
			[then]
				{VARIABLE_OP new_unit_bonus_dmg sub 15}
				{VARIABLE bonus_breakdown ("Easy difficuty: +0% hp / -15% dmg
$bonus_breakdown")}
			[/then]
		[/if]
	[/event]
	
	[event]
		name=generate_champion_data
		first_time_only=no
		
		[if]
			[variable]
				name=is_single_buff_random
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=champion_unit_already_exists
						boolean_equals=yes
					[/variable]
					[then]
						{VARIABLE champion_unit_id $new_unit_spawn_id}
					[/then]
					[else]
						[unit]
							type=$prespawn_champion_type
							side=1
							to_variable=new_champion_precheck_unit
							random_traits=no
							random_gender=yes
							upkeep=loyal
							[abilities]
								[hides]
									id=hidden
									name= _ "hidden"
									female_name= _ "female^hidden"
									name_inactive= _ "hidden"
									female_name_inactive= _ "female^hidden"
									description= _ "This unit is hidden."
									affect_self=yes
									[filter_self]
										[filter_location]
											terrain=*
										[/filter_location]
									[/filter_self]
								[/hides]
							[/abilities]
						[/unit]
						
						[unstore_unit]
							variable=new_champion_precheck_unit
							x=1
							y=1
						[/unstore_unit]

						{VARIABLE champion_unit_id $new_champion_precheck_unit.id}
					[/else]
				[/if]
				
				[set_variables]
					name=qquws_champion_data
					mode=replace
					[value]
						has_ranged_attack=no
						has_melee_attack=no
						has_magical_melee=no
						has_magical_ranged=no
						has_melee_pierce=no
						has_melee_charge=no
						is_static=no
						has_physical_resistances=no
						has_berserk=no
						is_high_level=no
						has_strong_melee_blade=no
						has_overwhelming_melee_blade=no
						has_strong_impact=no
						has_poison=no
						has_astral_imprisonment=no
						has_sickness=no
						has_endurance=no
						is_chaotic=no
						has_dark_pact=no
						has_protected_by_darkness=no
						has_ranged_slow=no
						has_heavy_stun=no
						has_fire_attack=no
						has_cold_attack=no
						has_strong_cold_ability=no
					[/value]
				[/set_variables]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							formula="if(range='ranged' and damage * number > 4, 1, 0)"
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_ranged_attack yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							formula="if(range='melee' and damage * number > 5, 1, 0)"
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_melee_attack yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=melee
							special_id=magical
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_magical_melee yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=ranged
							special_id=magical
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_magical_ranged yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=melee
							type=pierce
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_melee_pierce yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=melee
							special_id=charge
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_melee_charge yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							special_id=berserk
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_berserk yes}
					[/then]
				[/if]
				
				[if]
					[variable]
						name=prespawn_moves
						numerical_equals=0
					[/variable]
					[then]
						{VARIABLE qquws_champion_data.is_static yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						formula="if(avg_res > 0 and avg_res < 33, 1, 0)
							where avg_res = ((resistance.blade + resistance.impact + resistance.pierce) / 3)"
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_physical_resistances yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						level=3,4,5,6,7
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.is_high_level yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=melee
							type=blade
							damage=20-999
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_strong_melee_blade yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=melee
							type=blade
							damage=16-999
							number=4-99
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_overwhelming_melee_blade yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							type=impact
							damage=18-999
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_strong_impact yes}
					[/then]
				[/if]
				
				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							special_id=poison
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_poison yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							special_id=qquws_astral_imprisonment
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_astral_imprisonment yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							special_id=qquws_sickness
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_sickness yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						ability=qquws_endurance,AE_chs_physical_endurance
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_endurance yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						formula="if(alignment = chaotic, 1, 0)"
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.is_chaotic yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						ability=qquws_dark_pact
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_dark_pact yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						ability=qquws_protected_by_darkness
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_protected_by_darkness yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							range=ranged
							special_id=slow
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_ranged_slow yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							type=impact
							special_id=qquws_heavy_stun
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_heavy_stun yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							type=fire
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_fire_attack yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							type=cold
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_cold_attack yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						[has_attack]
							special_id=qquws_area_damage,qquws_area_slow,qquws_dragon_breath,AE_mag_dbreath,eoma_dbreath,AE_mag_areaeffectrandom_70,AE_mag_areaeffectrandom_100,eoma_areaeffectrandom_70,eoma_areaeffectrandom_100
						[/has_attack]
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_area_attack yes}
					[/then]
				[/if]

				[if]
					[have_unit]
						id=$champion_unit_id
						ability=qquws_slow_aura,qquws_chronosphere,qquws_lesser_chronosphere,qquws_stillness_aura
						count=1
					[/have_unit]
					[then]
						{VARIABLE qquws_champion_data.has_strong_cold_ability yes}
					[/then]
				[/if]
				
				[qquws_generate_random_champion]
					var_buff_a=prespawn_buff_a
					var_buff_b=prespawn_buff_b
					var_buff_c=prespawn_buff_c
					full_buff=$prespawn_full_buff
				[/qquws_generate_random_champion]
				
				{CLEAR_VARIABLE qquws_champion_data}
			[/then]
		[/if]
		
		[qquws_champion_buff_to_name]
			var_buff_a=$prespawn_buff_a
			var_buff_b=$prespawn_buff_b
			var_buff_c=$prespawn_buff_c
			name_var=prespawn_buff_name
		[/qquws_champion_buff_to_name]
		
		[if]
			[variable]
				name=is_single_buff_random
				boolean_equals=yes
			[/variable]
			[then]
				[if]
					[variable]
						name=champion_unit_already_exists
						boolean_equals=no
					[/variable]
					[then]
						{CLEAR_VARIABLE new_champion_precheck_unit}
						[kill]
							x=1
							y=1
							fire_event=no
						[/kill]
					[/then]
				[/if]
			[/then]
		[/if]
	[/event]
#enddef

#define UWS_XPMOD_EXPANDED_SETTINGS
	{VARIABLE uws_xpmod_hp_factor 0.4}
	{VARIABLE uws_xpmod_mp_factor_hp 0.1}
	{VARIABLE uws_xpmod_mp_factor_dmg 0.25}
	{VARIABLE uws_xpmod_dmg_factor_hp 1.4}
	{VARIABLE uws_xpmod_dmg_factor_dmg 0.2}
	{VARIABLE uws_xpmod_strike_factor_hp 0.03}
	{VARIABLE uws_xpmod_strike_factor_dmg 1.6}
	[if]
		[variable]
			name=sides[$calculate_handicap_for|].enable_expanded_xpmod_rules
			boolean_equals=yes
		[/variable]
		[then]
			[store_unit]
				[filter]
					side=$calculate_handicap_for
				[/filter]
				mode=always_clear
				variable=uws_expanded_xp_mod_units
			[/store_unit]
			
			[foreach]
				array=uws_expanded_xp_mod_units
				variable=uws_unit
				readonly=yes
				
				[do]
					{VARIABLE unit_kills_count $uws_unit.variables.kills}
					{VARIABLE_OP unit_kills_count sub 50}
					{VARIABLE_OP unit_kills_count divide 15}
					{VARIABLE_OP unit_kills_count round floor}
					
					[if]
						[variable]
							name=unit_kills_count
							greater_than=0
						[/variable]
						[then]
							{VARIABLE power_factor "$((1.0 * $unit_kills_count) ^ 1.4)"}
							{VARIABLE_OP uws_xpmod_hp_factor add "$(0.016 * $power_factor)"}
							{VARIABLE_OP uws_xpmod_mp_factor_hp add "$(0.004 * $unit_kills_count)"} # unit kills on purpose
							{VARIABLE_OP uws_xpmod_mp_factor_dmg add "$(0.01 * $power_factor)"}
							{VARIABLE_OP uws_xpmod_dmg_factor_hp add "$(0.06 * $power_factor)"}
							{VARIABLE_OP uws_xpmod_dmg_factor_dmg add "$(0.02 * $power_factor)"}
							{VARIABLE_OP uws_xpmod_strike_factor_hp sub "$(0.002 * $power_factor)"}
							{VARIABLE_OP uws_xpmod_strike_factor_dmg add "$(0.05 * $power_factor)"}
						[/then]
					[/if]
				[/do]
			[/foreach]
			
			{CLEAR_VARIABLE uws_expanded_xp_mod_units}
		[/then]
	[/if]
#enddef


#define SPAWN_SET_VARIABLES
	# type is separate from the other fields because how type value is constructed on lua side
	{VARIABLE uws_spawn.type $spawn_queue[$j].type}
	
	[foreach]
		array=uws_spawn_fields
		variable=field
		readonly=yes
		
		[do]
			{VARIABLE tmp_field $field.name}
			{VARIABLE uws_spawn.$tmp_field $spawn_queue[$j].$tmp_field}
		[/do]
	[/foreach]
#enddef

